import e from"bitcoind-rpc";import t from"chai";import s from"sinon";import a from"sinon-chai";import{Computer as n}from"@bitcoin-computer/lib";import r from"fs";import{createLogger as o,format as c,transports as i}from"winston";import d from"dotenv";import f from"is-primitive";import l from"is-plain-object";import b from"os";import{dirname as u}from"path";import{fileURLToPath as p}from"url";import y from"util";import h from"@bitcoin-computer/bitcore-lib-ltc";import m from"pg-promise";import g from"pg-monitor";import"exponential-backoff";const{deleteProperty:w}=Reflect;const v=f;const S=l;const T=e=>"object"==typeof e&&null!==e||"function"==typeof e;const E=e=>{if(!v(e))throw new TypeError("Object keys must be strings or symbols");if((e=>"__proto__"===e||"constructor"===e||"prototype"===e)(e))throw new Error(`Cannot set unsafe key: "${e}"`)};const $=(e,t)=>t&&"function"==typeof t.split?t.split(e):"symbol"==typeof e?[e]:Array.isArray(e)?e:((e,t,s)=>{const a=(e=>Array.isArray(e)?e.flat().map(String).join(","):e)(t?((e,t)=>{if("string"!=typeof e||!t)return e;let s=e+";";return void 0!==t.arrays&&(s+=`arrays=${t.arrays};`),void 0!==t.separator&&(s+=`separator=${t.separator};`),void 0!==t.split&&(s+=`split=${t.split};`),void 0!==t.merge&&(s+=`merge=${t.merge};`),void 0!==t.preservePaths&&(s+=`preservePaths=${t.preservePaths};`),s})(e,t):e);E(a);const n=x.cache.get(a)||s();return x.cache.set(a,n),n})(e,t,(()=>((e,t={})=>{const s=t.separator||".";const a="/"!==s&&t.preservePaths;if("string"==typeof e&&!1!==a&&/\//.test(e))return[e];const n=[];let r="";const o=e=>{let t;""!==e.trim()&&Number.isInteger(t=Number(e))?n.push(t):n.push(e)};for(let t=0;t<e.length;t++){const a=e[t];"\\"!==a?a!==s?r+=a:(o(r),r=""):r+=e[++t]}return r&&o(r),n})(e,t)));const R=(e,t,s,a)=>{if(E(t),void 0===s)w(e,t);else if(a&&a.merge){const n="function"===a.merge?a.merge:Object.assign;n&&S(e[t])&&S(s)?e[t]=n(e[t],s):e[t]=s}else e[t]=s;return e};const x=(e,t,s,a)=>{if(!t||!T(e))return e;const n=$(t,a);let r=e;for(let e=0;e<n.length;e++){const t=n[e];const o=n[e+1];if(E(t),void 0===o){R(r,t,s,a);break}"number"!=typeof o||Array.isArray(r[t])?(T(r[t])||(r[t]={}),r=r[t]):r=r[t]=[]}return e};x.split=$,x.cache=new Map,x.clear=()=>{x.cache=new Map};var O=x;var N=r;var _="function"==typeof Symbol&&"symbol"==typeof Symbol.iterator?function(e){return typeof e}:function(e){return e&&"function"==typeof Symbol&&e.constructor===Symbol&&e!==Symbol.prototype?"symbol":typeof e};var A="function"==typeof Symbol&&"symbol"==typeof Symbol.iterator?function(e){return typeof e}:function(e){return e&&"function"==typeof Symbol&&e.constructor===Symbol&&e!==Symbol.prototype?"symbol":typeof e};var I=function(){function e(e,t){for(var s=0;s<t.length;s++){var a=t[s];a.enumerable=a.enumerable||!1,a.configurable=!0,"value"in a&&(a.writable=!0),Object.defineProperty(e,a.key,a)}}return function(t,s,a){return s&&e(t.prototype,s),a&&e(t,a),t}}();var H=function e(t,s){var a=s.indexOf(".");if(!~a){if(null==t)return;return t[s]}var n=s.substring(0,a),r=s.substring(a+1);if(null!=t)return t=t[n],r?e(t,r):t},C=O,P=function(e,t){if("function"!=typeof t)return JSON.parse(N.readFileSync(e));N.readFile(e,"utf-8",(function(e,s){try{s=JSON.parse(s)}catch(t){e=e||t}t(e,s)}))},M=r,k=b;var F=function(){function e(t,s){!function(e,t){if(!(e instanceof t))throw new TypeError("Cannot call a class as a function")}(this,e),this.options=s=s||{},s.stringify_width=s.stringify_width||2,s.stringify_fn=s.stringify_fn||null,s.stringify_eol=s.stringify_eol||!1,s.ignore_dots=s.ignore_dots||!1,this.path=t,this.data=this.read()}return I(e,[{key:"set",value:function(e,t,s){var a=this;return"object"===(void 0===e?"undefined":A(e))?function(e,t){var s=0,a=[];if(Array.isArray(e))for(;s<e.length&&!1!==t(e[s],s);++s);else if("object"===(void 0===e?"undefined":_(e))&&null!==e)for(a=Object.keys(e);s<a.length&&!1!==t(e[a[s]],a[s]);++s);}(e,(function(e,t){C(a.data,t,e,s)})):this.options.ignore_dots?this.data[e]=t:C(this.data,e,t,s),this.options.autosave&&this.save(),this}},{key:"get",value:function(e){return e?this.options.ignore_dots?this.data[e]:H(this.data,e):this.toObject()}},{key:"unset",value:function(e){return this.set(e,void 0)}},{key:"append",value:function(e,t){var s=this.get(e);if(s=void 0===s?[]:s,!Array.isArray(s))throw new Error("The data is not an array!");return s.push(t),this.set(e,s),this}},{key:"pop",value:function(e){var t=this.get(e);if(!Array.isArray(t))throw new Error("The data is not an array!");return t.pop(),this.set(e,t),this}},{key:"read",value:function(e){if(!e)try{return P(this.path)}catch(e){return{}}P(this.path,(function(t,s){e(null,s=t?{}:s)}))}},{key:"write",value:function(e,t){return t?M.writeFile(this.path,e,t):M.writeFileSync(this.path,e),this}},{key:"empty",value:function(e){return this.write("{}",e)}},{key:"save",value:function(e){var t=JSON.stringify(this.data,this.options.stringify_fn,this.options.stringify_width,this.options.stringify_eol);return this.write(this.options.stringify_eol?t+k.EOL:t,e),this}},{key:"toObject",value:function(){return this.data}}]),e}();d.config();const B=new F(`${u(p(import.meta.url))}/../../package.json`,{stringify_eol:!0});const{PORT:L,ZMQ_URL:D,CHAIN:W,NETWORK:j,BCN_ENV:K,BCN_URL:G,DEBUG_MODE:q,POSTGRES_USER:U,POSTGRES_PASSWORD:Y,POSTGRES_DB:z,POSTGRES_HOST:V,POSTGRES_PORT:J,RPC_PROTOCOL:X,RPC_USER:Z,RPC_PASSWORD:Q,RPC_HOST:ee,RPC_PORT:te,SERVER_VERSION:se,DEFAULT_WALLET:ae,SYNC_HEIGHT:ne,SYNC_INTERVAL_CHECK:re,POSTGRES_MAX_PARAM_NUM:oe,DB_CONNECTION_RETRY_TIME:ce,SIGNATURE_FRESHNESS_MINUTES:ie,ALLOWED_RPC_METHODS:de,NODE_MAX_PROGRESS:fe,SYNC_MAX_PROGRESS:le,MWEB_HEIGHT:be,BCDB_START_HEIGHT:ue}=process.env;const pe=W||"LTC";const ye=j||"regtest";const he=K||"dev";const me=G||"http://127.0.0.1:3000";const ge=parseInt(q,10)||1;const we=U||"bcn";const ve=Y||"bcn";const Se=z||"bcn";const Te=V||"127.0.0.1";const Ee=parseInt(J,10)||"5432";const $e=X||"http";const Re=Z||"bcn-admin";const xe=Q||"kH4nU5Okm6-uyC0_mA5ztVNacJqZbYd_KGLl6mx722A=";const Oe=ee||"node";const Ne=parseInt(te,10)||19332;const _e=se||B.get("version");const Ae=ae||"defaultwallet";const Ie=parseInt(re,10)||3e3;const He=parseInt(fe,10)||le;const Ce=parseInt(oe,10)||1e4;!de||de.split(",").map((e=>new RegExp(e)));const Pe=parseInt(be||"",10)||432;const Me=o({level:["error","warn","info","http","verbose","debug","silly"][ge],format:c.json(),transports:[new i.Console({format:c.combine(c.colorize(),c.timestamp({format:"MM-DD-YYYY HH:mm:ss"}),c.printf((e=>`[2m${e.timestamp}[0m ${e.level} ${e.message}`)))})],exceptionHandlers:[new i.File({filename:"logs/exceptions.log"})],rejectionHandlers:[new i.File({filename:"logs/rejections.log"})]});const ke={maxFiles:1,maxSize:1e5};ge>=0&&Me.add(new i.File({filename:"error.log",level:"error"})),ge>=1&&Me.add(new i.File({filename:"logs/warn.log",level:"warn",...ke})),ge>=2&&Me.add(new i.File({filename:"logs/info.log",level:"info",...ke})),ge>=3&&Me.add(new i.File({filename:"logs/http.log",level:"http",...ke})),ge>=4&&Me.add(new i.File({filename:"logs/verbose.log",level:"verbose",...ke})),ge>=5&&Me.add(new i.File({filename:"logs/debug.log",level:"debug",...ke}));const Fe=e=>new Promise((t=>{setTimeout(t,e)}));const Be=(e,t)=>Object.assign(new Array(t).fill(null),e);const Le=new e({protocol:$e,user:Re,pass:xe,host:Oe,port:Ne});const De=y.promisify(e.prototype.createwallet.bind(Le));const We=y.promisify(e.prototype.generateToAddress.bind(Le));const je=y.promisify(e.prototype.getaddressinfo.bind(Le));const Ke=y.promisify(e.prototype.getBlock.bind(Le));const Ge=y.promisify(e.prototype.getBlockchainInfo.bind(Le));const qe=y.promisify(e.prototype.getBlockHash.bind(Le));const Ue=y.promisify(e.prototype.getRawTransaction.bind(Le));const Ye=y.promisify(e.prototype.getTransaction.bind(Le));const ze=y.promisify(e.prototype.getNewAddress.bind(Le));const Ve={createwallet:De,generateToAddress:We,getaddressinfo:je,getBlock:Ke,getBlockchainInfo:Ge,getBlockHash:qe,getRawTransaction:Ue,getTransaction:Ye,importaddress:y.promisify(e.prototype.importaddress.bind(Le)),listunspent:y.promisify(e.prototype.listunspent.bind(Le)),sendRawTransaction:y.promisify(e.prototype.sendRawTransaction.bind(Le)),getNewAddress:ze,sendToAddress:y.promisify(e.prototype.sendToAddress.bind(Le))};const Je={error:(e,t)=>{if(t.cn){const{host:s,port:a,database:n,user:r,password:o}=t.cn;Me.debug(`Waiting for db to start { message:${e.message} host:${s}, port:${a}, database:${n}, user:${r}, password: ${o}`)}},noWarnings:!0};"dev"===he&&ge>0&&(g.isAttached()?g.detach():(g.attach(Je),g.setTheme("matrix")));const Xe=m(Je)({host:Te,port:Ee,database:Se,user:we,password:ve,allowExitOnIdle:!0,idleTimeoutMillis:100});const{PreparedStatement:Ze}=m;class Qe{static async select(e){const t=new Ze({name:`Input.select.${Math.random()}`,text:'SELECT "rev" FROM "Input" WHERE "rev" = $1',values:[e]});return Xe.any(t)}static async insert(e){const t=e.flatMap((e=>[e.rev]));for(;t.length;){const e=t.splice(0,Ce);const s=[];for(let t=1;t<=e.length;t+=1)s.push(`($${t})`);const a=s.join(",");const n=new Ze({name:`Input.insert.${Math.random()}`,text:`INSERT INTO "Input"("rev") VALUES ${a}  ON CONFLICT DO NOTHING`,values:e});await Xe.none(n)}}static async count(e){const t=e.map((e=>e.rev));const s=new Ze({name:`Input.belong.${Math.random()}`,text:'SELECT count(*) FROM "Input" WHERE "rev" LIKE ANY ($1)',values:[[t]]});const a=await Xe.oneOrNone(s);return parseInt(a?.count,10)||0}}const{Transaction:et}=h;const{Input:tt}=et;class st{static getNonCoinbaseRevs=e=>e.map((e=>tt.fromObject({...e,script:e._scriptBuffer}))).filter((e=>!e.isNull())).map((({prevTxId:e,outputIndex:t})=>({rev:`${e.toString("hex")}/${t}`})));static insert=async e=>class{static async select(e){return Qe.select(e)}static async insert(e){return Qe.insert(e)}}.insert(this.getNonCoinbaseRevs(e))}const{PreparedStatement:at}=m;class nt{static async select(e){const t=new at({name:`Output.select.${Math.random()}`,text:'SELECT "address", "satoshis", "scriptPubKey", "rev" FROM "Output" WHERE "address" = $1',values:[e]});return Xe.any(t)}static async insert(e){const t=e.flatMap((e=>[e.rev,e.address,e.satoshis,e.scriptPubKey]));for(;t.length;){const e=t.splice(0,Ce);const s=[];for(let t=1;t<=e.length;t+=4)s.push(`($${t}, $${t+1}, $${t+2}, $${t+3})`);const a=s.join(",");const n=new at({name:`Output.insert.${Math.random()}`,text:`INSERT INTO "Output"("rev", "address", "satoshis", "scriptPubKey") VALUES ${a}  ON CONFLICT DO NOTHING`,values:e});await Xe.none(n)}}}const{Script:rt}=h;class ot{static insert=async e=>{const t=e.flatMap((e=>e.tx.outputs.map(((t,s)=>{const a=rt.fromBuffer(t._scriptBuffer);let n=a.toAddress(ye).toString("legacy");"false"===n&&(n=null);const r=a.toHex();const o=Math.round(t.satoshis);return{address:n,rev:`${e.txId}/${s}`,scriptPubKey:r,satoshis:o}}))));return class{static async select(e){return nt.select(e)}static async insert(e){return nt.insert(e)}}.insert(t)}}const{PreparedStatement:ct}=m;class dt{static async query(e){const{publicKey:t,classHash:s}=e;if(void 0===t&&void 0===s)return[];let a='SELECT "rev"\n      FROM "NonStandard"\n      WHERE true ';const n=[];t&&(n.push(t),a+=' AND $1 = ANY ("publicKeys")'),s&&(n.push(s),a+=` AND "classHash" = $${n.length}`);const r=new ct({name:`NonStandard.query.${Math.random()}`,text:a,values:n});return(await Xe.any(r)).map((e=>e.rev))}static async insert({id:e,rev:t,publicKeys:s,classHash:a}){const n=new ct({name:`NonStandard.insert.${Math.random()}`,text:'INSERT INTO "NonStandard"("id", "rev", "publicKeys", "classHash") VALUES ($1, $2, $3, $4) ON CONFLICT DO NOTHING',values:[e,t,s,a]});await Xe.none(n)}static async update({id:e,rev:t,publicKeys:s}){const a=new ct({name:`NonStandard.update.${Math.random()}`,text:'UPDATE "NonStandard" SET "rev"=$2, "publicKeys"=$3 WHERE "id" = $1',values:[e,t,s]});return Xe.none(a)}static async getRevsByIds(e){const t=new ct({name:`NonStandard.getRevsByIds.${Math.random()}`,text:'SELECT "rev" FROM "NonStandard" WHERE "id" LIKE ANY($1)',values:[[e]]});return Xe.any(t)}static async select(e){const t=new ct({name:`NonStandard.select.${Math.random()}`,text:'SELECT "id", "classHash" FROM "NonStandard" WHERE "rev" = $1',values:[e]});return Xe.oneOrNone(t)}}class ft{static async select(e){return dt.select(e)}static async query(e){return dt.query(e)}static async getRevsByIds(e){return dt.getRevsByIds(e)}static async insert(e){return dt.insert(e)}static async update(e){return dt.update(e)}}const{crypto:lt}=h;class bt{static add=async(e,t,s)=>{const a=Math.max(e.length,t.length);const n=Be(e,a);const r=Be(t,a);const o=(c=r,n.map(((e,t)=>[e,c[t]])));var c;await Promise.all(o.map((async([e,t],a)=>{const{__cls:n="",_owners:r=[]}=s[a]||{};if(null===e&&t)return/^[0-9A-Fa-f]{64}\/\d+$/.test(t),void await ft.insert({id:t,rev:t,publicKeys:r,classHash:lt.Hash.sha256(Buffer.from(n)).toString("hex")});if(t&&e){const{id:s,classHash:a}=await ft.select(e)||{};await ft.update({id:s,rev:t,publicKeys:r,classHash:a})}})))};static query=async e=>ft.query(e);static getRevsByIds=async e=>(await ft.getRevsByIds(e)).map((e=>e.rev))}const{PreparedStatement:ut}=m;class pt{static async select(){return Xe.one('SELECT "syncedHeight", "bitcoindSyncedHeight", "bitcoindSyncedProgress" FROM "SyncStatus"')}static async update({syncedHeight:e,bitcoindSyncedHeight:t,bitcoindSyncedProgress:s}){const a=new ut({name:`SyncStatus.update.${Math.random()}`,text:'UPDATE "SyncStatus" SET "syncedHeight" = $1, "bitcoindSyncedHeight" = $2, "bitcoindSyncedProgress" = $3',values:[e,t,s]});await Xe.any(a)}}class yt{static async select(){return pt.select()}static async update(e){await pt.update(e)}}class ht{static updateSync=async e=>yt.update(e);static selectSync=async()=>yt.select()}const mt=new n({chain:pe,network:ye,url:me});class gt{static syncTx=async e=>{if(await ot.insert([e]),await st.insert(e.tx.inputs),e.isBcdbTx()){const{inRevs:t=[],outRevs:s=[],outData:a=[]}=e;await bt.add(t,s,a)}};static rawTxSubscriber=async e=>{try{const t=e.toString("hex");Me.info(`ZMQ message { rawTx:${t} }`),"dev"===he&&r.appendFileSync("zmqlog.log",`${t} \r\n`);const s=await mt.db.fromTxHex(t);try{await this.syncTx(s)}catch(e){Me.error(`Error parsing transaction ${e.message} ${e.stack}`)}}catch(e){Me.error(`RawTxSubscriber failed with error '${e.message} ${e.stack}'`)}};static checkSyncEnd=async()=>{let e=-1;let t=-1;let s=0;Me.info(`Checking sync progress...syncedHeight: -1 from -1 NODE_MAX_PROGRESS ${He}`);do{({syncedHeight:e,bitcoindSyncedHeight:t,bitcoindSyncedProgress:s}=await ht.selectSync()),e>0?Me.info(`Sync progress ${e}/${t} blocks [${(e/t*100).toFixed(4)}% (bitcoind progress: ${(100*s).toFixed(4)}%)]`):Me.info(`Sync progress initializing... ${e}/${t} blocks `),await Fe(Ie)}while(e<t||s<He);Me.info(`BCN reaches sync end...currentBlockHeight: ${e} from ${t} (chain progress: ${(100*s).toFixed(4)})`)};static createWallet=async()=>{try{await Ve.createwallet(Ae)}catch(e){Me.debug(`Wallet creation failed with error '${e.message}'`)}};static sub=async e=>{try{await this.createWallet(),"regtest"!==ye&&await this.checkSyncEnd(),await(async()=>{if("LTC"===pe&&"regtest"===ye){Me.info(`Node is starting for chain ${pe} and network ${ye}, Starting MWEB setup.`);const{result:e}=await Ve.getBlockchainInfo();const t=e.blocks;if(t<Pe){const{result:e}=await Ve.getNewAddress("","legacy");const s=Pe-t-1;s&&await Ve.generateToAddress(s,e);const{result:a}=await Ve.getNewAddress("mweb","mweb");await Ve.sendToAddress(a,1),await Ve.generateToAddress(1,e)}Me.info("MWEB setup is complete")}})(),Me.info(`Bitcoin Computer Node is ready ${_e}`);for await(const[,t]of e)await this.rawTxSubscriber(t)}catch(e){Me.error(`ZMQ subscription failed with error '${e.message}'`)}}}t.use(a);const{expect:wt}=t;afterEach((()=>{s.restore()})),describe("zmqsub",(()=>{describe("rawTxSubscriber",(()=>{it("Should ignore a standard rawtx",(async()=>{const t="01000000010000000000000000000000000000000000000000000000000000000000000000ffffffff0704ffff001d0104ffffffff0100f2052a0100000043410496b538e853519c726a2c91e61ec11600ae1390813a627c66fb8be7947be63c52da7589379515d4e0a604f8141781e62294721166bf621e73a82cbf2342c858eeac00000000";const a="0e3e2357e806b6cdb1f70b54c3a3a17b6714ee1f0e68bebb44a74b1efd512098";const n={txid:a,hash:"906c7434c759c8baf9bea2429a849942143cbed7bae22d34086bbfbafff2c582",version:1,vin:[],vout:[{value:50,n:0,scriptPubKey:{hex:"410496b538e853519c726a2c91e61ec11600ae1390813a627c66fb8be7947be63c52da7589379515d4e0a604f8141781e62294721166bf621e73a82cbf2342c858eeac",addresses:["12c6DSiU4Rq3P4ZxziKxzrL5LmMBrzjrJX"]},txId:a}],nLockTime:0};const r={};r[t]=n;const o=s.stub(ot,"insert").resolves();const c=s.stub(bt,"add");const i=s.stub(e.prototype,"decodeRawTransaction").callsFake(((e,t)=>{t(null,{result:r[e]})}));await gt.rawTxSubscriber(t),wt(c.notCalled).to.be.true,c.restore(),i.restore(),o.restore()})),it("Should sync a coinbase testnet rawtx",(async()=>{const t="01000000010000000000000000000000000000000000000000000000000000000000000000ffffffff0b03c58c01062f503253482fffffffff0386600f27010000001976a914dde4906f870df11cf316b15adb628a3c3cc9883988ac8ab8f60200000000434104ffd03de44a6e11b9917f3a29f9443283d9871c9d743ef30d5eddcd37094b64d1b3d8090496b53256786bf5c82932ec23c3b74d9f05a6f95a8b5529352656664bac00000000000000002a6a28e73cd21eb4ac1eb1ba3767f4bf12be98935656451df3d6dee34c125662bcd599000000000000010000000000";const a=new n;const r=await a.db.fromTxHex(t);const o={};o[t]=r;const c=s.stub(ot,"insert").resolves();const i=s.stub(st,"insert").resolves();const d=s.stub(bt,"add").resolves();const f=s.stub(e.prototype,"decodeRawTransaction").callsFake(((e,t)=>{t(null,{result:o[e]})}));await gt.rawTxSubscriber(t),wt(c.args[0][0][0].tx.outputs.length).to.eq(r.tx.outputs.length),wt(i.calledWith(r.tx.inputs)).to.be.true,wt(d.notCalled).to.be.true,f.restore(),c.restore(),i.restore(),d.restore()})),it("Should sync another coinbase testnet rawtx",(async()=>{const t="01000000010000000000000000000000000000000000000000000000000000000000000000ffffffff0b03c58c01062f503253482fffffffff0386600f27010000001976a914dde4906f870df11cf316b15adb628a3c3cc9883988ac8ab8f60200000000434104ffd03de44a6e11b9917f3a29f9443283d9871c9d743ef30d5eddcd37094b64d1b3d8090496b53256786bf5c82932ec23c3b74d9f05a6f95a8b5529352656664bac00000000000000002a6a28e73cd21eb4ac1eb1ba3767f4bf12be98935656451df3d6dee34c125662bcd599000000000000010000000000";const a=new n;const r=await a.db.fromTxHex(t);const o={};o[t]=r;const c=s.stub(ot,"insert").resolves();const i=s.stub(st,"insert").resolves();const d=s.stub(bt,"add").resolves();const f=s.stub(e.prototype,"decodeRawTransaction").callsFake(((e,t)=>{t(null,{result:o[e]})}));await gt.rawTxSubscriber(t),wt(c.args[0][0][0].tx.outputs.length).to.eq(r.tx.outputs.length),wt(i.calledWith(r.tx.inputs)).to.be.true,wt(d.notCalled).to.be.true,f.restore(),c.restore(),i.restore(),d.restore()})),it("Should sync bcdb testnet rawtx",(async()=>{const t="0200000002ed71bf8538dce5cde4fa704091349280c9b8ed734abba0e5ea577293e2affadc020000006b483045022100d6f97b6c4404b12d59c9b98ce44669f99dca440904432573bf7e7bde5b465ce5022040e5c3c27c924e27e213ae09130d2d81fc33b33b6ee5aade076abd3caaacdb980121028440227b67c9c930faaac1f23d78967ac3cf129d734c76bdbd25027cdf4042d0ffffffff869d3597c68a643d804e34a245478f959aeb19b4e82fd516e93d990ca3d8000b000000006b483045022100f07f8a54586b66ddcde86f544538dd64997e011885216880c20808e38a15cbb502202a663b78a1a0f696ec9386824c64d777d0d90e306cfd3922bc921c6bf0b04b600121028440227b67c9c930faaac1f23d78967ac3cf129d734c76bdbd25027cdf4042d0ffffffff0a643c000000000000255121028440227b67c9c930faaac1f23d78967ac3cf129d734c76bdbd25027cdf4042d051ae643c0000000000006951210201e8d2e6e85840eae4d85240f6b8dc40404040e8d0d2e65ce8d2e8d8ca407a40210202d1a5d1b194ed71b880808081d1a1a5ccb985c9d1a5cdd080f48185c9d1a5cd2103d92bbbd61e057a68d266ba234842393c03455e8eda5df591ab1d344b1d30d02953ae643c0000000000006951210203a1dae37101010103a3434b9973ab936101e903ab9361dae3710103eae372e32102006e20207365744f776e6572286f776e657229207b5c6e20202020746869732e2103d92bbbd61e057a68d266ba234842393c03455e8eda5df591ab1d344b1d30d02953ae643c00000000000069512102027dbdddb995c9cc80f4816dbdddb995c974ed71b88081f571b971b9f488b089210201bebec2e4cee64474b64482d8d84458449ad2d8de445844d0e8e8e0e6745e5e2103d92bbbd61e057a68d266ba234842393c03455e8eda5df591ab1d344b1d30d02953ae643c0000000000006951210202dddddcb985c9d194b5bdb9b1a5b994b9b995d0bdd985c8bd85c9d1957dbdb92102006c696e655f6e65742f73746f726167652f696d616765732f617274652d6f6e2103d92bbbd61e057a68d266ba234842393c03455e8eda5df591ab1d344b1d30d02953ae643c00000000000069512102006c696e652f6e6f7461732f6c6c6567615f626164615f323031372f6d696c6f2102005f6c6f636b6574742f3732343037332d312d65736c2d41522f4d696c6f5f4c2103d92bbbd61e057a68d266ba234842393c03455e8eda5df591ab1d344b1d30d02953ae643c0000000000004751210201000000000000000000000000dec6d6cae8e8bedec4e4c25cd4e0ce44bafaba2103d92bbbd61e057a68d266ba234842393c03455e8eda5df591ab1d344b1d30d02952ae0000000000000000536a4c503030303030313030375b7b225f5f696e646578223a7b226f626a223a307d2c225f5f636c73223a22636c61737320417274776f726b207b5c6e2020636f6e7374727563746f72287469746c652c206172d08e0000000000001976a91477fd2a76764dfdc6ef085bdc307cdc3ffe17a83388acfc630400000000001976a914a1a4ae9783d4ee736df6b62f6a9cc0ed06e1f12f88ac00000000";const a=new n({chain:"LTC",network:"testnet"});const r=await a.db.fromTxHex(t);const o={};o[t]=r;const c=s.stub(ot,"insert").resolves();const i=s.stub(st,"insert").resolves();const d=s.stub(bt,"add").resolves();const f=s.stub(e.prototype,"decodeRawTransaction").callsFake(((e,t)=>{t(null,{result:o[e]})}));await gt.rawTxSubscriber(t),wt(c.args[0][0][0].tx.outputs.length).to.eq(r.tx.outputs.length),wt(i.calledWith(r.tx.inputs)).to.be.true,wt(d.getCall(0).args[0].length).to.eq(0),wt(d.getCall(0).args[1].length).to.eq(1),wt(d.getCall(0).args[2].length).to.eq(1),f.restore(),c.restore(),i.restore(),d.restore()}))}))}));

"use strict";Object.defineProperty(exports,"__esModule",{value:!0});var e=require("elliptic");var t=require("bitcoin-computer-bitcore");var a=require("axios");var s=require("chai");var n=require("mocha");var r=require("pg-promise");var o=require("pg-monitor");require("exponential-backoff");var i=require("dotenv");var c=require("is-primitive");var d=require("is-plain-object");var l=require("fs");var u=require("os");var p=require("winston");var f=require("hash.js");function h(e){return e&&"object"==typeof e&&"default"in e?e:{default:e}}var S=h(a);var y=h(r);var v=h(o);var b=h(i);var g=h(c);var E=h(d);var $=h(l);var R=h(u);var m=h(f);const{deleteProperty:O}=Reflect;const T=g.default;const x=E.default;const N=e=>"object"==typeof e&&null!==e||"function"==typeof e;const _=e=>{if(!T(e))throw new TypeError("Object keys must be strings or symbols");if((e=>"__proto__"===e||"constructor"===e||"prototype"===e)(e))throw new Error(`Cannot set unsafe key: "${e}"`)};const w=(e,t)=>t&&"function"==typeof t.split?t.split(e):"symbol"==typeof e?[e]:Array.isArray(e)?e:((e,t,a)=>{const s=(e=>Array.isArray(e)?e.flat().map(String).join(","):e)(t?((e,t)=>{if("string"!=typeof e||!t)return e;let a=e+";";return void 0!==t.arrays&&(a+=`arrays=${t.arrays};`),void 0!==t.separator&&(a+=`separator=${t.separator};`),void 0!==t.split&&(a+=`split=${t.split};`),void 0!==t.merge&&(a+=`merge=${t.merge};`),void 0!==t.preservePaths&&(a+=`preservePaths=${t.preservePaths};`),a})(e,t):e);_(s);const n=P.cache.get(s)||a();return P.cache.set(s,n),n})(e,t,(()=>((e,t={})=>{const a=t.separator||".";const s="/"!==a&&t.preservePaths;if("string"==typeof e&&!1!==s&&/\//.test(e))return[e];const n=[];let r="";const o=e=>{let t;""!==e.trim()&&Number.isInteger(t=Number(e))?n.push(t):n.push(e)};for(let t=0;t<e.length;t++){const s=e[t];"\\"!==s?s!==a?r+=s:(o(r),r=""):r+=e[++t]}return r&&o(r),n})(e,t)));const H=(e,t,a,s)=>{if(_(t),void 0===a)O(e,t);else if(s&&s.merge){const n="function"===s.merge?s.merge:Object.assign;n&&x(e[t])&&x(a)?e[t]=n(e[t],a):e[t]=a}else e[t]=a;return e};const P=(e,t,a,s)=>{if(!t||!N(e))return e;const n=w(t,s);let r=e;for(let e=0;e<n.length;e++){const t=n[e];const o=n[e+1];if(_(t),void 0===o){H(r,t,a,s);break}"number"!=typeof o||Array.isArray(r[t])?(N(r[t])||(r[t]={}),r=r[t]):r=r[t]=[]}return e};P.split=w,P.cache=new Map,P.clear=()=>{P.cache=new Map};var A=P;var C=$.default;var q="function"==typeof Symbol&&"symbol"==typeof Symbol.iterator?function(e){return typeof e}:function(e){return e&&"function"==typeof Symbol&&e.constructor===Symbol&&e!==Symbol.prototype?"symbol":typeof e};var I="function"==typeof Symbol&&"symbol"==typeof Symbol.iterator?function(e){return typeof e}:function(e){return e&&"function"==typeof Symbol&&e.constructor===Symbol&&e!==Symbol.prototype?"symbol":typeof e};var K=function(){function e(e,t){for(var a=0;a<t.length;a++){var s=t[a];s.enumerable=s.enumerable||!1,s.configurable=!0,"value"in s&&(s.writable=!0),Object.defineProperty(e,s.key,s)}}return function(t,a,s){return a&&e(t.prototype,a),s&&e(t,s),t}}();var L=function e(t,a){var s=a.indexOf(".");if(!~s){if(null==t)return;return t[a]}var n=a.substring(0,s),r=a.substring(s+1);if(null!=t)return t=t[n],r?e(t,r):t},G=A,D=function(e,t){if("function"!=typeof t)return JSON.parse(C.readFileSync(e));C.readFile(e,"utf-8",(function(e,a){try{a=JSON.parse(a)}catch(t){e=e||t}t(e,a)}))},B=$.default,W=R.default;var U=function(){function e(t,a){!function(e,t){if(!(e instanceof t))throw new TypeError("Cannot call a class as a function")}(this,e),this.options=a=a||{},a.stringify_width=a.stringify_width||2,a.stringify_fn=a.stringify_fn||null,a.stringify_eol=a.stringify_eol||!1,a.ignore_dots=a.ignore_dots||!1,this.path=t,this.data=this.read()}return K(e,[{key:"set",value:function(e,t,a){var s=this;return"object"===(void 0===e?"undefined":I(e))?function(e,t){var a=0,s=[];if(Array.isArray(e))for(;a<e.length&&!1!==t(e[a],a);++a);else if("object"===(void 0===e?"undefined":q(e))&&null!==e)for(s=Object.keys(e);a<s.length&&!1!==t(e[s[a]],s[a]);++a);}(e,(function(e,t){G(s.data,t,e,a)})):this.options.ignore_dots?this.data[e]=t:G(this.data,e,t,a),this.options.autosave&&this.save(),this}},{key:"get",value:function(e){return e?this.options.ignore_dots?this.data[e]:L(this.data,e):this.toObject()}},{key:"unset",value:function(e){return this.set(e,void 0)}},{key:"append",value:function(e,t){var a=this.get(e);if(a=void 0===a?[]:a,!Array.isArray(a))throw new Error("The data is not an array!");return a.push(t),this.set(e,a),this}},{key:"pop",value:function(e){var t=this.get(e);if(!Array.isArray(t))throw new Error("The data is not an array!");return t.pop(),this.set(e,t),this}},{key:"read",value:function(e){if(!e)try{return D(this.path)}catch(e){return{}}D(this.path,(function(t,a){e(null,a=t?{}:a)}))}},{key:"write",value:function(e,t){return t?B.writeFile(this.path,e,t):B.writeFileSync(this.path,e),this}},{key:"empty",value:function(e){return this.write("{}",e)}},{key:"save",value:function(e){var t=JSON.stringify(this.data,this.options.stringify_fn,this.options.stringify_width,this.options.stringify_eol);return this.write(this.options.stringify_eol?t+W.EOL:t,e),this}},{key:"toObject",value:function(){return this.data}}]),e}();b.default.config();const M=new U(`${__dirname}/../../package.json`,{stringify_eol:!0});const{PORT:k="3000",ZMQ_URL:j="tcp://litecoind:28332",CHAIN:F="LTC",NETWORK:V="regtest",BCN_ENV:Y="dev",BCN_URL:z="http://127.0.0.1:3000",DEBUG_MODE:J="1",POSTGRES_USER:X="bcn",POSTGRES_PASSWORD:Z="bcn",POSTGRES_DB:Q="bcn",POSTGRES_HOST:ee="127.0.0.1",POSTGRES_PORT:te="5432",RPC_PROTOCOL:ae="http",RPC_USER:se="bcn-admin",RPC_PASSWORD:ne="kH4nU5Okm6-uyC0_mA5ztVNacJqZbYd_KGLl6mx722A=",RPC_HOST:re="litecoind",RPC_PORT:oe="19332",TESTING:ie=!1,DEFAULT_WALLET:ce="defaultwallet"}=process.env;const de=process.env.ALLOWED_RPC_METHODS?process.env.ALLOWED_RPC_METHODS.split(",").map((e=>new RegExp(e))):[];const le=M.get("version");var ue={PORT:parseInt(k,10),ZMQ_URL:j,CHAIN:F,NETWORK:V,BCN_ENV:Y,BCN_URL:z,DEBUG_MODE:parseInt(J,10),POSTGRES_USER:X,POSTGRES_PASSWORD:Z,POSTGRES_DB:Q,POSTGRES_HOST:ee,POSTGRES_PORT:parseInt(te,10),POSTGRES_MAX_PARAM_NUM:1e4,RPC_PROTOCOL:ae,RPC_USER:se,RPC_PASSWORD:ne,RPC_HOST:re,RPC_PORT:parseInt(oe,10),SYNC_HEIGHT:1,SYNC_INTERVAL_CHECK:3e3,SERVER_VERSION:le,TESTING:JSON.parse(ie.toString()),DB_CONNECTION_RETRY_TIME:500,SIGNATURE_FRESHNESS_MINUTES:3,DEFAULT_WALLET:ce,ALLOWED_RPC_METHODS:de};const{DEBUG_MODE:pe}=ue;const fe=p.createLogger({level:["error","warn","info","http","verbose","debug","silly"][pe],format:p.format.json(),transports:[new p.transports.Console({format:p.format.combine(p.format.colorize(),p.format.timestamp({format:"MM-DD-YYYY HH:mm:ss"}),p.format.printf((e=>`[2m${e.timestamp}[0m ${e.level} ${e.message}`)))})],exceptionHandlers:[new p.transports.File({filename:"logs/exceptions.log"})],rejectionHandlers:[new p.transports.File({filename:"logs/rejections.log"})]});const he={maxFiles:1,maxSize:1e5};pe>=0&&fe.add(new p.transports.File({filename:"error.log",level:"error"})),pe>=1&&fe.add(new p.transports.File({filename:"logs/warn.log",level:"warn",...he})),pe>=2&&fe.add(new p.transports.File({filename:"logs/info.log",level:"info",...he})),pe>=3&&fe.add(new p.transports.File({filename:"logs/http.log",level:"http",...he})),pe>=4&&fe.add(new p.transports.File({filename:"logs/verbose.log",level:"verbose",...he})),pe>=5&&fe.add(new p.transports.File({filename:"logs/debug.log",level:"debug",...he}));const{POSTGRES_HOST:Se,POSTGRES_PORT:ye,POSTGRES_DB:ve,POSTGRES_USER:be,POSTGRES_PASSWORD:ge,DB_CONNECTION_RETRY_TIME:Ee}=ue;const $e={error:(e,t)=>{if(t.cn){const{host:a,port:s,database:n,user:r,password:o}=t.cn;fe.debug(`Waiting for db to start { message:${e.message} host:${a}, port:${s}, database:${n}, user:${r}, password: ${o}`)}},noWarnings:!0};"dev"===ue.BCN_ENV&&ue.DEBUG_MODE>0&&(v.default.isAttached()?v.default.detach():(v.default.attach($e),v.default.setTheme("matrix")));const Re=y.default($e)({host:Se,port:ye,database:ve,user:be,password:ge,allowExitOnIdle:!0,idleTimeoutMillis:100});const me=(e,t=Date.now(),a)=>{if(!a){const s=m.default.sha256().update(ue.BCN_URL+t).digest("hex");a=e.sign(s).toDER("hex")}const s=[a,e.getPublic().encodeCompressed("hex"),t];return`Bearer ${Buffer.from(s.join(":")).toString("base64")}`};const{UN_P2SH_URL:Oe}=process.env;const{crypto:Te}=t.Bitcoin;const{Random:xe}=Te;const Ne=(e,t)=>e.length===t.length&&e.slice().sort().every(((e,a)=>e===t.slice().sort()[a]));const _e=async(e,t,a)=>S.default.get(`${t}${e}`,{headers:{Authentication:a}});const we=async(e,t,a,s)=>S.default.post(`${a}${e}`,t,{headers:{Authentication:s}});const He=new e.ec("secp256k1");const Pe=He.genKeyPair();const Ae=Pe.getPublic().encodeCompressed("hex");const Ce=He.genKeyPair().getPublic().encodeCompressed("hex");describe("app",(()=>{describe("Smart Object API",(()=>{describe("POST /v1/${config.CHAIN}/${config.NETWORK}/revs",(()=>{afterEach((async()=>{await Re.none('DELETE FROM "NonStandard"')})),it("Should return the latest rev for the single input object id",(async()=>{const e=xe.getRandomBuffer(8).toString("hex");const t=xe.getRandomBuffer(8).toString("hex");const a=class{}.toString();const n=class{}.toString();const r=Te.Hash.sha256(Buffer.from(a)).toString("hex");const o=Te.Hash.sha256(Buffer.from(n)).toString("hex");await Re.none('INSERT INTO "NonStandard" ("id", "rev", "publicKeys", "classHash") VALUES (${id}, ${rev}, ${publicKeys}, ${classHash})',{id:`${e}/0`,rev:`${e}/0`,publicKeys:[Ae],classHash:r}),await Re.none('INSERT INTO "NonStandard" ("id", "rev", "publicKeys", "classHash") VALUES (${id}, ${rev}, ${publicKeys}, ${classHash2})',{id:`${t}/0`,rev:`${t}/2`,publicKeys:[Ae],classHash2:o}),await Re.none('INSERT INTO "NonStandard" ("id", "rev", "publicKeys", "classHash") VALUES (${id}, ${rev}, ${publicKeys}, ${classHash})',{id:`${t}/1`,rev:`${t}/1`,publicKeys:[Ce],classHash:r});const i=await we(`/v1/${ue.CHAIN}/${ue.NETWORK}/revs`,{ids:[`${e}/0`]},Oe,me(Pe));s.expect(i).to.not.be.undefined,s.expect(i.status).eq(200),s.expect(i.data.length).eq(1),s.expect(i.data[0]).eq(`${e}/0`)})),it("Should return the latest revs for an array of ids (without ordering)",(async()=>{const e=xe.getRandomBuffer(8).toString("hex");const t=class{}.toString();const a=class{}.toString();const n=Te.Hash.sha256(Buffer.from(t)).toString("hex");const r=Te.Hash.sha256(Buffer.from(a)).toString("hex");await Re.none('INSERT INTO "NonStandard" ("id", "rev", "publicKeys", "classHash") VALUES (${id}, ${rev}, ${publicKeys}, ${classHash})',{id:`${e}/0`,rev:`${e}/0`,publicKeys:[Ae],classHash:n}),await Re.none('INSERT INTO "NonStandard" ("id", "rev", "publicKeys", "classHash") VALUES (${id}, ${rev}, ${publicKeys}, ${classHash})',{id:`${e}/1`,rev:`${e}/1`,publicKeys:[Ae],classHash:r});const o=await we(`/v1/${ue.CHAIN}/${ue.NETWORK}/revs`,{ids:[`${e}/1`,`${e}/0`]},Oe,me(Pe));s.expect(o).to.not.be.undefined,s.expect(o.status).eq(200),s.expect(o.data.length).eq(2),s.expect(o.data.sort()).to.deep.eq([`${e}/1`,`${e}/0`].sort());const i=await we(`/v1/${ue.CHAIN}/${ue.NETWORK}/revs`,{ids:[`${e}/0`,`${e}/1`]},Oe,me(Pe));s.expect(i).to.not.be.undefined,s.expect(i.status).eq(200),s.expect(i.data.length).eq(2),s.expect(i.data[0]).eq(`${e}/0`),s.expect(i.data[1]).eq(`${e}/1`)}))})),describe("GET /v1/${config.CHAIN}/${config.NETWORK}/non-standard-utxos",(()=>{describe("Endpoint normal behavior",(()=>{const e=xe.getRandomBuffer(8).toString("hex");const t=xe.getRandomBuffer(8).toString("hex");const a=class{}.toString();const r=class{}.toString();const o=Te.Hash.sha256(Buffer.from(a)).toString("hex");const i=Te.Hash.sha256(Buffer.from(r)).toString("hex");n.before((async()=>{await Re.none('INSERT INTO "NonStandard" ("id", "rev", "publicKeys", "classHash") VALUES (${id}, ${rev}, ${publicKeys}, ${classHash})',{id:`${e}/0`,rev:`${e}/0`,publicKeys:[Ae],classHash:o}),await Re.none('INSERT INTO "NonStandard" ("id", "rev", "publicKeys", "classHash") VALUES (${id}, ${rev}, ${publicKeys}, ${classHash})',{id:`${t}/0`,rev:`${t}/2`,publicKeys:[Ae],classHash:i}),await Re.none('INSERT INTO "NonStandard" ("id", "rev", "publicKeys", "classHash") VALUES (${id}, ${rev}, ${publicKeys}, ${classHash})',{id:`${e}/1`,rev:`${e}/1`,publicKeys:[Ae],classHash:o})})),after((async()=>{await Re.none('DELETE FROM "NonStandard"')})),it("Should return the latest revs for a given public key",(async()=>{const e=await _e(`/v1/${ue.CHAIN}/${ue.NETWORK}/non-standard-utxos?publicKey=${Ae}`,Oe,me(Pe));s.expect(e).to.not.be.undefined,s.expect(e.status).eq(200),s.expect(e.data.length).eq(3),s.expect(Ne[(e.data[0],e.data[1],`${t}/2`)])})),it("Should return the latest revs for a given contract hash",(async()=>{const e=await _e(`/v1/${ue.CHAIN}/${ue.NETWORK}/non-standard-utxos?classHash=${i}`,Oe,me(Pe));s.expect(e).to.not.be.undefined,s.expect(e.status).eq(200),s.expect(e.data.length).eq(1),s.expect(e.data[0]).to.deep.eq(`${t}/2`)}))})),it("Should return blank if there are no latest revs for the given public key in the database",(async()=>{const e=await _e(`/v1/${ue.CHAIN}/${ue.NETWORK}/non-standard-utxos?publicKey=${Ae}`,Oe,me(Pe));s.expect(e).to.not.be.undefined,s.expect(e.status).eq(200),s.expect(e.data.length).eq(0)})),it("Should return blank if there are no parameters set",(async()=>{const e=await _e(`/v1/${ue.CHAIN}/${ue.NETWORK}/non-standard-utxos`,Oe,me(Pe));s.expect(e).to.not.be.undefined,s.expect(e.status).eq(200),s.expect(e.data.length).eq(0)})),it("Should return blank if there are latest revs for the given public key in the database",(async()=>{const e=await _e(`/v1/${ue.CHAIN}/${ue.NETWORK}/non-standard-utxos?publicKey=${Ae}`,Oe,me(Pe));s.expect(e).to.not.be.undefined,s.expect(e.status).eq(200),s.expect(e.data.length).eq(0)}))})),describe("GET /wallet/:address/utxos",(()=>{const e="mzoGRNh55y9j57TPdwRGi3nt9X4CFwpqUS";it("Should return the standard unspent transaction outputs for a given address",(async()=>{const t=await _e(`/v1/${ue.CHAIN}/${ue.NETWORK}/wallet/${e}/utxos`,Oe,me(Pe));s.expect(t).to.not.be.undefined,s.expect(t.status).eq(200),t.data.length&&(s.expect(t.data[0].txid).to.be.a("string"),s.expect(t.data[0].vout).to.be.a("string"),s.expect(t.data[0].address).eq(e),s.expect(t.data[0].scriptPubKey).eq("76a914d3802d2126be127424c647f2e90cfa4a15b49a2388ac"),s.expect(t.data[0].amount).to.be.a("number"),s.expect(t.data[0].satoshis).to.be.a("number"))})),it("Should return [] if the given address does not exist in the database",(async()=>{const e=await _e(`/v1/${ue.CHAIN}/${ue.NETWORK}/wallet/2N7ZZBWXQtoWPvfmmPXcJtDiGxNGLzdsY4N/utxos/`,Oe,me(Pe));s.expect(e).to.not.be.undefined,s.expect(e.status).eq(200),s.expect(e.data.length).eq(0)}))})),describe("GET /address/${address}/balance",(()=>{it("Should return the balance of a given address that exists in the database",(async()=>{const e=await _e(`/v1/${ue.CHAIN}/${ue.NETWORK}/address/mzoGRNh55y9j57TPdwRGi3nt9X4CFwpqUS/balance`,Oe,me(Pe));s.expect(e).to.not.be.undefined,s.expect(e.status).eq(200),s.expect(e.data).to.be.a("number")})),it("Should return 0 if the given address does not exist in the database",(async()=>{const e=await _e(`/v1/${ue.CHAIN}/${ue.NETWORK}/address/2N7ZZBWXQtoWPvfmmPXcJtDiGxNGLzdsY4N/balance/`,Oe,me(Pe));s.expect(e).to.not.be.undefined,s.expect(e.status).eq(200),s.expect(e.data).eq(0)}))}))})),describe("Off Chain Store API",(()=>{describe("GET /:id",(()=>{it("Should return data",(async()=>{const e=Math.random().toString();const a=t.Bitcoin.crypto.Hash.sha256(Buffer.from(e)).toString("hex");await Re.none('INSERT INTO "OffChain"("id", "data") VALUES(${id}, ${data})',{data:e,id:a});const n=await _e(`/v1/store/${a}`,Oe,me(Pe));s.expect(n.status).eq(200),s.expect(n.data).to.deep.eq(e),await Re.none('DELETE FROM "OffChain" WHERE "id" = ${id}',{id:a})}))})),describe("POST /",(()=>{it("Should post data",(async()=>{const e={__cls:class{constructor(){this.n=1}}.toString()}.toString();const a={data:e};const n=await we("/v1/store",a,Oe,me(Pe));s.expect(n.status).eq(201);const r=t.Bitcoin.crypto.Hash.sha256(Buffer.from(e)).toString("hex");s.expect(n.data._url).eq(`${Oe.toLowerCase()}/store/${r}`);const o=await Re.any('SELECT "id", "data" FROM "OffChain" WHERE id = ${id}',{id:r});s.expect(o.length).eq(1),s.expect(o[0].id).eq(r),s.expect(o[0].data.toString()).eq(e),await Re.none('DELETE FROM "OffChain" WHERE "id" = ${hash}',{hash:r})}))}))}))})),exports.authenticatedDelete=async(e,t,a)=>S.default.delete(`${t}${e}`,{headers:{Authentication:a}}),exports.authenticatedGet=_e,exports.authenticatedPost=we;

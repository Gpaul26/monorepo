"use strict";Object.defineProperty(exports,"__esModule",{value:!0});var e=require("elliptic");var t=require("bitcoin-computer-bitcore");var a=require("axios");var s=require("chai");var n=require("mocha");var r=require("pg-promise");var o=require("pg-monitor");require("exponential-backoff");var i=require("dotenv");var c=require("is-primitive");var d=require("is-plain-object");var u=require("fs");var l=require("os");var f=require("path");var p=require("url");var h=require("winston");var y=require("hash.js");function v(e){return e&&"object"==typeof e&&"default"in e?e:{default:e}}var b=v(e);var g=v(a);var $=v(r);var S=v(o);var m=v(i);var x=v(c);var E=v(d);var w=v(u);var R=v(l);var T=v(y);const{deleteProperty:N}=Reflect;const O=x.default;const _=E.default;const q=e=>"object"==typeof e&&null!==e||"function"==typeof e;const H=e=>{if(!O(e))throw new TypeError("Object keys must be strings or symbols");if((e=>"__proto__"===e||"constructor"===e||"prototype"===e)(e))throw new Error(`Cannot set unsafe key: "${e}"`)};const P=(e,t)=>t&&"function"==typeof t.split?t.split(e):"symbol"==typeof e?[e]:Array.isArray(e)?e:((e,t,a)=>{const s=(e=>Array.isArray(e)?e.flat().map(String).join(","):e)(t?((e,t)=>{if("string"!=typeof e||!t)return e;let a=e+";";return void 0!==t.arrays&&(a+=`arrays=${t.arrays};`),void 0!==t.separator&&(a+=`separator=${t.separator};`),void 0!==t.split&&(a+=`split=${t.split};`),void 0!==t.merge&&(a+=`merge=${t.merge};`),void 0!==t.preservePaths&&(a+=`preservePaths=${t.preservePaths};`),a})(e,t):e);H(s);const n=I.cache.get(s)||a();return I.cache.set(s,n),n})(e,t,(()=>((e,t={})=>{const a=t.separator||".";const s="/"!==a&&t.preservePaths;if("string"==typeof e&&!1!==s&&/\//.test(e))return[e];const n=[];let r="";const o=e=>{let t;""!==e.trim()&&Number.isInteger(t=Number(e))?n.push(t):n.push(e)};for(let t=0;t<e.length;t++){const s=e[t];"\\"!==s?s!==a?r+=s:(o(r),r=""):r+=e[++t]}return r&&o(r),n})(e,t)));const A=(e,t,a,s)=>{if(H(t),void 0===a)N(e,t);else if(s&&s.merge){const n="function"===s.merge?s.merge:Object.assign;n&&_(e[t])&&_(a)?e[t]=n(e[t],a):e[t]=a}else e[t]=a;return e};const I=(e,t,a,s)=>{if(!t||!q(e))return e;const n=P(t,s);let r=e;for(let e=0;e<n.length;e++){const t=n[e];const o=n[e+1];if(H(t),void 0===o){A(r,t,a,s);break}"number"!=typeof o||Array.isArray(r[t])?(q(r[t])||(r[t]={}),r=r[t]):r=r[t]=[]}return e};I.split=P,I.cache=new Map,I.clear=()=>{I.cache=new Map};var C=I;var K=w.default;var L="function"==typeof Symbol&&"symbol"==typeof Symbol.iterator?function(e){return typeof e}:function(e){return e&&"function"==typeof Symbol&&e.constructor===Symbol&&e!==Symbol.prototype?"symbol":typeof e};var B="function"==typeof Symbol&&"symbol"==typeof Symbol.iterator?function(e){return typeof e}:function(e){return e&&"function"==typeof Symbol&&e.constructor===Symbol&&e!==Symbol.prototype?"symbol":typeof e};var U=function(){function e(e,t){for(var a=0;a<t.length;a++){var s=t[a];s.enumerable=s.enumerable||!1,s.configurable=!0,"value"in s&&(s.writable=!0),Object.defineProperty(e,s.key,s)}}return function(t,a,s){return a&&e(t.prototype,a),s&&e(t,s),t}}();var j=function e(t,a){var s=a.indexOf(".");if(!~s){if(null==t)return;return t[a]}var n=a.substring(0,s),r=a.substring(s+1);if(null!=t)return t=t[n],r?e(t,r):t},k=C,G=function(e,t){if("function"!=typeof t)return JSON.parse(K.readFileSync(e));K.readFile(e,"utf-8",(function(e,a){try{a=JSON.parse(a)}catch(t){e=e||t}t(e,a)}))},F=w.default,M=R.default;var D=function(){function e(t,a){!function(e,t){if(!(e instanceof t))throw new TypeError("Cannot call a class as a function")}(this,e),this.options=a=a||{},a.stringify_width=a.stringify_width||2,a.stringify_fn=a.stringify_fn||null,a.stringify_eol=a.stringify_eol||!1,a.ignore_dots=a.ignore_dots||!1,this.path=t,this.data=this.read()}return U(e,[{key:"set",value:function(e,t,a){var s=this;return"object"===(void 0===e?"undefined":B(e))?function(e,t){var a=0,s=[];if(Array.isArray(e))for(;a<e.length&&!1!==t(e[a],a);++a);else if("object"===(void 0===e?"undefined":L(e))&&null!==e)for(s=Object.keys(e);a<s.length&&!1!==t(e[s[a]],s[a]);++a);}(e,(function(e,t){k(s.data,t,e,a)})):this.options.ignore_dots?this.data[e]=t:k(this.data,e,t,a),this.options.autosave&&this.save(),this}},{key:"get",value:function(e){return e?this.options.ignore_dots?this.data[e]:j(this.data,e):this.toObject()}},{key:"unset",value:function(e){return this.set(e,void 0)}},{key:"append",value:function(e,t){var a=this.get(e);if(a=void 0===a?[]:a,!Array.isArray(a))throw new Error("The data is not an array!");return a.push(t),this.set(e,a),this}},{key:"pop",value:function(e){var t=this.get(e);if(!Array.isArray(t))throw new Error("The data is not an array!");return t.pop(),this.set(e,t),this}},{key:"read",value:function(e){if(!e)try{return G(this.path)}catch(e){return{}}G(this.path,(function(t,a){e(null,a=t?{}:a)}))}},{key:"write",value:function(e,t){return t?F.writeFile(this.path,e,t):F.writeFileSync(this.path,e),this}},{key:"empty",value:function(e){return this.write("{}",e)}},{key:"save",value:function(e){var t=JSON.stringify(this.data,this.options.stringify_fn,this.options.stringify_width,this.options.stringify_eol);return this.write(this.options.stringify_eol?t+M.EOL:t,e),this}},{key:"toObject",value:function(){return this.data}}]),e}();m.default.config();const W=function(e,t){return new D(e,{stringify_eol:!0})}(`${f.dirname(p.fileURLToPath("undefined"==typeof document?new(require("url").URL)("file:"+__filename).href:document.currentScript&&document.currentScript.src||new URL("app.cjs.test.js",document.baseURI).href))}/../../package.json`);const{PORT:V,ZMQ_URL:Y,CHAIN:X,NETWORK:z,BCN_ENV:J,BCN_URL:Z,DEBUG_MODE:Q,POSTGRES_USER:ee,POSTGRES_PASSWORD:te,POSTGRES_DB:ae,POSTGRES_HOST:se,POSTGRES_PORT:ne,RPC_PROTOCOL:re,RPC_USER:oe,RPC_PASSWORD:ie,RPC_HOST:ce,RPC_PORT:de,SERVER_VERSION:ue,TESTING:le,DEFAULT_WALLET:fe,SYNC_HEIGHT:pe,SYNC_INTERVAL_CHECK:he,POSTGRES_MAX_PARAM_NUM:ye,DB_CONNECTION_RETRY_TIME:ve,SIGNATURE_FRESHNESS_MINUTES:be,ALLOWED_RPC_METHODS:ge,MWEB_HEIGHT:$e}=process.env;const Se=X||"LTC";const me=z||"regtest";const xe=J||"dev";const Ee=Z||"http://127.0.0.1:3000";const we=parseInt(Q,10)||1;const Re=ee||"bcn";const Te=te||"bcn";const Ne=ae||"bcn";const Oe=se||"127.0.0.1";const _e=parseInt(ne,10)||"5432";ue||W.get("version"),!ge||ge.split(",").map((e=>new RegExp(e)));const qe=h.createLogger({level:["error","warn","info","http","verbose","debug","silly"][we],format:h.format.json(),transports:[new h.transports.Console({format:h.format.combine(h.format.colorize(),h.format.timestamp({format:"MM-DD-YYYY HH:mm:ss"}),h.format.printf((e=>`[2m${e.timestamp}[0m ${e.level} ${e.message}`)))})],exceptionHandlers:[new h.transports.File({filename:"logs/exceptions.log"})],rejectionHandlers:[new h.transports.File({filename:"logs/rejections.log"})]});const He={maxFiles:1,maxSize:1e5};we>=0&&qe.add(new h.transports.File({filename:"error.log",level:"error"})),we>=1&&qe.add(new h.transports.File({filename:"logs/warn.log",level:"warn",...He})),we>=2&&qe.add(new h.transports.File({filename:"logs/info.log",level:"info",...He})),we>=3&&qe.add(new h.transports.File({filename:"logs/http.log",level:"http",...He})),we>=4&&qe.add(new h.transports.File({filename:"logs/verbose.log",level:"verbose",...He})),we>=5&&qe.add(new h.transports.File({filename:"logs/debug.log",level:"debug",...He}));const Pe={error:(e,t)=>{if(t.cn){const{host:a,port:s,database:n,user:r,password:o}=t.cn;qe.debug(`Waiting for db to start { message:${e.message} host:${a}, port:${s}, database:${n}, user:${r}, password: ${o}`)}},noWarnings:!0};"dev"===xe&&we>0&&(S.default.isAttached()?S.default.detach():(S.default.attach(Pe),S.default.setTheme("matrix")));const Ae=$.default(Pe)({host:Oe,port:_e,database:Ne,user:Re,password:Te,allowExitOnIdle:!0,idleTimeoutMillis:100});const Ie=(e,t=Date.now(),a)=>{if(!a){const s=T.default.sha256().update(Ee+t).digest("hex");a=e.sign(s).toDER("hex")}const s=[a,e.getPublic().encodeCompressed("hex"),t];return`Bearer ${Buffer.from(s.join(":")).toString("base64")}`};const{ec:Ce}=b.default;const{UN_P2SH_URL:Ke}=process.env;const{crypto:Le}=t.Bitcoin;const{Random:Be}=Le;const Ue=(e,t)=>e.length===t.length&&e.slice().sort().every(((e,a)=>e===t.slice().sort()[a]));const je=async(e,t,a)=>g.default.get(`${t}${e}`,{headers:{Authentication:a}});const ke=async(e,t,a,s)=>g.default.post(`${a}${e}`,t,{headers:{Authentication:s}});const Ge=new Ce("secp256k1");const Fe=Ge.genKeyPair();const Me=Fe.getPublic().encodeCompressed("hex");const De=Ge.genKeyPair().getPublic().encodeCompressed("hex");describe("app",(()=>{describe("Smart Object API",(()=>{describe("POST /v1/${CHAIN}/${NETWORK}/revs",(()=>{afterEach((async()=>{await Ae.none('DELETE FROM "NonStandard"')})),it("Should return the latest rev for the single input object id",(async()=>{const e=Be.getRandomBuffer(8).toString("hex");const t=Be.getRandomBuffer(8).toString("hex");const a=class{}.toString();const n=class{}.toString();const r=Le.Hash.sha256(Buffer.from(a)).toString("hex");const o=Le.Hash.sha256(Buffer.from(n)).toString("hex");await Ae.none('INSERT INTO "NonStandard" ("id", "rev", "publicKeys", "classHash") VALUES (${id}, ${rev}, ${publicKeys}, ${classHash})',{id:`${e}/0`,rev:`${e}/0`,publicKeys:[Me],classHash:r}),await Ae.none('INSERT INTO "NonStandard" ("id", "rev", "publicKeys", "classHash") VALUES (${id}, ${rev}, ${publicKeys}, ${classHash2})',{id:`${t}/0`,rev:`${t}/2`,publicKeys:[Me],classHash2:o}),await Ae.none('INSERT INTO "NonStandard" ("id", "rev", "publicKeys", "classHash") VALUES (${id}, ${rev}, ${publicKeys}, ${classHash})',{id:`${t}/1`,rev:`${t}/1`,publicKeys:[De],classHash:r});const i=await ke(`/v1/${Se}/${me}/revs`,{ids:[`${e}/0`]},Ke,Ie(Fe));s.expect(i).to.not.be.undefined,s.expect(i.status).eq(200),s.expect(i.data.length).eq(1),s.expect(i.data[0]).eq(`${e}/0`)})),it("Should return the latest revs for an array of ids (without ordering)",(async()=>{const e=Be.getRandomBuffer(8).toString("hex");const t=class{}.toString();const a=class{}.toString();const n=Le.Hash.sha256(Buffer.from(t)).toString("hex");const r=Le.Hash.sha256(Buffer.from(a)).toString("hex");await Ae.none('INSERT INTO "NonStandard" ("id", "rev", "publicKeys", "classHash") VALUES (${id}, ${rev}, ${publicKeys}, ${classHash})',{id:`${e}/0`,rev:`${e}/0`,publicKeys:[Me],classHash:n}),await Ae.none('INSERT INTO "NonStandard" ("id", "rev", "publicKeys", "classHash") VALUES (${id}, ${rev}, ${publicKeys}, ${classHash})',{id:`${e}/1`,rev:`${e}/1`,publicKeys:[Me],classHash:r});const o=await ke(`/v1/${Se}/${me}/revs`,{ids:[`${e}/1`,`${e}/0`]},Ke,Ie(Fe));s.expect(o).to.not.be.undefined,s.expect(o.status).eq(200),s.expect(o.data.length).eq(2),s.expect(o.data.sort()).to.deep.eq([`${e}/1`,`${e}/0`].sort());const i=await ke(`/v1/${Se}/${me}/revs`,{ids:[`${e}/0`,`${e}/1`]},Ke,Ie(Fe));s.expect(i).to.not.be.undefined,s.expect(i.status).eq(200),s.expect(i.data.length).eq(2),s.expect(i.data[0]).eq(`${e}/0`),s.expect(i.data[1]).eq(`${e}/1`)}))})),describe("GET /v1/${CHAIN}/${NETWORK}/non-standard-utxos",(()=>{describe("Endpoint normal behavior",(()=>{const e=Be.getRandomBuffer(8).toString("hex");const t=Be.getRandomBuffer(8).toString("hex");const a=class{}.toString();const r=class{}.toString();const o=Le.Hash.sha256(Buffer.from(a)).toString("hex");const i=Le.Hash.sha256(Buffer.from(r)).toString("hex");n.before((async()=>{await Ae.none('INSERT INTO "NonStandard" ("id", "rev", "publicKeys", "classHash") VALUES (${id}, ${rev}, ${publicKeys}, ${classHash})',{id:`${e}/0`,rev:`${e}/0`,publicKeys:[Me],classHash:o}),await Ae.none('INSERT INTO "NonStandard" ("id", "rev", "publicKeys", "classHash") VALUES (${id}, ${rev}, ${publicKeys}, ${classHash})',{id:`${t}/0`,rev:`${t}/2`,publicKeys:[Me],classHash:i}),await Ae.none('INSERT INTO "NonStandard" ("id", "rev", "publicKeys", "classHash") VALUES (${id}, ${rev}, ${publicKeys}, ${classHash})',{id:`${e}/1`,rev:`${e}/1`,publicKeys:[Me],classHash:o})})),after((async()=>{await Ae.none('DELETE FROM "NonStandard"')})),it("Should return the latest revs for a given public key",(async()=>{const e=await je(`/v1/${Se}/${me}/non-standard-utxos?publicKey=${Me}`,Ke,Ie(Fe));s.expect(e).to.not.be.undefined,s.expect(e.status).eq(200),s.expect(e.data.length).eq(3),s.expect(Ue[(e.data[0],e.data[1],`${t}/2`)])})),it("Should return the latest revs for a given contract hash",(async()=>{const e=await je(`/v1/${Se}/${me}/non-standard-utxos?classHash=${i}`,Ke,Ie(Fe));s.expect(e).to.not.be.undefined,s.expect(e.status).eq(200),s.expect(e.data.length).eq(1),s.expect(e.data[0]).to.deep.eq(`${t}/2`)}))})),it("Should return blank if there are no latest revs for the given public key in the database",(async()=>{const e=await je(`/v1/${Se}/${me}/non-standard-utxos?publicKey=${Me}`,Ke,Ie(Fe));s.expect(e).to.not.be.undefined,s.expect(e.status).eq(200),s.expect(e.data.length).eq(0)})),it("Should return blank if there are no parameters set",(async()=>{const e=await je(`/v1/${Se}/${me}/non-standard-utxos`,Ke,Ie(Fe));s.expect(e).to.not.be.undefined,s.expect(e.status).eq(200),s.expect(e.data.length).eq(0)})),it("Should return blank if there are latest revs for the given public key in the database",(async()=>{const e=await je(`/v1/${Se}/${me}/non-standard-utxos?publicKey=${Me}`,Ke,Ie(Fe));s.expect(e).to.not.be.undefined,s.expect(e.status).eq(200),s.expect(e.data.length).eq(0)}))})),describe("GET /wallet/:address/utxos",(()=>{const e="mzoGRNh55y9j57TPdwRGi3nt9X4CFwpqUS";it("Should return the standard unspent transaction outputs for a given address",(async()=>{const t=await je(`/v1/${Se}/${me}/wallet/${e}/utxos`,Ke,Ie(Fe));s.expect(t).to.not.be.undefined,s.expect(t.status).eq(200),t.data.length&&(s.expect(t.data[0].txid).to.be.a("string"),s.expect(t.data[0].vout).to.be.a("string"),s.expect(t.data[0].address).eq(e),s.expect(t.data[0].scriptPubKey).eq("76a914d3802d2126be127424c647f2e90cfa4a15b49a2388ac"),s.expect(t.data[0].amount).to.be.a("number"),s.expect(t.data[0].satoshis).to.be.a("number"))})),it("Should return [] if the given address does not exist in the database",(async()=>{const e=await je(`/v1/${Se}/${me}/wallet/2N7ZZBWXQtoWPvfmmPXcJtDiGxNGLzdsY4N/utxos/`,Ke,Ie(Fe));s.expect(e).to.not.be.undefined,s.expect(e.status).eq(200),s.expect(e.data.length).eq(0)}))})),describe("GET /address/${address}/balance",(()=>{it("Should return the balance of a given address that exists in the database",(async()=>{const e=await je(`/v1/${Se}/${me}/address/mzoGRNh55y9j57TPdwRGi3nt9X4CFwpqUS/balance`,Ke,Ie(Fe));s.expect(e).to.not.be.undefined,s.expect(e.status).eq(200),s.expect(e.data).to.be.a("number")})),it("Should return 0 if the given address does not exist in the database",(async()=>{const e=await je(`/v1/${Se}/${me}/address/2N7ZZBWXQtoWPvfmmPXcJtDiGxNGLzdsY4N/balance/`,Ke,Ie(Fe));s.expect(e).to.not.be.undefined,s.expect(e.status).eq(200),s.expect(e.data).eq(0)}))}))})),describe("Off Chain Store API",(()=>{describe("GET /:id",(()=>{it("Should return data",(async()=>{const e=Math.random().toString();const a=t.Bitcoin.crypto.Hash.sha256(Buffer.from(e)).toString("hex");await Ae.none('INSERT INTO "OffChain"("id", "data") VALUES(${id}, ${data})',{data:e,id:a});const n=await je(`/v1/store/${a}`,Ke,Ie(Fe));s.expect(n.status).eq(200),s.expect(n.data).to.deep.eq(e),await Ae.none('DELETE FROM "OffChain" WHERE "id" = ${id}',{id:a})}))})),describe("POST /",(()=>{it("Should post data",(async()=>{const e={__cls:class{n;constructor(){this.n=1}}.toString()}.toString();const a={data:e};const n=await ke("/v1/store",a,Ke,Ie(Fe));s.expect(n.status).eq(201);const r=t.Bitcoin.crypto.Hash.sha256(Buffer.from(e)).toString("hex");s.expect(n.data._url).eq(`${Ke.toLowerCase()}/store/${r}`);const o=await Ae.any('SELECT "id", "data" FROM "OffChain" WHERE id = ${id}',{id:r});s.expect(o.length).eq(1),s.expect(o[0].id).eq(r),s.expect(o[0].data.toString()).eq(e),await Ae.none('DELETE FROM "OffChain" WHERE "id" = ${hash}',{hash:r})}))}))}))})),exports.authenticatedDelete=async(e,t,a)=>g.default.delete(`${t}${e}`,{headers:{Authentication:a}}),exports.authenticatedGet=je,exports.authenticatedPost=ke;

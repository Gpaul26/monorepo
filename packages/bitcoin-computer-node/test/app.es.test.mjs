import t from"elliptic";import{Bitcoin as e}from"bitcoin-computer-bitcore";import s from"axios";import{expect as n}from"chai";import{before as a}from"mocha";import o from"pg-promise";import r from"pg-monitor";import"exponential-backoff";import i from"dotenv";import c from"is-primitive";import d from"is-plain-object";import l from"fs";import u from"os";import{dirname as f}from"path";import{fileURLToPath as h}from"url";import{createLogger as p,format as y,transports as b}from"winston";import g from"hash.js";const{deleteProperty:m}=Reflect;const v=c;const $=d;const S=t=>"object"==typeof t&&null!==t||"function"==typeof t;const E=t=>{if(!v(t))throw new TypeError("Object keys must be strings or symbols");if((t=>"__proto__"===t||"constructor"===t||"prototype"===t)(t))throw new Error(`Cannot set unsafe key: "${t}"`)};const w=(t,e)=>e&&"function"==typeof e.split?e.split(t):"symbol"==typeof t?[t]:Array.isArray(t)?t:((t,e,s)=>{const n=(t=>Array.isArray(t)?t.flat().map(String).join(","):t)(e?((t,e)=>{if("string"!=typeof t||!e)return t;let s=t+";";return void 0!==e.arrays&&(s+=`arrays=${e.arrays};`),void 0!==e.separator&&(s+=`separator=${e.separator};`),void 0!==e.split&&(s+=`split=${e.split};`),void 0!==e.merge&&(s+=`merge=${e.merge};`),void 0!==e.preservePaths&&(s+=`preservePaths=${e.preservePaths};`),s})(t,e):t);E(n);const a=R.cache.get(n)||s();return R.cache.set(n,a),a})(t,e,(()=>((t,e={})=>{const s=e.separator||".";const n="/"!==s&&e.preservePaths;if("string"==typeof t&&!1!==n&&/\//.test(t))return[t];const a=[];let o="";const r=t=>{let e;""!==t.trim()&&Number.isInteger(e=Number(t))?a.push(e):a.push(t)};for(let e=0;e<t.length;e++){const n=t[e];"\\"!==n?n!==s?o+=n:(r(o),o=""):o+=t[++e]}return o&&r(o),a})(t,e)));const T=(t,e,s,n)=>{if(E(e),void 0===s)m(t,e);else if(n&&n.merge){const a="function"===n.merge?n.merge:Object.assign;a&&$(t[e])&&$(s)?t[e]=a(t[e],s):t[e]=s}else t[e]=s;return t};const R=(t,e,s,n)=>{if(!e||!S(t))return t;const a=w(e,n);let o=t;for(let t=0;t<a.length;t++){const e=a[t];const r=a[t+1];if(E(e),void 0===r){T(o,e,s,n);break}"number"!=typeof r||Array.isArray(o[e])?(S(o[e])||(o[e]={}),o=o[e]):o=o[e]=[]}return t};R.split=w,R.cache=new Map,R.clear=()=>{R.cache=new Map};var N=R;var O=l;var _="function"==typeof Symbol&&"symbol"==typeof Symbol.iterator?function(t){return typeof t}:function(t){return t&&"function"==typeof Symbol&&t.constructor===Symbol&&t!==Symbol.prototype?"symbol":typeof t};var H="function"==typeof Symbol&&"symbol"==typeof Symbol.iterator?function(t){return typeof t}:function(t){return t&&"function"==typeof Symbol&&t.constructor===Symbol&&t!==Symbol.prototype?"symbol":typeof t};var x=function(){function t(t,e){for(var s=0;s<e.length;s++){var n=e[s];n.enumerable=n.enumerable||!1,n.configurable=!0,"value"in n&&(n.writable=!0),Object.defineProperty(t,n.key,n)}}return function(e,s,n){return s&&t(e.prototype,s),n&&t(e,n),e}}();var P=function t(e,s){var n=s.indexOf(".");if(!~n){if(null==e)return;return e[s]}var a=s.substring(0,n),o=s.substring(n+1);if(null!=e)return e=e[a],o?t(e,o):e},A=N,q=function(t,e){if("function"!=typeof e)return JSON.parse(O.readFileSync(t));O.readFile(t,"utf-8",(function(t,s){try{s=JSON.parse(s)}catch(e){t=t||e}e(t,s)}))},I=l,C=u;var K=function(){function t(e,s){!function(t,e){if(!(t instanceof e))throw new TypeError("Cannot call a class as a function")}(this,t),this.options=s=s||{},s.stringify_width=s.stringify_width||2,s.stringify_fn=s.stringify_fn||null,s.stringify_eol=s.stringify_eol||!1,s.ignore_dots=s.ignore_dots||!1,this.path=e,this.data=this.read()}return x(t,[{key:"set",value:function(t,e,s){var n=this;return"object"===(void 0===t?"undefined":H(t))?function(t,e){var s=0,n=[];if(Array.isArray(t))for(;s<t.length&&!1!==e(t[s],s);++s);else if("object"===(void 0===t?"undefined":_(t))&&null!==t)for(n=Object.keys(t);s<n.length&&!1!==e(t[n[s]],n[s]);++s);}(t,(function(t,e){A(n.data,e,t,s)})):this.options.ignore_dots?this.data[t]=e:A(this.data,t,e,s),this.options.autosave&&this.save(),this}},{key:"get",value:function(t){return t?this.options.ignore_dots?this.data[t]:P(this.data,t):this.toObject()}},{key:"unset",value:function(t){return this.set(t,void 0)}},{key:"append",value:function(t,e){var s=this.get(t);if(s=void 0===s?[]:s,!Array.isArray(s))throw new Error("The data is not an array!");return s.push(e),this.set(t,s),this}},{key:"pop",value:function(t){var e=this.get(t);if(!Array.isArray(e))throw new Error("The data is not an array!");return e.pop(),this.set(t,e),this}},{key:"read",value:function(t){if(!t)try{return q(this.path)}catch(t){return{}}q(this.path,(function(e,s){t(null,s=e?{}:s)}))}},{key:"write",value:function(t,e){return e?I.writeFile(this.path,t,e):I.writeFileSync(this.path,t),this}},{key:"empty",value:function(t){return this.write("{}",t)}},{key:"save",value:function(t){var e=JSON.stringify(this.data,this.options.stringify_fn,this.options.stringify_width,this.options.stringify_eol);return this.write(this.options.stringify_eol?e+C.EOL:e,t),this}},{key:"toObject",value:function(){return this.data}}]),t}();i.config();const L=new K(`${f(h(import.meta.url))}/../../package.json`,{stringify_eol:!0});const{PORT:k,ZMQ_URL:B,CHAIN:G,NETWORK:F,BCN_ENV:U,BCN_URL:j,DEBUG_MODE:M,POSTGRES_USER:D,POSTGRES_PASSWORD:W,POSTGRES_DB:V,POSTGRES_HOST:Y,POSTGRES_PORT:X,RPC_PROTOCOL:z,RPC_USER:J,RPC_PASSWORD:Z,RPC_HOST:Q,RPC_PORT:tt,SERVER_VERSION:et,TESTING:st,DEFAULT_WALLET:nt,SYNC_HEIGHT:at,SYNC_INTERVAL_CHECK:ot,POSTGRES_MAX_PARAM_NUM:rt,DB_CONNECTION_RETRY_TIME:ct,SIGNATURE_FRESHNESS_MINUTES:dt,ALLOWED_RPC_METHODS:lt,MWEB_HEIGHT:ut}=process.env;const ft=G||"LTC";const ht=F||"regtest";const pt=U||"dev";const yt=j||"http://127.0.0.1:3000";const bt=parseInt(M,10)||1;const gt=D||"bcn";const mt=W||"bcn";const vt=V||"bcn";const $t=Y||"127.0.0.1";const St=parseInt(X,10)||"5432";et||L.get("version"),!lt||lt.split(",").map((t=>new RegExp(t)));const Et=p({level:["error","warn","info","http","verbose","debug","silly"][bt],format:y.json(),transports:[new b.Console({format:y.combine(y.colorize(),y.timestamp({format:"MM-DD-YYYY HH:mm:ss"}),y.printf((t=>`[2m${t.timestamp}[0m ${t.level} ${t.message}`)))})],exceptionHandlers:[new b.File({filename:"logs/exceptions.log"})],rejectionHandlers:[new b.File({filename:"logs/rejections.log"})]});const wt={maxFiles:1,maxSize:1e5};bt>=0&&Et.add(new b.File({filename:"error.log",level:"error"})),bt>=1&&Et.add(new b.File({filename:"logs/warn.log",level:"warn",...wt})),bt>=2&&Et.add(new b.File({filename:"logs/info.log",level:"info",...wt})),bt>=3&&Et.add(new b.File({filename:"logs/http.log",level:"http",...wt})),bt>=4&&Et.add(new b.File({filename:"logs/verbose.log",level:"verbose",...wt})),bt>=5&&Et.add(new b.File({filename:"logs/debug.log",level:"debug",...wt}));const Tt={error:(t,e)=>{if(e.cn){const{host:s,port:n,database:a,user:o,password:r}=e.cn;Et.debug(`Waiting for db to start { message:${t.message} host:${s}, port:${n}, database:${a}, user:${o}, password: ${r}`)}},noWarnings:!0};"dev"===pt&&bt>0&&(r.isAttached()?r.detach():(r.attach(Tt),r.setTheme("matrix")));const Rt=o(Tt)({host:$t,port:St,database:vt,user:gt,password:mt,allowExitOnIdle:!0,idleTimeoutMillis:100});const Nt=(t,e=Date.now(),s)=>{if(!s){const n=g.sha256().update(yt+e).digest("hex");s=t.sign(n).toDER("hex")}const n=[s,t.getPublic().encodeCompressed("hex"),e];return`Bearer ${Buffer.from(n.join(":")).toString("base64")}`};const{ec:Ot}=t;const{UN_P2SH_URL:_t}=process.env;const{crypto:Ht}=e;const{Random:xt}=Ht;const Pt=(t,e)=>t.length===e.length&&t.slice().sort().every(((t,s)=>t===e.slice().sort()[s]));const At=async(t,e,n)=>s.get(`${e}${t}`,{headers:{Authentication:n}});const qt=async(t,e,n,a)=>s.post(`${n}${t}`,e,{headers:{Authentication:a}});const It=async(t,e,n)=>s.delete(`${e}${t}`,{headers:{Authentication:n}});const Ct=new Ot("secp256k1");const Kt=Ct.genKeyPair();const Lt=Kt.getPublic().encodeCompressed("hex");const kt=Ct.genKeyPair().getPublic().encodeCompressed("hex");describe("app",(()=>{describe("Smart Object API",(()=>{describe("POST /v1/${CHAIN}/${NETWORK}/revs",(()=>{afterEach((async()=>{await Rt.none('DELETE FROM "NonStandard"')})),it("Should return the latest rev for the single input object id",(async()=>{const t=xt.getRandomBuffer(8).toString("hex");const e=xt.getRandomBuffer(8).toString("hex");const s=class{}.toString();const a=class{}.toString();const o=Ht.Hash.sha256(Buffer.from(s)).toString("hex");const r=Ht.Hash.sha256(Buffer.from(a)).toString("hex");await Rt.none('INSERT INTO "NonStandard" ("id", "rev", "publicKeys", "classHash") VALUES (${id}, ${rev}, ${publicKeys}, ${classHash})',{id:`${t}/0`,rev:`${t}/0`,publicKeys:[Lt],classHash:o}),await Rt.none('INSERT INTO "NonStandard" ("id", "rev", "publicKeys", "classHash") VALUES (${id}, ${rev}, ${publicKeys}, ${classHash2})',{id:`${e}/0`,rev:`${e}/2`,publicKeys:[Lt],classHash2:r}),await Rt.none('INSERT INTO "NonStandard" ("id", "rev", "publicKeys", "classHash") VALUES (${id}, ${rev}, ${publicKeys}, ${classHash})',{id:`${e}/1`,rev:`${e}/1`,publicKeys:[kt],classHash:o});const i=await qt(`/v1/${ft}/${ht}/revs`,{ids:[`${t}/0`]},_t,Nt(Kt));n(i).to.not.be.undefined,n(i.status).eq(200),n(i.data.length).eq(1),n(i.data[0]).eq(`${t}/0`)})),it("Should return the latest revs for an array of ids (without ordering)",(async()=>{const t=xt.getRandomBuffer(8).toString("hex");const e=class{}.toString();const s=class{}.toString();const a=Ht.Hash.sha256(Buffer.from(e)).toString("hex");const o=Ht.Hash.sha256(Buffer.from(s)).toString("hex");await Rt.none('INSERT INTO "NonStandard" ("id", "rev", "publicKeys", "classHash") VALUES (${id}, ${rev}, ${publicKeys}, ${classHash})',{id:`${t}/0`,rev:`${t}/0`,publicKeys:[Lt],classHash:a}),await Rt.none('INSERT INTO "NonStandard" ("id", "rev", "publicKeys", "classHash") VALUES (${id}, ${rev}, ${publicKeys}, ${classHash})',{id:`${t}/1`,rev:`${t}/1`,publicKeys:[Lt],classHash:o});const r=await qt(`/v1/${ft}/${ht}/revs`,{ids:[`${t}/1`,`${t}/0`]},_t,Nt(Kt));n(r).to.not.be.undefined,n(r.status).eq(200),n(r.data.length).eq(2),n(r.data.sort()).to.deep.eq([`${t}/1`,`${t}/0`].sort());const i=await qt(`/v1/${ft}/${ht}/revs`,{ids:[`${t}/0`,`${t}/1`]},_t,Nt(Kt));n(i).to.not.be.undefined,n(i.status).eq(200),n(i.data.length).eq(2),n(i.data[0]).eq(`${t}/0`),n(i.data[1]).eq(`${t}/1`)}))})),describe("GET /v1/${CHAIN}/${NETWORK}/non-standard-utxos",(()=>{describe("Endpoint normal behavior",(()=>{const t=xt.getRandomBuffer(8).toString("hex");const e=xt.getRandomBuffer(8).toString("hex");const s=class{}.toString();const o=class{}.toString();const r=Ht.Hash.sha256(Buffer.from(s)).toString("hex");const i=Ht.Hash.sha256(Buffer.from(o)).toString("hex");a((async()=>{await Rt.none('INSERT INTO "NonStandard" ("id", "rev", "publicKeys", "classHash") VALUES (${id}, ${rev}, ${publicKeys}, ${classHash})',{id:`${t}/0`,rev:`${t}/0`,publicKeys:[Lt],classHash:r}),await Rt.none('INSERT INTO "NonStandard" ("id", "rev", "publicKeys", "classHash") VALUES (${id}, ${rev}, ${publicKeys}, ${classHash})',{id:`${e}/0`,rev:`${e}/2`,publicKeys:[Lt],classHash:i}),await Rt.none('INSERT INTO "NonStandard" ("id", "rev", "publicKeys", "classHash") VALUES (${id}, ${rev}, ${publicKeys}, ${classHash})',{id:`${t}/1`,rev:`${t}/1`,publicKeys:[Lt],classHash:r})})),after((async()=>{await Rt.none('DELETE FROM "NonStandard"')})),it("Should return the latest revs for a given public key",(async()=>{const t=await At(`/v1/${ft}/${ht}/non-standard-utxos?publicKey=${Lt}`,_t,Nt(Kt));n(t).to.not.be.undefined,n(t.status).eq(200),n(t.data.length).eq(3),n(Pt[(t.data[0],t.data[1],`${e}/2`)])})),it("Should return the latest revs for a given contract hash",(async()=>{const t=await At(`/v1/${ft}/${ht}/non-standard-utxos?classHash=${i}`,_t,Nt(Kt));n(t).to.not.be.undefined,n(t.status).eq(200),n(t.data.length).eq(1),n(t.data[0]).to.deep.eq(`${e}/2`)}))})),it("Should return blank if there are no latest revs for the given public key in the database",(async()=>{const t=await At(`/v1/${ft}/${ht}/non-standard-utxos?publicKey=${Lt}`,_t,Nt(Kt));n(t).to.not.be.undefined,n(t.status).eq(200),n(t.data.length).eq(0)})),it("Should return blank if there are no parameters set",(async()=>{const t=await At(`/v1/${ft}/${ht}/non-standard-utxos`,_t,Nt(Kt));n(t).to.not.be.undefined,n(t.status).eq(200),n(t.data.length).eq(0)})),it("Should return blank if there are latest revs for the given public key in the database",(async()=>{const t=await At(`/v1/${ft}/${ht}/non-standard-utxos?publicKey=${Lt}`,_t,Nt(Kt));n(t).to.not.be.undefined,n(t.status).eq(200),n(t.data.length).eq(0)}))})),describe("GET /wallet/:address/utxos",(()=>{const t="mzoGRNh55y9j57TPdwRGi3nt9X4CFwpqUS";it("Should return the standard unspent transaction outputs for a given address",(async()=>{const e=await At(`/v1/${ft}/${ht}/wallet/${t}/utxos`,_t,Nt(Kt));n(e).to.not.be.undefined,n(e.status).eq(200),e.data.length&&(n(e.data[0].txid).to.be.a("string"),n(e.data[0].vout).to.be.a("string"),n(e.data[0].address).eq(t),n(e.data[0].scriptPubKey).eq("76a914d3802d2126be127424c647f2e90cfa4a15b49a2388ac"),n(e.data[0].amount).to.be.a("number"),n(e.data[0].satoshis).to.be.a("number"))})),it("Should return [] if the given address does not exist in the database",(async()=>{const t=await At(`/v1/${ft}/${ht}/wallet/2N7ZZBWXQtoWPvfmmPXcJtDiGxNGLzdsY4N/utxos/`,_t,Nt(Kt));n(t).to.not.be.undefined,n(t.status).eq(200),n(t.data.length).eq(0)}))})),describe("GET /address/${address}/balance",(()=>{it("Should return the balance of a given address that exists in the database",(async()=>{const t=await At(`/v1/${ft}/${ht}/address/mzoGRNh55y9j57TPdwRGi3nt9X4CFwpqUS/balance`,_t,Nt(Kt));n(t).to.not.be.undefined,n(t.status).eq(200),n(t.data).to.be.a("number")})),it("Should return 0 if the given address does not exist in the database",(async()=>{const t=await At(`/v1/${ft}/${ht}/address/2N7ZZBWXQtoWPvfmmPXcJtDiGxNGLzdsY4N/balance/`,_t,Nt(Kt));n(t).to.not.be.undefined,n(t.status).eq(200),n(t.data).eq(0)}))}))})),describe("Off Chain Store API",(()=>{describe("GET /:id",(()=>{it("Should return data",(async()=>{const t=Math.random().toString();const s=e.crypto.Hash.sha256(Buffer.from(t)).toString("hex");await Rt.none('INSERT INTO "OffChain"("id", "data") VALUES(${id}, ${data})',{data:t,id:s});const a=await At(`/v1/store/${s}`,_t,Nt(Kt));n(a.status).eq(200),n(a.data).to.deep.eq(t),await Rt.none('DELETE FROM "OffChain" WHERE "id" = ${id}',{id:s})}))})),describe("POST /",(()=>{it("Should post data",(async()=>{const t={__cls:class{n;constructor(){this.n=1}}.toString()}.toString();const s={data:t};const a=await qt("/v1/store",s,_t,Nt(Kt));n(a.status).eq(201);const o=e.crypto.Hash.sha256(Buffer.from(t)).toString("hex");n(a.data._url).eq(`${_t.toLowerCase()}/store/${o}`);const r=await Rt.any('SELECT "id", "data" FROM "OffChain" WHERE id = ${id}',{id:o});n(r.length).eq(1),n(r[0].id).eq(o),n(r[0].data.toString()).eq(t),await Rt.none('DELETE FROM "OffChain" WHERE "id" = ${hash}',{hash:o})}))}))}))}));export{It as authenticatedDelete,At as authenticatedGet,qt as authenticatedPost};

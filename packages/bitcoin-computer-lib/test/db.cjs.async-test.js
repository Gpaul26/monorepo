"use strict";var t=require("crypto");var e=require("chai");var n=require("exponential-backoff");var o=require("bitcoin-computer-bitcore");require("child_process");var s=require("axios");var r=require("crypto-js");var i=require("eciesjs");require("ses"),require("@endo/static-module-record");var c=require("http");var a=require("https");var u=require("url");var p=require("util");function l(t){return t&&"object"==typeof t&&"default"in t?t:{default:t}}function d(t){if(t&&t.__esModule)return t;var e=Object.create(null);return t&&Object.keys(t).forEach((function(n){if("default"!==n){var o=Object.getOwnPropertyDescriptor(t,n);Object.defineProperty(e,n,o.get?o:{enumerable:!0,get:function(){return t[n]}})}})),e.default=t,Object.freeze(e)}var h=l(t);var f=l(s);var g=l(r);var x=d(i);var v=l(c);var y=l(a);var b=l(u);var m=l(p);function w(t,e){var n={};for(var o in t)Object.prototype.hasOwnProperty.call(t,o)&&e.indexOf(o)<0&&(n[o]=t[o]);if(null!=t&&"function"==typeof Object.getOwnPropertySymbols){var s=0;for(o=Object.getOwnPropertySymbols(t);s<o.length;s++)e.indexOf(o[s])<0&&Object.prototype.propertyIsEnumerable.call(t,o[s])&&(n[o[s]]=t[o[s]])}return n}function _(t,e,n,o){return new(n||(n=Promise))((function(s,r){function i(t){try{a(o.next(t))}catch(t){r(t)}}function c(t){try{a(o.throw(t))}catch(t){r(t)}}function a(t){var e;t.done?s(t.value):(e=t.value,e instanceof n?e:new n((function(t){t(e)}))).then(i,c)}a((o=o.apply(t,e||[])).next())}))}const{crypto:S}=o.Bitcoin;const T=(t,e)=>{const n=Date.now();const o=S.Hash.sha256(Buffer.from(e+n));const s=[S.ECDSA.sign(o,t,"big").toString("hex"),t.publicKey.toString(),n];return`Bearer ${Buffer.from(s.join(":")).toString("base64")}`};const O=process.env.CHAIN||"LTC";const q=process.env.NETWORK||"testnet";const C=process.env.BCN_URL||"https://node.bitcoincomputer.io";process.env.RPC_USER,process.env.RPC_PASSWORD;const I=parseInt(process.env.BC_DUST_LIMIT||"",10)||1546;parseInt(process.env.BC_DEFAULT_FEE||"",10);const k=parseInt(process.env.BC_SCRIPT_CHUNK_SIZE||"",10)||479;const B="";const{PublicKey:j,Mnemonic:K,crypto:E}=o.Bitcoin;const{Point:P}=E;function A(t){return Buffer.from(t,"hex").toString().replace(/\0/g,"")}function $(t,e){return t.slice(e)+t.slice(0,e)}function R(t,e,n){if(t.length*Math.log2(e)>53)throw new Error(`Input too large ${t.length} ${Math.log2(e)}`);if(![2,10,16].includes(e)||![2,10,16].includes(n))throw new Error("ToBase or FromBase invalid in covertNumber.");if(2===e&&t.length%8!=0)throw new Error("Binary strings must be byte aligned.");if(16===e&&t.length%2!=0)throw new Error("Hex strings must be of even length.");const o=parseInt(t,e).toString(n);return 2===n?o.padStart(8*Math.ceil(o.length/8),"0"):16===n?o.padStart(2*Math.ceil(o.length/2),"0"):o}function D(t,e){const n=new RegExp(`.{1,${e}}`,"g");return t.match(n)||[]}function N(t){return D(t,2).map((t=>R(t,16,2))).join("")}function U(t){return D(t,8).map((t=>R(t,2,16))).join("")}function M(t){return t.toString(16).padStart(3,"0")}function H(t){return parseInt(t,16)}function F(t){if(62!==t.length)throw new Error("Input to hexToPublicKey must be of length 62");let e=!1;let n=0;let o;for(;!e;){if(n>=256)throw new Error("Something went wrong storing data");const s=n.toString(16).padStart(2,"0")+U($(N(t).padStart(64,"0"),n));try{o=P.fromX(!1,s),e=!0}catch(t){n+=1}}if(!o)throw new Error("Something went wrong storing data");return new j(o)}function J(t){const e=t.point.getX().toString("hex").padStart(64,"0");const n=R(e.slice(0,2),16,10);return U((s=parseInt(n,10),(o=N(e.slice(2))).slice(-s)+o.slice(0,-s)));var o,s}function L(t){return new Promise((e=>{setTimeout(e,t)}))}function W(t=O,e=q){if("testnet"===e||"regtest"===e)return 1;if("BTC"===t)return 0;if("LTC"===t)return 2;if("DOGE"===t)return 3;if("BCH"===t)return 145;if("BSV"===t)return 236;throw new Error(`Unsupported chain ${t}`)}function z({purpose:t=44,coinType:e=2,account:n=0}={}){return`m/${t.toString()}'/${e.toString()}'/${n.toString()}'`}function G(t=O,e=q){return z({coinType:W(t,e)})}function Y(){return Math.round(Math.random()*Math.pow(2,31))}function V({chain:t=O,network:e=q,account:n=Y()}={}){return z({account:n,coinType:W(t,e)})}function X(t,e){const n=function(t,e){return((t,e,n={})=>{const{path:o="m/44'/0'/0'/0",passphrase:s=""}=n;let r=t.toHDPrivateKey(s,e);return o&&(r=r.derive(o)),r.privateKey})(new K("replace this seed"),e,{path:G(t,e),passphrase:""})}(t,e);return j.fromPrivateKey(n)}function Q({mnemonic:t=new K,path:e=G(),passphrase:n=B,network:o=q}){if(void 0!==t&&void 0!==e&&void 0!==n&&void 0!==o)return t.toHDPrivateKey(n,o).deriveChild(e);throw new Error(`Missing required parameters${JSON.stringify({mnemonic:t,path:e,passphrase:n,network:o})}`)}const{PublicKey:Z,Script:tt}=o.Bitcoin;function et(t,e,n,o){if(t.length>3)throw new Error("Too many owners");return function(t,e,n,o){const s=o?[...t,X(e,n).toBuffer()]:t;const r=new tt;return r.add("OP_1"),s.forEach((t=>{r.add(t)})),r.add(`OP_${s.length}`),r.add("OP_CHECKMULTISIG"),r}(t.map((t=>t.toBuffer())),e,n,o)}function nt(t,e){return function(t,e){const n=t.chunks.filter((t=>t.buf));return(e?n.slice(0,-1):n).map((t=>t.buf))}(t,e).map((t=>Z.fromBuffer(t)))}function ot(t,e){return t.map((t=>nt(t,e))).flat().map(J).map(A).join("")}class st{constructor(t,e,n={}){this.baseUrl=t,this.headers=n,this.privateKey=e}get(t){return _(this,void 0,void 0,(function*(){const e=this.privateKey?{Authentication:T(this.privateKey,this.baseUrl)}:{};return(yield f.default.get(`${this.baseUrl}${t}`,{headers:Object.assign(Object.assign({},this.headers),e)})).data}))}post(t,e){return _(this,void 0,void 0,(function*(){const n=this.privateKey?{Authentication:T(this.privateKey,this.baseUrl)}:{};return(yield f.default.post(`${this.baseUrl}${t}`,e,{headers:Object.assign(Object.assign({},this.headers),n)})).data}))}delete(t){return _(this,void 0,void 0,(function*(){const e=this.privateKey?{Authentication:T(this.privateKey,this.baseUrl)}:{};return(yield f.default.delete(`${this.baseUrl}${t}`,{headers:Object.assign(Object.assign({},this.headers),e)})).data}))}}const{Transaction:rt,Mnemonic:ct}=o.Bitcoin;const{UnspentOutput:at}=rt;function ut(t){if(!/^[0-9A-Fa-f]{64}$/.test(t))throw new Error(`Invalid txId: ${t}`)}function pt(t){if(!/^[0-9A-Fa-f]{64}\/\d+$/.test(t))throw new Error(`Invalid outId: ${t}`)}function lt(t){pt(t);const[e,n]=t.split("/");return{txId:e,outputIndex:parseInt(n,10)}}class dt{constructor(t={}){const{chain:e=O,network:n=q,mnemonic:o="",path:s=G(t.chain,t.network),passphrase:r=B,url:i=C}=t;this.chain=e.toUpperCase(),this.network=n.toLowerCase(),this.mnemonic=new ct(o.toString()),this.path=s,this.passphrase=r,this.bcn=new st(i,this.privateKey)}get privateKey(){return Q(this).privateKey}getBalance(t){return _(this,void 0,void 0,(function*(){const{chain:e,network:n}=this;return yield this.bcn.get(`/v1/${e}/${n}/address/${t}/balance`)}))}getTransactions(t){return _(this,void 0,void 0,(function*(){return(yield this.getRawTxs(t)).map((t=>new rt(t)))}))}getRawTxs(t){return _(this,void 0,void 0,(function*(){t.map(ut);const{chain:e,network:n}=this;return this.bcn.post(`/v1/${e}/${n}/tx/bulk/`,{txIds:t})}))}sendTransaction(t){return _(this,void 0,void 0,(function*(){return this.bcn.post(`/v1/${this.chain}/${this.network}/tx/send`,{rawTx:t})}))}getUtxosByAddress(t){return _(this,void 0,void 0,(function*(){const{chain:e,network:n}=this;return(yield this.bcn.get(`/v1/${e}/${n}/wallet/${t.toString()}/utxos`)).map((({rev:t,scriptPubKey:e,satoshis:n})=>{const[o,s]=t.split("/");return new at({txId:o,outputIndex:parseInt(s,10),satoshis:n,script:e})}))}))}query({publicKey:t,classHash:e}){return _(this,void 0,void 0,(function*(){if(void 0===t&&void 0===e)throw new Error("Query parameters cannot be empty.");let n="";t&&(n+=`?publicKey=${t}`),e&&(n+=0===n.length?"?":"&",n+=`classHash=${e}`);const{chain:o,network:s}=this;return this.bcn.get(`/v1/${o}/${s}/non-standard-utxos${n}`)}))}idsToRevs(t){return _(this,void 0,void 0,(function*(){t.map(pt);const{chain:e,network:n}=this;return this.bcn.post(`/v1/${e}/${n}/revs`,{ids:t})}))}rpc(t,e){return _(this,void 0,void 0,(function*(){return this.bcn.post(`/v1/${this.chain}/${this.network}/rpc`,{method:t,params:e})}))}static getSecretOutput({_url:t,privateKey:e}){return _(this,void 0,void 0,(function*(){const n=t.split("/");const o=n[n.length-1];const s=n.slice(0,-2).join("/");const r=new st(s,e);return{host:s,data:yield r.get(`/v1/store/${o}`)}}))}static setSecretOutput({secretOutput:t,host:e,privateKey:n}){return _(this,void 0,void 0,(function*(){return new st(e,n).post("/v1/store/",t)}))}static deleteSecretOutput({_url:t,privateKey:e}){return _(this,void 0,void 0,(function*(){const n=t.split("/");const o=n[n.length-1];const s=n.slice(0,-2).join("/");const r=new st(s,e);yield r.delete(`/v1/store/${o}`)}))}get url(){return this.bcn.baseUrl}}function ht(t){return Buffer.from(g.default.SHA256(t).toString(),"hex").toString("hex").substr(0,4)}function ft(t){return`${ht(t)};${t}`}function gt(t){const e=t.substr(0,4);const n=t.substr(5);if(!function(t,e){return ht(t)===e}(n,e))throw new Error("Decryption failure");return n}function xt(t){if(void 0!==t._readers){const{_readers:e,_url:n,_owners:o,_amount:s}=t,r=w(t,["_readers","_url","_owners","_amount"]);const i=function(t,e){const n=h.default.randomBytes(32).toString("hex");const o=function(t,e){if(!/^[0-9a-f]{64}$/.test(e))throw new Error("Invalid secret");const n=Buffer.from(e,"hex").toString("binary");const o=ft(t);return g.default.AES.encrypt(o,n).toString()}(t,n);const s=e.map((t=>function(t,e){if(!/^0[2-3][0-9a-f]{64}|04[0-9a-f]{128}$/.test(e))throw new Error("Invalid publicKey");const n=ft(t);return x.encrypt(e,Buffer.from(n,"utf8")).toString("base64")}(n,t)));return{__cypher:o,__secrets:s}}(JSON.stringify(r),e);return void 0!==n&&(i._url=n),void 0!==o&&(i._owners=o),void 0!==s&&(i._amount=s),i}return t}const{Transaction:vt}=o.Bitcoin;const{Output:yt,UnspentOutput:bt}=vt;class mt{constructor({restClient:t=new dt}={}){this.tx=new vt,this.tx.feePerKb(2e4),this.outData=[],this.restClient=t}get txId(){return this.tx.id}get chain(){return this.restClient.chain}get network(){return this.restClient.network}get inputs(){return this.tx.inputs.map((t=>`${t.prevTxId.toString("hex")}/${t.outputIndex}`))}get inRevs(){const{enc:t}=this;let[e]=t;return e=Number.isFinite(e)?e:0,this.tx.inputs.slice(0,e).map((({prevTxId:t,outputIndex:e})=>`${t.toString("hex")}/${e}`))}get outRevs(){const{enc:t}=this;let[,e]=t;return e=Number.isFinite(e)?e:0,Array.from(Array(e).keys()).map((t=>`${this.tx.id}/${t}`))}get opReturns(){try{const{outputs:t}=this.tx;return t.filter((({script:t})=>t.isDataOut())).map((({script:t})=>t.getData())).map((t=>t.toString())).join()}catch(t){return""}}get enc(){return D(this.opReturns.slice(0,9),3).map(H)}get dataPrefix(){return this.opReturns.slice(9)}isFullyFunded(){return this.tx._getInputAmount()-this.tx._getOutputAmount()>=this.tx.getFee()}getOwnerOutputs(){const{enc:t}=this;const[,e=0]=t;return this.tx.outputs.slice(0,e)}getDataOutputs(){const{enc:t}=this;const[,e,n]=t;return this.tx.outputs.slice(e,n)}getOutData(){return _(this,void 0,void 0,(function*(){try{const t=ot(this.getDataOutputs().map((t=>t.script)),!0);const{dataPrefix:e}=this;const n=JSON.parse(e+t);const o=this.restClient.privateKey.toBuffer().toString("hex");const s=this.getOwnerOutputs();if(s.length!==n.length)throw new Error("Inconsistent state");const r=s.map(((t,e)=>Object.assign(Object.assign({},n[e]),{_owners:nt(t.script,!1).map((t=>t.toString())),_amount:t.satoshis})));return Promise.all(r.map((t=>_(this,void 0,void 0,(function*(){try{const e=yield function(t){return e=>_(this,void 0,void 0,(function*(){if(function(t){return void 0!==t._url}(e)){const{_url:n}=e,o=w(e,["_url"]);const{host:s,data:r}=yield dt.getSecretOutput({_url:n,privateKey:t});return Object.assign(Object.assign(Object.assign({},o),JSON.parse(r)),{_url:s})}return e}))}(this.restClient.privateKey)(t);return function(t,e){if(function(t){return void 0!==t.__cypher&&void 0!==t.__secrets}(t)){const{__cypher:n,__secrets:o}=t,s=w(t,["__cypher","__secrets"]);return Object.assign(Object.assign(Object.assign({},s),JSON.parse(function({__cypher:t,__secrets:e},n){let o="";if(n.forEach((n=>{e.forEach((e=>{try{const s=function(t,e){if(!/^[0-9a-f]{64}$/.test(e))throw new Error("Invalid privateKey");return gt(x.decrypt(e,Buffer.from(t,"base64")).toString("utf8"))}(e,n);o=function(t,e){if(!/^[0-9a-f]{64}$/.test(e))throw new Error("Invalid secret");const n=Buffer.from(e,"hex").toString("binary");return gt(g.default.AES.decrypt(t,n).toString(g.default.enc.Utf8))}(t,s)}catch(t){const e=["Decryption failure","Unsupported state or unable to authenticate data"];if(t instanceof Error&&!e.includes(t.message))throw t}}))})),o)return o;throw new Error("Decryption failure")}({__cypher:n,__secrets:o},e))),{_readers:[]})}return t}(e,[o])}catch(t){return null}})))))}catch(t){return[]}}))}getOwners(){return this.getOwnerOutputs().map((t=>nt(t.script,!1).map((t=>t.toString()))))}getAmounts(){return this.getOwnerOutputs().map((t=>t.satoshis))}spendFromData(t){return _(this,void 0,void 0,(function*(){if(!t.length)return;const e=t.map(lt);const n=e.map((t=>t.txId));const s=yield this.restClient.getTransactions(n);for(let t=0;t<e.length;t+=1){const{txId:n,outputIndex:r}=e[t];const{outputs:i}=s[t];const c=i[r];const a=Math.round(c.satoshis);const u=new o.Bitcoin.Script(c.script);const p=new bt({txId:n,outputIndex:r,satoshis:a,script:u});const l=nt(u,!1).map((t=>t.toString()));this.tx.from([p],l,1)}}))}createDataOuts(t){t.forEach((({_amount:t,_owners:e=[]})=>{if(Array.isArray(e)&&e.length>3)throw new Error("Too many owners.");const n=e.map((t=>o.Bitcoin.PublicKey.fromString(t)));const s=t||I;const r=et(n,this.chain,this.network,!1);this.tx.addOutput(new yt({script:r,satoshis:s}))}));const e=t.map((t=>w(t,["_amount","_owners"])));const n=I;const s=JSON.stringify(e);const r=s.slice(0,71);const i=function(t,e,n,o){var s;return function(t,e){const n=[];for(let e=0;e<t.length;e+=2)n.push(t.slice(e,e+2));return n}(D((s=t,Buffer.from(s).toString("hex")),62).map((t=>t.padStart(62,"0"))).map(F)).map((t=>et(t,e,n,!0)))}(s.slice(71),this.chain,this.network);const c=M(this.tx.inputs.length)+M(this.tx.outputs.length)+M(this.tx.outputs.length+i.length);i.forEach((t=>{this.tx.addOutput(new yt({script:t,satoshis:n}))})),this.tx.addData(c+r)}static fromTxHex({hex:t="",restClient:e=new dt}){return _(this,void 0,void 0,(function*(){let n=[];let o=[];let s=[];const r=new this({restClient:e});r.tx.fromString(t);try{n=yield r.getOutData()}catch(t){}try{o=r.getOwners()}catch(t){}try{s=r.getAmounts()}catch(t){}return r.outData=n.map(((t,e)=>Object.assign(Object.assign({},t),{_owners:o[e],_amount:s[e]}))),r}))}static fromTxId({txId:t="",restClient:e=new dt}){return _(this,void 0,void 0,(function*(){const[n]=yield e.getRawTxs([t]);return this.fromTxHex({hex:n,restClient:e})}))}}class wt{constructor(t={}){this.restClient=new dt(t)}derive(t="0"){const e=`${this.path}${this.path.length>0?"/":""}${t}`;const{chain:n,network:o,url:s,mnemonic:r,passphrase:i}=this.restClient;return new wt({chain:n,network:o,url:s,mnemonic:r.toString(),path:e,passphrase:i})}getBalance(){return _(this,void 0,void 0,(function*(){return this.restClient.getBalance(this.address)}))}getUtxosByAmount(t){return _(this,void 0,void 0,(function*(){const e=yield this.restClient.getUtxosByAddress(this.address);let n=0;const o=[];!function(t){const e=t;for(let t=e.length-1;t>0;t-=1){const n=Math.floor(Math.random()*(t+1));[e[t],e[n]]=[e[n],e[t]]}}(e);for(const s of e)if(n+=s.satoshis,o.push(s),n>=t)return o;const{network:s,chain:r}=this.restClient;const i=this.address.toString();throw new Error(`Insufficient balance in address ${i} on ${s} ${r}. Found ${n}, required ${t}.`)}))}fundAndSendTx(t){return _(this,void 0,void 0,(function*(){t.tx.feePerKb(4e4);const e=t.tx.outputs.length;const{chain:n,network:s}=this.restClient;t.tx.to(function(t,e){const n={"any-testnet":"uTKUDCkpo12vstJBsMWmrTPz9wFE6DuzGH","BTC-mainnet":"igpnnoLziUyxtQuWYCP13gHYVhUru6iLaY","LTC-mainnet":"t77o829ngHnuUorwDkf129fL6ERLFNqKG8","DOGE-mainnet":"XfNRUdvrv6uCDbCF5xJ18UYwVkkefkXvEd","BCH-mainnet":"CSAkkS8Mro9mYRqhksS1FyYrsnSE5MVQ5m"};return $("testnet"===e||"regtest"===e?n["any-testnet"]:n[`${t}-${e}`],19)}(n,s),0);const r=yield this.restClient.getUtxosByAddress(this.address);if(t.tx.change(this.address),0===r.length)throw new Error(`Insufficient balance in address ${this.address}.`);let i=0;let c=0;let a=0;do{const[e]=r.splice(0,1);t.tx.from([new o.Bitcoin.Transaction.UnspentOutput(e)]),t.tx.sign(this.privateKey,1),c=t.tx.toString().length,t.tx.fee(2e4*c*2),t.tx._updateChangeOutput(),a=t.tx._getInputAmount()-t.tx._getOutputAmount(),i=a/c*1e3}while(0!==r.length&&i<4e4);if(i<4e4&&0===r.length)throw new Error(`Insufficient balance in address ${this.address}. Current fee_per_kb ${i}. Fee ${a}. Utxo set size ${r.length}. CTransaction size ${c} Inputs ${JSON.stringify(t.tx.inputs,null,2)} Outpus ${JSON.stringify(t.tx.outputs,null,2)}`);if(c=t.tx.toString().length,a=Math.ceil(c/1e3*2e4),t.tx.fee(a),t.tx.outputs[e].satoshis=a,t.tx._outputAmount=void 0,t.tx.feePerKb(2e4),t.tx._outputAmount=void 0,t.tx._updateChangeOutput(),!1===t.isFullyFunded()||!1===t.tx.verify())throw new Error(`Something went wrong. Address ${this.address}. Transaction: ${JSON.stringify(t.tx,null,2)}`);return t.tx.sign(this.privateKey,1),this.restClient.sendTransaction(t.tx.toString())}))}send(t,e){return _(this,void 0,void 0,(function*(){const{restClient:n}=this;const o=new mt({restClient:n});return o.tx.to(e,t),this.fundAndSendTx(o)}))}get hdPrivateKey(){return Q(this.restClient)}get privateKey(){return this.hdPrivateKey.privateKey}get publicKey(){return this.hdPrivateKey.publicKey}get passphrase(){return this.restClient.passphrase}get path(){return this.restClient.path}get chain(){return this.restClient.chain}get network(){return this.restClient.network}get url(){return this.restClient.url}get mnemonic(){return this.restClient.mnemonic}get address(){return this.publicKey.toAddress(this.restClient.network)}}class _t{constructor(t={}){this.wallet=new wt(t)}fromTxHex(t){return _(this,void 0,void 0,(function*(){const{restClient:e}=this.wallet;return mt.fromTxHex({hex:t,restClient:e})}))}fromTxId(t){return _(this,void 0,void 0,(function*(){const[e]=yield this.wallet.restClient.getRawTxs([t]);return this.fromTxHex(e)}))}get(t){return _(this,void 0,void 0,(function*(){const e=t.map(lt);return Promise.all(e.map((({txId:t,outputIndex:e})=>_(this,void 0,void 0,(function*(){const{outData:n}=yield this.fromTxId(t);if(e>n.length)throw new Error("Index out of bounds");return n[e]})))))}))}put(t){return this.update([],t)}createTx(t,e){return _(this,void 0,void 0,(function*(){const{wallet:n}=this;const{restClient:o}=n;const s=new mt({restClient:o});const{privateKey:r,publicKey:i}=n;const c=e.map((t=>{var{_owners:e}=t,n=w(t,["_owners"]);return Object.assign({_owners:e||[i.toString()]},n)})).map(xt);const a=yield Promise.all(c.map(function(t){return e=>_(this,void 0,void 0,(function*(){if(void 0!==e._url){const{_url:n,_owners:o,_amount:s}=e,r=w(e,["_url","_owners","_amount"]);const i=yield dt.setSecretOutput({host:n,secretOutput:{data:JSON.stringify(r)},privateKey:t});return void 0!==o&&(i._owners=o),void 0!==s&&(i._amount=s),i}return e}))}(r)));return yield s.spendFromData(t),yield s.createDataOuts(a),s}))}update(t,e){return _(this,void 0,void 0,(function*(){const n=yield this.createTx(t,e);return yield this.wallet.fundAndSendTx(n),n.outRevs}))}}var St=v.default;var Tt=y.default;var Ot=b.default;function qt(t){"string"==typeof t&&(t=function(t){var e=Ot.parse(t);var n=e.hostname;var o=parseInt(e.port,10);var s=e.protocol;s=s.substring(0,s.length-1);var r=e.auth.split(":");return{host:n,port:o,protocol:s,user:r[0]?decodeURIComponent(r[0]):null,pass:r[1]?decodeURIComponent(r[1]):null}}(t)),t=t||{},this.host=t.host||"127.0.0.1",this.port=t.port||8332,this.user=t.user||"user",this.pass=t.pass||"pass",this.protocol="http"===t.protocol?St:Tt,this.batchedCalls=null,this.disableAgent=t.disableAgent||!1;var e=void 0!==t.rejectUnauthorized;this.rejectUnauthorized=!e||t.rejectUnauthorized,qt.config.log?this.log=qt.config.log:this.log=qt.loggers[qt.config.logger||"normal"]}var Ct=console.log.bind(console);var It=function(){};function kt(t,e){var n=this;t=JSON.stringify(t);var o=this.user+":"+this.pass;var s=Buffer.from&&Buffer.from!==Uint8Array.from?Buffer.from(o):new Buffer(o);this.auth=s.toString("base64");var r={host:n.host,path:"/",method:"POST",port:n.port,rejectUnauthorized:n.rejectUnauthorized,agent:!n.disableAgent&&void 0};if(n.httpOptions)for(var i in n.httpOptions)r[i]=n.httpOptions[i];var c=!1;var a="Bitcoin JSON-RPC: ";var u=this.protocol.request(r,(function(t){var o="";t.on("data",(function(t){o+=t})),t.on("end",(function(){if(!c)if(c=!0,401!==t.statusCode)if(403!==t.statusCode){if(500===t.statusCode&&"Work queue depth exceeded"===o.toString("utf8")){var s=new Error("Bitcoin JSON-RPC: "+o.toString("utf8"));return s.code=429,void e(s)}var r;try{r=JSON.parse(o)}catch(s){n.log.err(s.stack),n.log.err(o),n.log.err("HTTP Status code:"+t.statusCode);var i=new Error(a+"Error Parsing JSON: "+s.message);return void e(i)}e(r.error,r)}else e(new Error(a+"Connection Rejected: 403 Forbidden"));else e(new Error(a+"Connection Rejected: 401 Unnauthorized"))}))}));u.on("error",(function(t){var n=new Error(a+"Request Error: "+t.message);c||(c=!0,e(n))})),u.setHeader("Content-Length",t.length),u.setHeader("Content-Type","application/json"),u.setHeader("Authorization","Basic "+n.auth),u.write(t),u.end()}qt.loggers={none:{info:It,warn:It,err:It,debug:It},normal:{info:Ct,warn:Ct,err:Ct,debug:It},debug:{info:Ct,warn:Ct,err:Ct,debug:Ct}},qt.config={logger:"normal"},qt.prototype.batch=function(t,e){this.batchedCalls=[],t(),kt.call(this,this.batchedCalls,e),this.batchedCalls=null},qt.callspec={abandonTransaction:"str",abortRescan:"",addMultiSigAddress:"",addNode:"",analyzePSBT:"str",backupWallet:"",bumpFee:"str",clearBanned:"",combinePSBT:"obj",combineRawTransaction:"obj",convertToPSBT:"str",createMultiSig:"",createPSBT:"obj",createRawTransaction:"obj obj",createWallet:"str",decodePSBT:"str",decodeScript:"str",decodeRawTransaction:"",deriveAddresses:"str",disconnectNode:"",dumpPrivKey:"",dumpWallet:"str",encryptWallet:"",enumerateSigners:"",estimateFee:"",estimateSmartFee:"int str",estimatePriority:"int",generate:"int",generateBlock:"str obj",generateToAddress:"int str",generateToDescriptor:"int str",getAccount:"",getAccountAddress:"str",getAddedNodeInfo:"",getAddressMempool:"obj",getAddressUtxos:"obj",getAddressBalance:"obj",getAddressDeltas:"obj",getAddressesByLabel:"str",getAddressInfo:"str",getAddressTxids:"obj",getAddressesByAccount:"",getBalance:"str int",getBalances:"",getBestBlockHash:"",getBlockDeltas:"str",getBlock:"str int",getBlockchainInfo:"",getBlockCount:"",getBlockFilter:"str",getBlockHashes:"int int obj",getBlockHash:"int",getBlockHeader:"str",getBlockNumber:"",getBlockStats:"str",getBlockTemplate:"",getConnectionCount:"",getChainTips:"",getChainTxStats:"",getDescriptorInfo:"str",getDifficulty:"",getGenerate:"",getHashesPerSec:"",getIndexInfo:"",getInfo:"",getMemoryInfo:"",getMemoryPool:"",getMemPoolAncestors:"str",getMemPoolDescendants:"str",getMemPoolEntry:"str",getMemPoolInfo:"",getMiningInfo:"",getNetTotals:"",getNetworkHashPS:"",getNetworkInfo:"",getNewAddress:"str str",getNodeAddresses:"",getPeerInfo:"",getRawChangeAddress:"",getRawMemPool:"bool",getRawTransaction:"str int",getReceivedByAccount:"str int",getReceivedByAddress:"str int",getReceivedByLabel:"str",getRpcInfo:"",getSpentInfo:"obj",getTransaction:"",getTxOut:"str int bool",getTxOutProof:"",getTxOutSetInfo:"",getUnconfirmedBalance:"",getWalletInfo:"",getWork:"",getZmqNotifications:"",finalizePSBT:"str",fundRawTransaction:"str",help:"",importAddress:"str str bool",importDescriptors:"str",importMulti:"obj obj",importPrivKey:"str str bool",importPrunedFunds:"str, str",importPubKey:"str",importWallet:"str",invalidateBlock:"str",joinPSBTs:"obj",keyPoolRefill:"",listAccounts:"int",listAddressGroupings:"",listBanned:"",listDescriptors:"",listLabels:"",listLockUnspent:"bool",listReceivedByAccount:"int bool",listReceivedByAddress:"int bool",listReceivedByLabel:"",listSinceBlock:"str int",listTransactions:"str int int",listUnspent:"int int",listWalletDir:"",listWallets:"",loadWallet:"str",lockUnspent:"",logging:"",move:"str str float int str",ping:"",preciousBlock:"str",prioritiseTransaction:"str float int",pruneBlockChain:"int",psbtBumpFee:"str",removePrunedFunds:"str",reScanBlockChain:"",saveMemPool:"",send:"obj",setHDSeed:"",setLabel:"str str",setWalletFlag:"str",scanTxOutSet:"str",sendFrom:"str str float int str str",sendMany:"str obj int str",sendRawTransaction:"str",sendToAddress:"str float str str",setAccount:"",setBan:"str str",setNetworkActive:"bool",setGenerate:"bool int",setTxFee:"float",signMessage:"",signMessageWithPrivKey:"str str",signRawTransaction:"",signRawTransactionWithKey:"str obj",signRawTransactionWithWallet:"str",stop:"",submitBlock:"str",submitHeader:"str",testMemPoolAccept:"obj",unloadWallet:"",upgradeWallet:"",uptime:"",utxoUpdatePSBT:"str",validateAddress:"",verifyChain:"",verifyMessage:"",verifyTxOutProof:"str",walletCreateFundedPSBT:"",walletDisplayAddress:"str",walletLock:"",walletPassPhrase:"string int",walletPassphraseChange:"",walletProcessPSBT:"str"};var Bt=function(t,e,n){return Array.prototype.slice.call(t,e,n)};function jt(){return parseInt(1e5*Math.random())}!function(t,e,n){function o(t,e){return function(){var o=arguments.length-1;this.batchedCalls&&(o=arguments.length);for(var s=0;s<o;s++)e[s]&&(arguments[s]=e[s](arguments[s]));this.batchedCalls?this.batchedCalls.push({jsonrpc:"2.0",method:t,params:Bt(arguments),id:jt()}):n.call(this,{method:t,params:Bt(arguments,0,arguments.length-1),id:jt()},arguments[arguments.length-1])}}var s={str:function(t){return t.toString()},int:function(t){return parseFloat(t)},float:function(t){return parseFloat(t)},bool:function(t){return!0===t||"1"==t||"true"==t||"true"==t.toString().toLowerCase()},obj:function(t){return"string"==typeof t?JSON.parse(t):t}};for(var r in e){var i=[];if(e[r].length){i=e[r].split(" ");for(var c=0;c<i.length;c++)s[i[c]]?i[c]=s[i[c]]:i[c]=s.str}var a=r.toLowerCase();t.prototype[r]=o(a,i),t.prototype[a]=t.prototype[r]}}(qt,qt.callspec,kt);var Kt=qt;const Et=new Kt({protocol:process.env.RPC_PROTOCOL,user:process.env.RPC_USER,pass:process.env.RPC_PASSWORD,host:process.env.RPC_HOST,port:process.env.RPC_PORT});const Pt={createwallet:m.default.promisify(Kt.prototype.createwallet.bind(Et)),getaddressinfo:m.default.promisify(Kt.prototype.getaddressinfo.bind(Et)),getBlock:m.default.promisify(Kt.prototype.getBlock.bind(Et)),getBlockchainInfo:m.default.promisify(Kt.prototype.getBlockchainInfo.bind(Et)),getBlockHash:m.default.promisify(Kt.prototype.getBlockHash.bind(Et)),generateToAddress:m.default.promisify(Kt.prototype.generateToAddress.bind(Et)),getRawTransaction:m.default.promisify(Kt.prototype.getRawTransaction.bind(Et)),importaddress:m.default.promisify(Kt.prototype.importaddress.bind(Et)),listunspent:m.default.promisify(Kt.prototype.listunspent.bind(Et)),sendRawTransaction:m.default.promisify(Kt.prototype.sendRawTransaction.bind(Et))};const{Opcode:At,Script:$t,Mnemonic:Rt,crypto:Dt,Transaction:Nt,encoding:Ut}=o.Bitcoin;function Mt(t=0){return new Rt(function(t=0){return"travel upgrade inside soda birth essence junk merit never twenty system opinion;toddler hockey salute wheel harvest video narrow riot guitar lake sea call;cannon hour begin test replace fury motion squirrel envelope announce neck culture".split(";")[t]}(t))}function Ht(t=0){return function(t=0){return function(t=0){return Mt().toHDPrivateKey("",q).derive(V({account:t}))}(t).privateKey}(t).toPublicKey()}const Ft=({random:t=!1}={})=>_(void 0,void 0,void 0,(function*(){const e=t?V():G();const o=Mt();const s=new wt({mnemonic:o,path:e});return yield n.backOff((()=>_(void 0,void 0,void 0,(function*(){return(t=>_(void 0,void 0,void 0,(function*(){const{result:e}=yield Pt.generateToAddress(1,t.address);const{result:n}=yield Pt.getBlock(e[0],2);if(n.confirmations<=0)throw new Error(`No confirmations on block mining: ${n.confirmations}`)})))(s)})))),e}));function Jt(t,n){const o=Object.keys(n);const s=Object.keys(t);if(o.length!==s.length)throw new Error("Actual keys do not match expected keys");o.forEach((o=>{const s=t[o];const r=n[o];if(void 0===r)throw new Error(`${o} is not defined in expected object`);if("value"===r.check)e.expect(t).to.have.property(o),e.expect(t[o]).to.deep.eq(r.value);else{if("type"!==r.check)throw new Error("Error configuring expectToEqual: set 'check' to 'type' or 'value'");if("string"===r.type)e.expect(t).to.have.property(o).that.is.a("string");else if("number"===r.type)e.expect(t).to.have.property(o).that.is.a("number");else if("array"===r.type){if(e.expect(t).to.have.property(o).that.is.a("array").that.have.lengthOf(r.length),void 0!==r.length&&r.length>0)for(let t=0;t<s.length;t+=1)e.expect(s[t]).to.be.an(r.subtype)}else{if("object"!==r.type)throw new Error("Error configuring expectToEqual: set 'type' to 'number', 'string', array', or 'object'.");e.expect(t).to.have.property(o).that.is.an("object")}}}))}const Lt=Mt();let Wt=[];before("Before db",(()=>_(void 0,void 0,void 0,(function*(){Wt=yield function({n:t=1,random:e=!1}={}){return _(this,void 0,void 0,(function*(){const n=[];for(let o=0;o<t;o+=1)n.push(yield Ft({random:e}));return yield _(void 0,void 0,void 0,(function*(){let t=!1;do{try{const{result:e}=yield Pt.generateToAddress(100,(new Rt).toHDPrivateKey("",q).derive(G(O,q)).privateKey.toPublicKey().toAddress());t=100===e.length}catch(t){L(500)}}while(!t)})),n}))}({n:30,random:!0})}))));const zt=t=>_(void 0,void 0,void 0,(function*(){const[e]=yield t.restClient.getUtxosByAddress(t.address);if(e)return e;throw new Error("No utxos found")}));describe("Db",(()=>{describe("fromTxHex",(()=>{it("should work for a transaction with a data output",(()=>_(void 0,void 0,void 0,(function*(){const t=new _t({mnemonic:Lt,path:Wt.pop()});const{wallet:o}=t;const{privateKey:s}=o;yield L(2e3);const r=yield n.backOff((()=>zt(o)));e.expect(r).to.not.be.undefined;const{publicKey:i}=o;const c={a:1,_owners:[i.toString()],_amount:I};const{restClient:a}=o;const u=new mt({restClient:a});u.createDataOuts([c]),u.tx.from(r),u.tx.sign(s,1),yield o.fundAndSendTx(u);const p=u.tx.toString();const l=yield t.fromTxHex(p);e.expect(l.inRevs).to.deep.eq([]),e.expect(l.outRevs).to.be.an("array"),e.expect(l.inputs).to.be.an("array").that.have.lengthOf(1),e.expect(l.inputs[0]).to.be.a("string"),e.expect(l.outData).to.deep.eq([c]),e.expect(l.opReturns).to.deep.eq('000001001[{"a":1}]'),e.expect(l.txId).to.be.a("string")})))),it("should work for a transaction with an encrypted output",(()=>_(void 0,void 0,void 0,(function*(){const t=new _t({mnemonic:Lt,path:Wt.pop()});const{wallet:o}=t;const{privateKey:s}=o;const r=yield n.backOff((()=>zt(o)));e.expect(r).to.not.be.undefined;const{publicKey:i}=o;const c={a:1,_owners:[i.toString()],_readers:[i.toString()],_amount:I};const{restClient:a}=o;const u=new mt({restClient:a});u.createDataOuts([c]),u.tx.from(r),u.tx.sign(s,1),yield o.fundAndSendTx(u);const p=u.tx.toString();const l=yield t.fromTxHex(p);e.expect(l.inRevs).to.deep.eq([]),e.expect(l.outRevs).to.be.an("array"),e.expect(l.inputs[0]).to.be.a("string"),e.expect(l.inputs.length).to.be.greaterThan(0),e.expect(l.outData).to.deep.eq([c]),e.expect(l.txId).to.be.a("string")}))))})),describe("get",(()=>{it("should retrieve an small object from the blockchain",(()=>_(void 0,void 0,void 0,(function*(){const t=new _t({mnemonic:Lt,path:Wt.pop()});const{wallet:n}=t;const o=yield t.put([{a:"a",b:"b"}]);e.expect(o.length).eq(1);const s=yield t.get(o);e.expect(s).to.deep.eq([{a:"a",b:"b",_owners:[n.publicKey.toString()],_amount:I}])})))),it("should set default amount",(()=>_(void 0,void 0,void 0,(function*(){const t=new _t({mnemonic:Lt,path:Wt.pop()});const{wallet:n}=t;const o=yield t.put([{a:"a",b:"b"}]);const s=yield t.get(o);e.expect(s).to.deep.eq([{a:"a",b:"b",_amount:I,_owners:[n.publicKey.toString()]}])})))),it("should retrieve an encrypted object from the blockchain",(()=>_(void 0,void 0,void 0,(function*(){const t=new _t({mnemonic:Lt,path:Wt.pop()});const{wallet:e}=t;const n=[{a:"a",b:"b",_readers:[e.publicKey.toString()]}];const o=yield t.put(n);Jt((yield t.get(o))[0],{a:{check:"value",value:"a"},b:{check:"value",value:"b"},_readers:{check:"value",value:[]},_amount:{check:"type",type:"number"},_owners:{check:"value",value:[e.publicKey.toString()]}})})))),it("should retrieve an off-chain object from the blockchain",(()=>_(void 0,void 0,void 0,(function*(){const t=new _t({mnemonic:Lt,path:Wt.pop()});const{wallet:n}=t;const o={a:"a",b:"b",A:class{constructor(){this._url="http://127.0.0.1:3000"}}.toString(),_url:"http://127.0.0.1:3000"};const s=yield t.put([o]);const r=yield t.get(s);e.expect(r).to.deep.eq([Object.assign(Object.assign({},o),{_owners:[n.publicKey.toString()],_amount:I})])})))),it("should retrieve multiple small objects from the blockchain",(()=>_(void 0,void 0,void 0,(function*(){const t=new _t({mnemonic:Lt,path:Wt.pop()});const{wallet:n}=t;const o=n.derive("0").publicKey.toString();const s=n.derive("1").publicKey.toString();const r=n.derive("2").publicKey.toString();const i={a:"a",_owners:[o],__cls:`class ${h.default.randomBytes(32).toString("hex")} {\n            constructor(n) {\n                this.n = n;\n            }\n            inc(n) {\n                this.n += n;\n                return this.n;\n            }\n        }`};const c={b:"b",_owners:[s],__cls:`class ${h.default.randomBytes(32).toString("hex")} {\n            constructor(n) {\n                this.n = n;\n            }\n            inc(n) {\n                this.n += n;\n                return this.n;\n            }\n        }`};const a={c:"c",_owners:[r],__cls:`class ${h.default.randomBytes(32).toString("hex")} {\n            constructor(n) {\n                this.n = n;\n            }\n            inc(n) {\n                this.n += n;\n                return this.n;\n            }\n        }`};const u=[i,c,a];const p=[i,c];const l=yield yield t.put(u);const d=yield t.put(p);const f=l.concat(d);const g=yield t.get(f);e.expect(g).to.deep.eq([{a:"a",_owners:[o],_amount:I,__cls:i.__cls},{b:"b",_owners:[s],_amount:I,__cls:c.__cls},{c:"c",_owners:[r],_amount:I,__cls:a.__cls},{a:"a",_owners:[o],_amount:I,__cls:i.__cls},{b:"b",_owners:[s],_amount:I,__cls:c.__cls}])})))),it("should retrieve a large object from the blockchain",(()=>_(void 0,void 0,void 0,(function*(){const t=new _t({mnemonic:Lt,path:Wt.pop()});const{wallet:n}=t;const o=n.publicKey.toString();const s="a".repeat(Math.min(k,500));const r=[{a:s,_owners:[o]}];const i=yield t.put(r);const[c]=yield t.get(i);e.expect(c).to.deep.eq({a:s,_owners:[o],_amount:I}),e.expect(c._owners&&c._owners[0].toString()).eq(o.toString())})))),it("should retrieve multiple large objects from the blockchain",(()=>_(void 0,void 0,void 0,(function*(){const t=new _t({mnemonic:Lt,path:Wt.pop()});const{wallet:n}=t;const o=h.default.randomBytes(32).toString("hex");const s=h.default.randomBytes(32).toString("hex");const r=h.default.randomBytes(32).toString("hex");const i={a:"a".repeat(1e3),_owners:[n.derive("0").publicKey.toString()],__cls:`class ${o} {\n            constructor(n) {\n                this.n = n;\n            }\n            inc(n) {\n                this.n += n;\n                return this.n;\n            }\n        }`};const c={b:"b".repeat(471),_owners:[n.derive("1").publicKey.toString()],__cls:`class ${s} {\n            constructor(n) {\n                this.n = n;\n            }\n            inc(n) {\n                this.n += n;\n                return this.n;\n            }\n        }`};const a=[i,c,{c:"c".repeat(1e3),_owners:[n.derive("2").publicKey.toString()],__cls:`class ${r} {\n            constructor(n) {\n                this.n = n;\n            }\n            inc(n) {\n                this.n += n;\n                return this.n;\n            }\n        }`}];const u=[i,c];const p=a.concat(u);const l=yield t.put(a);e.expect(l.length).eq(3);const d=yield t.put(u);e.expect(d.length).eq(2);const f=l.concat(d);e.expect(f.length).eq(5);const g=yield t.get(f);e.expect(g.length).eq(5),g.forEach(((t,n)=>{e.expect(t.toString()).to.deep.eq(p[n].toString())}))})))),it("should set __vins and __vouts correctly",(()=>_(void 0,void 0,void 0,(function*(){const t=new _t({mnemonic:Lt,path:Wt.pop()});const{wallet:n}=t;const o=n.publicKey.toString();const s={a:"a".repeat(500),_owners:[o],_amount:I};const[r,i]=yield t.put([s,s]);e.expect(r).to.not.be.undefined,e.expect(i).to.not.be.undefined;const c=r.split("/")[0];const{restClient:a}=n;const u=yield mt.fromTxId({txId:c,restClient:a});e.expect(u.tx.inputs.length).to.be.greaterThanOrEqual(1),e.expect(u.tx.outputs.length).to.be.greaterThanOrEqual(4);const p=yield t.fromTxId(c);e.expect(p.txId).to.deep.eq(c),e.expect(p.inputs).to.be.an("array"),e.expect(p.inRevs).to.deep.eq([]),e.expect(p.outRevs).to.deep.eq([r,i]),e.expect(p.outData).to.deep.eq([s,s]),e.expect(p.opReturns).eq('000002012[{"a":"aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa');const[l,d]=yield t.update([r,i],[s,s]);const[h,f]=l.split("/");const[g,x]=d.split("/");e.expect(h).eq(g),e.expect(f).eq("0"),e.expect(x).eq("1");const v=yield mt.fromTxId({txId:h,restClient:a});e.expect(v.tx.inputs.length).to.be.greaterThanOrEqual(2),e.expect(v.tx.outputs.length).to.be.greaterThanOrEqual(5);const y=yield t.fromTxId(h);e.expect(y.txId).to.deep.eq(h),e.expect(y.inputs).to.be.an("array"),e.expect(y.inRevs).to.deep.eq([r,i]),e.expect(y.outRevs).to.deep.eq([l,d]),e.expect(y.outData).to.deep.eq([s,s]),e.expect(y.opReturns).eq('002002012[{"a":"aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa');const[b]=yield a.idsToRevs([r]);e.expect(b).to.not.be.undefined;const[m]=yield a.idsToRevs([i]);e.expect(m).to.not.be.undefined}))))})),describe("createTx",(()=>{it("should work with a small object",(()=>_(void 0,void 0,void 0,(function*(){const t=new _t({mnemonic:Lt,path:Wt.pop()});const{wallet:n}=t;const o=yield t.createTx([],[{a:"a"}]);e.expect(o).to.not.be.undefined,e.expect(o.tx).to.not.be.undefined,e.expect(o.tx.outputs).to.not.be.undefined,e.expect(o.tx.inputs).to.not.be.undefined,e.expect(o.tx.outputs.length).eq(2),e.expect(yield o.getOutData()).to.deep.eq([{a:"a",_amount:I,_owners:[n.publicKey.toString()]}])}))))})),describe("put",(()=>{it("should store a json object",(()=>_(void 0,void 0,void 0,(function*(){const t=new _t({mnemonic:Lt,path:Wt.pop()});const{wallet:n}=t;const{restClient:o}=n;const s={a:"a",b:"b"};const r=yield t.put([s]);e.expect(r[0]).to.be.a("string");const[i,c]=r[0].split("/");e.expect(i.length).eq(64),e.expect(c).eq("0");const a=yield mt.fromTxId({txId:i,restClient:o});e.expect(a.tx.inputs).to.not.be.undefined,e.expect(a.tx.inputs.length).to.be.greaterThanOrEqual(1),e.expect(a.tx.outputs).to.not.be.undefined,e.expect(a.tx.outputs.length).eq(4);const{outData:u}=a;e.expect(u).to.deep.eq([Object.assign({_owners:[t.wallet.publicKey.toString()],_amount:I},s)]);const p=yield mt.fromTxId({txId:i,restClient:o});const{opReturns:l,enc:d}=p;const[,h,f]=d;const g=(l+ot(p.tx.outputs.slice(h,f).map((t=>t.script)),!0)).substring(9);const x=JSON.parse(g);e.expect(x).to.deep.eq([s]);const v=Object.keys(x[0]);e.expect(v.includes("_owners")).eq(!1),e.expect(v.includes("_amount")).eq(!1),e.expect(v.includes("_readers")).eq(!1)})))),it("should store a json object with an amount set",(()=>_(void 0,void 0,void 0,(function*(){const t=new _t({mnemonic:Lt,path:Wt.pop()});const{wallet:n}=t;const{restClient:o}=n;const s={_amount:I+1,a:"a",b:"b"};const r=yield t.put([s]);e.expect(r[0]).to.be.a("string");const[i,c]=r[0].split("/");e.expect(i.length).eq(64),e.expect(c).eq("0");const a=yield mt.fromTxId({txId:i,restClient:o});e.expect(a.tx.inputs).to.not.be.undefined,e.expect(a.tx.inputs.length).to.be.greaterThanOrEqual(1),e.expect(a.tx.outputs).to.not.be.undefined,e.expect(a.tx.outputs.length).eq(4);const{outData:u}=a;const p=w(s,["_amount"]);Jt(u[0],{a:{check:"value",value:"a"},b:{check:"value",value:"b"},_amount:{check:"value",value:I+1},_owners:{check:"type",type:"array",length:1,subtype:"string"}});const l=yield mt.fromTxId({txId:i,restClient:o});const{opReturns:d,enc:h}=l;const[,f,g]=h;const x=(d+ot(l.tx.outputs.slice(f,g).map((t=>t.script)),!0)).substring(9);const v=JSON.parse(x);e.expect(v).to.deep.eq([p]);const y=Object.keys(v[0]);e.expect(y.includes("_owners")).eq(!1),e.expect(y.includes("_amount")).eq(!1),e.expect(y.includes("_readers")).eq(!1)})))),it("should store a json object with an owner set",(()=>_(void 0,void 0,void 0,(function*(){const t=new _t({mnemonic:Lt,path:Wt.pop()});const{wallet:n}=t;const{restClient:o}=n;const s={_owners:[n.publicKey.toString()],a:"a",b:"b"};const r=yield t.put([s]);e.expect(r[0]).to.be.a("string");const[i,c]=r[0].split("/");e.expect(i.length).eq(64),e.expect(c).eq("0");const a=yield mt.fromTxId({txId:i,restClient:o});e.expect(a.tx.inputs).to.not.be.undefined,e.expect(a.tx.inputs.length).to.be.greaterThanOrEqual(1),e.expect(a.tx.outputs).to.not.be.undefined,e.expect(a.tx.outputs.length).to.be.greaterThanOrEqual(3),e.expect(a.tx.outputs.length).to.be.lessThanOrEqual(4);const{outData:u}=a;e.expect(u).to.deep.eq([Object.assign({_amount:I},s)]);const p=w(s,["_owners"]);const l=yield mt.fromTxId({txId:i,restClient:o});const{opReturns:d,enc:h}=l;const[,f,g]=h;const x=(d+ot(l.tx.outputs.slice(f,g).map((t=>t.script)),!0)).substring(9);const v=JSON.parse(x);e.expect(v).to.deep.eq([p]);const y=Object.keys(v[0]);e.expect(y.includes("_owners")).eq(!1),e.expect(y.includes("_amount")).eq(!1),e.expect(y.includes("_readers")).eq(!1)})))),it("should store a json object with more than one owner",(()=>_(void 0,void 0,void 0,(function*(){const t=new _t({mnemonic:Lt,path:Wt.pop()});const{wallet:n}=t;const o=n.restClient;const s=n.publicKey.toString();const r=new wt({path:Wt.pop()});const i=r.restClient;const c={_owners:[s,r.publicKey.toString()],a:"a",b:"b"};const a=yield t.put([c]);e.expect(a[0]).to.be.a("string");const[u,p]=a[0].split("/");e.expect(u.length).eq(64),e.expect(p).eq("0");const l=yield mt.fromTxId({txId:u,restClient:i});e.expect(l.tx.inputs).to.not.be.undefined,e.expect(l.tx.inputs.length).to.be.greaterThanOrEqual(1),e.expect(l.tx.outputs).to.not.be.undefined,e.expect(l.tx.outputs.length).eq(4);const{outData:d}=l;e.expect(d).to.deep.eq([Object.assign({_amount:I},c)]);const h=w(c,["_owners"]);const f=yield mt.fromTxId({txId:u,restClient:o});const{opReturns:g,enc:x}=f;const[,v,y]=x;const b=(g+ot(f.tx.outputs.slice(v,y).map((t=>t.script)),!0)).substring(9);const m=JSON.parse(b);e.expect(m).to.deep.eq([h]);const _=Object.keys(m[0]);e.expect(_.includes("_owners")).eq(!1),e.expect(_.includes("_amount")).eq(!1),e.expect(_.includes("_readers")).eq(!1)})))),it("should store an object encrypted",(()=>_(void 0,void 0,void 0,(function*(){const t=new _t({mnemonic:Lt,path:Wt.pop()});const{wallet:n}=t;const{restClient:o}=n;const{publicKey:s}=n;const r={a:"a",_readers:[s.toString()],__cls:"class A { ... }"};const[i]=yield t.put([r]);const c=i.split("/")[0];const a=yield mt.fromTxId({txId:c,restClient:o});const{outData:u}=a;Jt(u[0],{a:{check:"value",value:"a"},_readers:{check:"value",value:[]},__cls:{check:"value",value:"class A { ... }"},_owners:{check:"type",type:"array",length:1,subtype:"string"},_amount:{check:"type",type:"number"}});const p=yield mt.fromTxId({txId:c,restClient:o});const{opReturns:l,enc:d}=p;const[,h,f]=d;const g=(l+ot(p.tx.outputs.slice(h,f).map((t=>t.script)),!0)).substring(9);const x=JSON.parse(g);Jt(x[0],{__secrets:{check:"type",type:"array",length:1,subtype:"string"},__cypher:{check:"type",type:"string"}});const v=Object.keys(x[0]);e.expect(v.includes("_owners")).eq(!1),e.expect(v.includes("_amount")).eq(!1),e.expect(v.includes("_readers")).eq(!1)})))),it("should store an object off-chain",(()=>_(void 0,void 0,void 0,(function*(){const t=new _t({mnemonic:Lt,path:Wt.pop()});const{wallet:n}=t;const{restClient:o}=n;const s="http://127.0.0.1:3000";const r=[{a:"a",b:"b",_url:s}];const i=yield t.put(r);const[c]=i[0].split("/");const a=yield mt.fromTxId({txId:c,restClient:o});const{outData:u}=a;const p=w(u[0],["_url","_amount","_owners"]);Jt(u[0],{a:{check:"value",value:p.a},b:{check:"value",value:p.b},_url:{check:"type",type:"string"},_owners:{check:"type",type:"array",length:1,subtype:"string"},_amount:{check:"value",value:I}}),e.expect(u[0]._url.split("/").join("/")).to.deep.eq(s);const l=yield mt.fromTxId({txId:c,restClient:o});const{opReturns:d,enc:h}=l;const[,f,g]=h;const x=ot(l.tx.outputs.slice(f,g).map((t=>t.script)),!0);e.expect(d+x).eq('000001002[{"_url":"http://127.0.0.1:3000/store/5b6fc73120d59ff048925bd03a11d53e1b1837a0f637569716a97a1ca96891b3"}]');const v=(d+x).substring(9);const y=JSON.parse(v);e.expect(y._url).to.not.be.a("string");const b=Object.keys(y[0]);e.expect(b.includes("_owners")).eq(!1),e.expect(b.includes("_amount")).eq(!1),e.expect(b.includes("_readers")).eq(!1)})))),it("should maintain the order of inputs and outputs",(()=>_(void 0,void 0,void 0,(function*(){const t=new _t({mnemonic:Lt,path:Wt.pop()});const{wallet:n}=t;const{restClient:o}=n;const s=[n.publicKey.toString()];const r=[];for(let t=0;t<7;t+=1){const e=`class ${h.default.randomBytes(32).toString("hex")} {\n            constructor(n) {\n                this.n = n;\n            }\n            inc(n) {\n                this.n += n;\n                return this.n;\n            }\n        }`;r.push({i:t,_owners:s,__cls:e})}const i=yield t.put(r);e.expect(i).to.not.be.undefined,e.expect(i.length).eq(r.length);const[c]=i;const[a]=c.split("/");(yield mt.fromTxId({txId:a,restClient:o})).outData.forEach(((t,n)=>{e.expect(t.toString()).to.deep.eq(r[n].toString())}));const u=yield mt.fromTxId({txId:a,restClient:o});const{opReturns:p,enc:l}=u;const[,d,f]=l;const g=(p+ot(u.tx.outputs.slice(d,f).map((t=>t.script)),!0)).substring(9);const x=JSON.parse(g);e.expect(x[0].__cls).to.be.a("string"),e.expect(x[0].i).eq(0);const v=Object.keys(x[0]);e.expect(v.includes("_owners")).eq(!1),e.expect(v.includes("_amount")).eq(!1),e.expect(v.includes("_readers")).eq(!1)})))),it("should store large objects on the blockchain",(()=>_(void 0,void 0,void 0,(function*(){const t=new _t({mnemonic:Lt,path:Wt.pop()});const{wallet:n}=t;const{restClient:o}=n;const s="a".repeat(150);const r={a:s,_owners:[n.publicKey.toString()]};const i=yield t.put([r]);e.expect(i.length).eq(1);const[c]=i;const[a,u]=c.split("/");e.expect(a).to.not.be.undefined,e.expect(u).eq("0");const p=yield mt.fromTxId({txId:a,restClient:o});const l=p.tx.toJSON();e.expect(l).to.have.property("hash").that.is.a("string"),e.expect(l).to.have.property("version",1),e.expect(l).to.have.property("outputs").that.have.length.greaterThan(0);for(let t=0;t<l.outputs.length;t+=1){const n=l.outputs[t];e.expect(n.satoshis).to.be.a("number"),e.expect(n.script).to.be.a("string")}e.expect(l).to.have.property("inputs").that.have.length.greaterThan(0);for(let t=0;t<l.inputs.length;t+=1){const n=l.inputs[t];e.expect(n.prevTxId).to.be.a("string"),e.expect(n.outputIndex).to.be.a("number"),e.expect(n.sequenceNumber).to.be.a("number"),e.expect(n.script).to.be.a("string"),e.expect(n.scriptString).to.be.a("string")}e.expect(l).to.have.property("nLockTime",0),e.expect(l.outputs[0].script.length).eq(74),e.expect(l.outputs[1].script.length).eq(210);const{opReturns:d,enc:h}=p;const[,f,g]=h;const x=(d+ot(p.tx.outputs.slice(f,g).map((t=>t.script)),!0)).substring(9);const v=JSON.parse(x);e.expect(v).to.deep.eq([{a:s}]);const y=Object.keys(v[0]);e.expect(y.includes("_owners")).eq(!1),e.expect(y.includes("_amount")).eq(!1),e.expect(y.includes("_readers")).eq(!1)})))),it("should store a very large object on the blockchain",(()=>_(void 0,void 0,void 0,(function*(){const t=new _t({mnemonic:Lt,path:Wt.pop()});const{wallet:n}=t;const{restClient:o}=n;const s=3*Math.min(k,500);const r=h.default.randomBytes(32).toString("hex");const i="a".repeat(s);const c={a:i,_owners:[n.publicKey.toString()],__cls:`class ${r} {\n            constructor(n) {\n                this.n = n;\n            }\n            inc(n) {\n                this.n += n;\n                return this.n;\n            }\n        }`};const a=yield t.put([c,c]);e.expect(a.length).eq(2);const[u,p]=a;e.expect(u).to.not.be.undefined,e.expect(p).to.not.be.undefined,e.expect(u.split("/")[0]).eq(p.split("/")[0]);const[l]=u.split("/");const d=yield mt.fromTxId({txId:l,restClient:o});e.expect(d.outData.length).eq(2),e.expect(d.tx.outputs.length).to.be.greaterThanOrEqual(6);const{opReturns:f,enc:g}=d;const[,x,v]=g;const y=(f+ot(d.tx.outputs.slice(x,v).map((t=>t.script)),!0)).substring(9);const b=JSON.parse(y);e.expect(b[0].a).eq(i),e.expect(b[0].__cls).to.be.a("string");const m=Object.keys(b[0]);e.expect(m.includes("_owners")).eq(!1),e.expect(m.includes("_amount")).eq(!1),e.expect(m.includes("_readers")).eq(!1)})))),it("should store multiple objects on the blockchain",(()=>_(void 0,void 0,void 0,(function*(){const t=new _t({mnemonic:Lt,path:Wt.pop()});const{wallet:n}=t;const{restClient:o}=n;const s=h.default.randomBytes(32).toString("hex");const r=h.default.randomBytes(32).toString("hex");const i=h.default.randomBytes(32).toString("hex");const c={a:"a",_owners:[Ht(0).toString()],__cls:`class ${s} {\n            constructor(n) {\n                this.n = n;\n            }\n            inc(n) {\n                this.n += n;\n                return this.n;\n            }\n        }`};const a={b:"b",_owners:[Ht(1).toString()],__cls:`class ${r} {\n            constructor(n) {\n                this.n = n;\n            }\n            inc(n) {\n                this.n += n;\n                return this.n;\n            }\n        }`};const u={c:"c",_owners:[Ht(2).toString()],__cls:`class ${i} {\n            constructor(n) {\n                this.n = n;\n            }\n            inc(n) {\n                this.n += n;\n                return this.n;\n            }\n        }`};const p=yield t.put([c,a,u]);e.expect(p.length).to.be.greaterThanOrEqual(3),e.expect(p.length).to.be.lessThanOrEqual(4);const[l,d,f]=p;e.expect(l).to.not.be.undefined,e.expect(d).to.not.be.undefined,e.expect(f).to.not.be.undefined;const g=yield mt.fromTxId({txId:l.split("/")[0],restClient:o});e.expect(g.tx.inputs).to.not.be.undefined,e.expect(g.tx.inputs.length).to.be.greaterThanOrEqual(1),e.expect(g.tx.outputs).to.not.be.undefined,e.expect(g.tx.outputs.length).to.be.greaterThanOrEqual(4),e.expect(g.tx.outputs.length).eq(19);const[x]=l.split("/");const v=yield mt.fromTxId({txId:x,restClient:o});const{opReturns:y,enc:b}=v;const[,m,w]=b;const _=(y+ot(v.tx.outputs.slice(m,w).map((t=>t.script)),!0)).substring(9);const S=JSON.parse(_);e.expect(S[0].a).eq("a"),e.expect(S[0].__cls).to.be.a("string");const T=Object.keys(S[0]);e.expect(T.includes("_owners")).eq(!1),e.expect(T.includes("_amount")).eq(!1),e.expect(T.includes("_readers")).eq(!1)}))))})),describe("update",(()=>{it("should spend from an output created by db.put",(()=>_(void 0,void 0,void 0,(function*(){const t=new _t({mnemonic:Lt,path:Wt.pop()});const{wallet:n}=t;const{restClient:o}=n;const s=[{c:"a",_owners:[n.publicKey.toString()]}];const r=yield t.put(s);const[i]=yield t.update(r,s);const c=yield mt.fromTxId({txId:i.split("/")[0],restClient:o});e.expect(c.tx.inputs).to.not.be.undefined,e.expect(c.tx.inputs.length).to.be.greaterThanOrEqual(2);const a=c.tx.inputs[0].prevTxId.toString("hex");const u=c.tx.inputs[0].outputIndex;e.expect(a).to.deep.eq(r[0].split("/")[0]),e.expect(u).to.deep.eq(0)})))),it("should spend from an encrypted output",(()=>_(void 0,void 0,void 0,(function*(){const t=new _t({mnemonic:Lt,path:Wt.pop()});const{wallet:n}=t;const o=n.publicKey.toString();const{restClient:s}=n;const r=[{c:"a ",_owners:[o],_readers:[o]}];const i=yield t.put(r);const[c]=yield t.update(i,[{}]);const a=yield mt.fromTxId({txId:c.split("/")[0],restClient:s});e.expect(a.tx.inputs).to.not.be.undefined,e.expect(a.tx.inputs.length).to.be.greaterThanOrEqual(2);const u=a.tx.inputs[0].prevTxId.toString("hex");const p=a.tx.inputs[0].outputIndex.toString();e.expect(u).to.deep.eq(i[0].split("/")[0]),e.expect(p).to.deep.eq(i[0].split("/")[1])})))),it("should set default amount if not set",(()=>_(void 0,void 0,void 0,(function*(){const t=new _t({mnemonic:Lt,path:Wt.pop()});const{wallet:n}=t;const{restClient:o}=n;const s={c:"a"};const r=yield t.put([s]);const[i]=yield t.update(r,[s]);const c=yield t.get([i]);e.expect(c).to.deep.eq([Object.assign(Object.assign({},s),{_owners:[n.publicKey.toString()],_amount:I})]);const a=yield mt.fromTxId({txId:i.split("/")[0],restClient:o});e.expect(a.tx.inputs).to.not.be.undefined,e.expect(a.tx.inputs.length).to.be.greaterThanOrEqual(2);const u=a.tx.inputs[0].prevTxId.toString("hex");const p=a.tx.inputs[0].outputIndex;e.expect(u).to.deep.eq(r[0].split("/")[0]),e.expect(p).to.deep.eq(0)})))),it("should spend from an output with lots of data",(()=>_(void 0,void 0,void 0,(function*(){const t=new _t({mnemonic:Lt,path:Wt.pop()});const{wallet:n}=t;const{restClient:o}=n;const s=5*Math.min(k,500)+1;const r=[n.publicKey.toString()];const i={a:"a".repeat(s),_owners:r};const c=new Array(2);c.fill(i);const a=yield t.put(c);e.expect(a.length).eq(2);const[u]=yield t.update(a,[i,i]);const p=u.split("/")[0];const l=yield mt.fromTxId({txId:p,restClient:o});e.expect(l.tx.inputs).to.not.be.undefined,e.expect(l.tx.inputs.length).to.be.greaterThan(2);const d=l.tx.inputs[0].prevTxId.toString("hex");e.expect(d).to.be.not.undefined})))),it("should maintain the order of inputs and outputs",(()=>_(void 0,void 0,void 0,(function*(){const t=new _t({mnemonic:Lt,path:Wt.pop()});const{wallet:n}=t;const{restClient:o}=n;const s=[n.publicKey.toString()];const r=Math.round(20*Math.random())+1;const i=Math.round(20*Math.random())+1;const c=[];for(let t=0;t<r;t+=1){const e=`class ${h.default.randomBytes(32).toString("hex")} {\n            constructor(n) {\n                this.n = n;\n            }\n            inc(n) {\n                this.n += n;\n                return this.n;\n            }\n        }`;c.push({i:t,_owners:s,__cls:e})}const a=yield t.put(c);const u=[];for(let t=i;t>=0;t-=1)u.push({i:t,_owners:s});const p=yield t.update(a,u);e.expect(p).to.not.be.undefined,e.expect(p.length).to.not.be.undefined,e.expect(p.length).to.be.greaterThan(i),p.map(((t,n)=>{const[o,s]=t.split("/");return e.expect(o).eq(p[0].split("/")[0]),e.expect(parseInt(s,10)).to.deep.eq(n),!0}));const l=p[0].split("/")[0];const d=yield mt.fromTxId({txId:l,restClient:o});d.tx.inputs.map(((t,n)=>(n<r&&e.expect(t.outputIndex).eq(parseInt(a[n].split("/")[1],10)),!0)));const{outData:f}=d;f.forEach(((t,n)=>{e.expect(t.i).eq(i-n)}))})))),it("should work together with get",(()=>_(void 0,void 0,void 0,(function*(){const t=new _t({mnemonic:Lt,path:Wt.pop()});const n=t.wallet.publicKey.toString();const o={a:"a",b:"b",_owners:[n]};const s=yield t.put([o]);const r={c:"c",_owners:[n]};const i=yield t.update(s,[r]);const[c]=yield t.get(i);e.expect(c._amount).eq(I),e.expect(c._owners.length).eq(1),e.expect(c._owners[0]).to.deep.eq(n),e.expect(c.c).eq("c")}))))}))}));

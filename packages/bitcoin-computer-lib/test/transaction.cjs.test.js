"use strict";var t=require("bitcoin-computer-bitcore");var e=require("chai");var n=require("axios");require("child_process");var r=require("crypto");var s=require("crypto-js");var o=require("eciesjs");require("exponential-backoff"),require("ses"),require("@endo/static-module-record");var i=require("http");var a=require("https");var c=require("url");var u=require("util");function d(t){return t&&"object"==typeof t&&"default"in t?t:{default:t}}function p(t){if(t&&t.__esModule)return t;var e=Object.create(null);return t&&Object.keys(t).forEach((function(n){if("default"!==n){var r=Object.getOwnPropertyDescriptor(t,n);Object.defineProperty(e,n,r.get?r:{enumerable:!0,get:function(){return t[n]}})}})),e.default=t,Object.freeze(e)}var l=d(n);var f=d(r);var h=d(s);var g=p(o);var w=d(i);var b=d(a);var m=d(c);var x=d(u);function v(t,e){var n={};for(var r in t)Object.prototype.hasOwnProperty.call(t,r)&&e.indexOf(r)<0&&(n[r]=t[r]);if(null!=t&&"function"==typeof Object.getOwnPropertySymbols){var s=0;for(r=Object.getOwnPropertySymbols(t);s<r.length;s++)e.indexOf(r[s])<0&&Object.prototype.propertyIsEnumerable.call(t,r[s])&&(n[r[s]]=t[r[s]])}return n}function y(t,e,n,r){return new(n||(n=Promise))((function(s,o){function i(t){try{c(r.next(t))}catch(t){o(t)}}function a(t){try{c(r.throw(t))}catch(t){o(t)}}function c(t){var e;t.done?s(t.value):(e=t.value,e instanceof n?e:new n((function(t){t(e)}))).then(i,a)}c((r=r.apply(t,e||[])).next())}))}const{crypto:S}=t.Bitcoin;const O=(t,e)=>{const n=Date.now();const r=S.Hash.sha256(Buffer.from(e+n));const s=[S.ECDSA.sign(r,t,"big").toString("hex"),t.publicKey.toString(),n];return`Bearer ${Buffer.from(s.join(":")).toString("base64")}`};class _{constructor(t,e,n={}){this.baseUrl=t,this.headers=n,this.privateKey=e}get(t){return y(this,void 0,void 0,(function*(){const e=this.privateKey?{Authentication:O(this.privateKey,this.baseUrl)}:{};return(yield l.default.get(`${this.baseUrl}${t}`,{headers:Object.assign(Object.assign({},this.headers),e)})).data}))}post(t,e){return y(this,void 0,void 0,(function*(){const n=this.privateKey?{Authentication:O(this.privateKey,this.baseUrl)}:{};return(yield l.default.post(`${this.baseUrl}${t}`,e,{headers:Object.assign(Object.assign({},this.headers),n)})).data}))}delete(t){return y(this,void 0,void 0,(function*(){const e=this.privateKey?{Authentication:O(this.privateKey,this.baseUrl)}:{};return(yield l.default.delete(`${this.baseUrl}${t}`,{headers:Object.assign(Object.assign({},this.headers),e)})).data}))}}const I=process.env.CHAIN||"LTC";const P=process.env.NETWORK||"testnet";const B=process.env.BCN_URL||"https://node.bitcoincomputer.io";process.env.RPC_USER,process.env.RPC_PASSWORD;const T=parseInt(process.env.BC_DUST_LIMIT||"",10)||1546;parseInt(process.env.BC_DEFAULT_FEE||"",10),parseInt(process.env.BC_SCRIPT_CHUNK_SIZE||"",10);const C="";const{PublicKey:R,Mnemonic:j,crypto:A}=t.Bitcoin;const{Point:q}=A;function k(t){return Buffer.from(t,"hex").toString().replace(/\0/g,"")}function E(t,e,n){if(t.length*Math.log2(e)>53)throw new Error(`Input too large ${t.length} ${Math.log2(e)}`);if(![2,10,16].includes(e)||![2,10,16].includes(n))throw new Error("ToBase or FromBase invalid in covertNumber.");if(2===e&&t.length%8!=0)throw new Error("Binary strings must be byte aligned.");if(16===e&&t.length%2!=0)throw new Error("Hex strings must be of even length.");const r=parseInt(t,e).toString(n);return 2===n?r.padStart(8*Math.ceil(r.length/8),"0"):16===n?r.padStart(2*Math.ceil(r.length/2),"0"):r}function K(t,e){const n=new RegExp(`.{1,${e}}`,"g");return t.match(n)||[]}function M(t){return K(t,2).map((t=>E(t,16,2))).join("")}function D(t){return K(t,8).map((t=>E(t,2,16))).join("")}function U(t){return t.toString(16).padStart(3,"0")}function $(t){return parseInt(t,16)}function H(t){if(62!==t.length)throw new Error("Input to hexToPublicKey must be of length 62");let e=!1;let n=0;let r;for(;!e;){if(n>=256)throw new Error("Something went wrong storing data");const i=n.toString(16).padStart(2,"0")+D((o=n,(s=M(t).padStart(64,"0")).slice(o)+s.slice(0,o)));try{r=q.fromX(!1,i),e=!0}catch(t){n+=1}}var s,o;if(!r)throw new Error("Something went wrong storing data");return new R(r)}function N(t){const e=t.point.getX().toString("hex").padStart(64,"0");const n=E(e.slice(0,2),16,10);return D((s=parseInt(n,10),(r=M(e.slice(2))).slice(-s)+r.slice(0,-s)));var r,s}function F(t=I,e=P){if("testnet"===e||"regtest"===e)return 1;if("BTC"===t)return 0;if("LTC"===t)return 2;if("DOGE"===t)return 3;if("BCH"===t)return 145;if("BSV"===t)return 236;throw new Error(`Unsupported chain ${t}`)}function L({purpose:t=44,coinType:e=2,account:n=0}={}){return`m/${t.toString()}'/${e.toString()}'/${n.toString()}'`}function W(t=I,e=P){return L({coinType:F(t,e)})}function J(){return Math.round(Math.random()*Math.pow(2,31))}function V(t,e){const n=function(t,e){return((t,e,n={})=>{const{path:r="m/44'/0'/0'/0",passphrase:s=""}=n;let o=t.toHDPrivateKey(s,e);return r&&(o=o.derive(r)),o.privateKey})(new j("replace this seed"),e,{path:W(t,e),passphrase:""})}(t,e);return R.fromPrivateKey(n)}const{Transaction:Y,Mnemonic:z}=t.Bitcoin;const{UnspentOutput:G}=Y;function Q(t){if(!/^[0-9A-Fa-f]{64}$/.test(t))throw new Error(`Invalid txId: ${t}`)}function X(t){if(!/^[0-9A-Fa-f]{64}\/\d+$/.test(t))throw new Error(`Invalid outId: ${t}`)}function Z(t){X(t);const[e,n]=t.split("/");return{txId:e,outputIndex:parseInt(n,10)}}class tt{constructor(t={}){const{chain:e=I,network:n=P,mnemonic:r="",path:s=W(t.chain,t.network),passphrase:o=C,url:i=B}=t;this.chain=e.toUpperCase(),this.network=n.toLowerCase(),this.mnemonic=new z(r.toString()),this.path=s,this.passphrase=o,this.bcn=new _(i,this.privateKey)}get privateKey(){return function({mnemonic:t=new j,path:e=W(),passphrase:n=C,network:r=P}){if(void 0!==t&&void 0!==e&&void 0!==n&&void 0!==r)return t.toHDPrivateKey(n,r).deriveChild(e);throw new Error(`Missing required parameters${JSON.stringify({mnemonic:t,path:e,passphrase:n,network:r})}`)}(this).privateKey}getBalance(t){return y(this,void 0,void 0,(function*(){const{chain:e,network:n}=this;return yield this.bcn.get(`/v1/${e}/${n}/address/${t}/balance`)}))}getTransactions(t){return y(this,void 0,void 0,(function*(){return(yield this.getRawTxs(t)).map((t=>new Y(t)))}))}getRawTxs(t){return y(this,void 0,void 0,(function*(){t.map(Q);const{chain:e,network:n}=this;return this.bcn.post(`/v1/${e}/${n}/tx/bulk/`,{txIds:t})}))}sendTransaction(t){return y(this,void 0,void 0,(function*(){return this.bcn.post(`/v1/${this.chain}/${this.network}/tx/send`,{rawTx:t})}))}getUtxosByAddress(t){return y(this,void 0,void 0,(function*(){const{chain:e,network:n}=this;return(yield this.bcn.get(`/v1/${e}/${n}/wallet/${t.toString()}/utxos`)).map((({rev:t,scriptPubKey:e,satoshis:n})=>{const[r,s]=t.split("/");return new G({txId:r,outputIndex:parseInt(s,10),satoshis:n,script:e})}))}))}query({publicKey:t,classHash:e}){return y(this,void 0,void 0,(function*(){if(void 0===t&&void 0===e)throw new Error("Query parameters cannot be empty.");let n="";t&&(n+=`?publicKey=${t}`),e&&(n+=0===n.length?"?":"&",n+=`classHash=${e}`);const{chain:r,network:s}=this;return this.bcn.get(`/v1/${r}/${s}/non-standard-utxos${n}`)}))}idsToRevs(t){return y(this,void 0,void 0,(function*(){t.map(X);const{chain:e,network:n}=this;return this.bcn.post(`/v1/${e}/${n}/revs`,{ids:t})}))}rpc(t,e){return y(this,void 0,void 0,(function*(){return this.bcn.post(`/v1/${this.chain}/${this.network}/rpc`,{method:t,params:e})}))}static getSecretOutput({_url:t,privateKey:e}){return y(this,void 0,void 0,(function*(){const n=t.split("/");const r=n[n.length-1];const s=n.slice(0,-2).join("/");const o=new _(s,e);return{host:s,data:yield o.get(`/v1/store/${r}`)}}))}static setSecretOutput({secretOutput:t,host:e,privateKey:n}){return y(this,void 0,void 0,(function*(){return new _(e,n).post("/v1/store/",t)}))}static deleteSecretOutput({_url:t,privateKey:e}){return y(this,void 0,void 0,(function*(){const n=t.split("/");const r=n[n.length-1];const s=n.slice(0,-2).join("/");const o=new _(s,e);yield o.delete(`/v1/store/${r}`)}))}get url(){return this.bcn.baseUrl}}const{PublicKey:et,Script:nt}=t.Bitcoin;function rt(t,e,n,r){if(t.length>3)throw new Error("Too many owners");return function(t,e,n,r){const s=r?[...t,V(e,n).toBuffer()]:t;const o=new nt;return o.add("OP_1"),s.forEach((t=>{o.add(t)})),o.add(`OP_${s.length}`),o.add("OP_CHECKMULTISIG"),o}(t.map((t=>t.toBuffer())),e,n,r)}function st(t,e){return function(t,e){const n=t.chunks.filter((t=>t.buf));return(e?n.slice(0,-1):n).map((t=>t.buf))}(t,e).map((t=>et.fromBuffer(t)))}function ot(t){return Buffer.from(h.default.SHA256(t).toString(),"hex").toString("hex").substr(0,4)}function at(t){return`${ot(t)};${t}`}function ct(t){const e=t.substr(0,4);const n=t.substr(5);if(!function(t,e){return ot(t)===e}(n,e))throw new Error("Decryption failure");return n}function ut(t){if(void 0!==t._readers){const{_readers:e,_url:n,_owners:r,_amount:s}=t,o=v(t,["_readers","_url","_owners","_amount"]);const i=function(t,e){const n=f.default.randomBytes(32).toString("hex");const r=function(t,e){if(!/^[0-9a-f]{64}$/.test(e))throw new Error("Invalid secret");const n=Buffer.from(e,"hex").toString("binary");const r=at(t);return h.default.AES.encrypt(r,n).toString()}(t,n);const s=e.map((t=>function(t,e){if(!/^0[2-3][0-9a-f]{64}|04[0-9a-f]{128}$/.test(e))throw new Error("Invalid publicKey");const n=at(t);return g.encrypt(e,Buffer.from(n,"utf8")).toString("base64")}(n,t)));return{__cypher:r,__secrets:s}}(JSON.stringify(o),e);return void 0!==n&&(i._url=n),void 0!==r&&(i._owners=r),void 0!==s&&(i._amount=s),i}return t}const{Transaction:dt}=t.Bitcoin;const{Output:pt,UnspentOutput:lt}=dt;class ft{constructor({restClient:t=new tt}={}){this.tx=new dt,this.tx.feePerKb(2e4),this.outData=[],this.restClient=t}get txId(){return this.tx.id}get chain(){return this.restClient.chain}get network(){return this.restClient.network}get inputs(){return this.tx.inputs.map((t=>`${t.prevTxId.toString("hex")}/${t.outputIndex}`))}get inRevs(){const{enc:t}=this;let[e]=t;return e=Number.isFinite(e)?e:0,this.tx.inputs.slice(0,e).map((({prevTxId:t,outputIndex:e})=>`${t.toString("hex")}/${e}`))}get outRevs(){const{enc:t}=this;let[,e]=t;return e=Number.isFinite(e)?e:0,Array.from(Array(e).keys()).map((t=>`${this.tx.id}/${t}`))}get opReturns(){try{const{outputs:t}=this.tx;return t.filter((({script:t})=>t.isDataOut())).map((({script:t})=>t.getData())).map((t=>t.toString())).join()}catch(t){return""}}get enc(){return K(this.opReturns.slice(0,9),3).map($)}get dataPrefix(){return this.opReturns.slice(9)}isFullyFunded(){return this.tx._getInputAmount()-this.tx._getOutputAmount()>=this.tx.getFee()}getOwnerOutputs(){const{enc:t}=this;const[,e=0]=t;return this.tx.outputs.slice(0,e)}getDataOutputs(){const{enc:t}=this;const[,e,n]=t;return this.tx.outputs.slice(e,n)}getOutData(){return y(this,void 0,void 0,(function*(){try{const t=this.getDataOutputs().map((t=>t.script)).map((t=>st(t,!0))).flat().map(N).map(k).join("");const{dataPrefix:e}=this;const n=JSON.parse(e+t);const r=this.restClient.privateKey.toBuffer().toString("hex");const s=this.getOwnerOutputs();if(s.length!==n.length)throw new Error("Inconsistent state");const o=s.map(((t,e)=>Object.assign(Object.assign({},n[e]),{_owners:st(t.script,!1).map((t=>t.toString())),_amount:t.satoshis})));return Promise.all(o.map((t=>y(this,void 0,void 0,(function*(){try{const e=yield function(t){return e=>y(this,void 0,void 0,(function*(){if(function(t){return void 0!==t._url}(e)){const{_url:n}=e,r=v(e,["_url"]);const{host:s,data:o}=yield tt.getSecretOutput({_url:n,privateKey:t});return Object.assign(Object.assign(Object.assign({},r),JSON.parse(o)),{_url:s})}return e}))}(this.restClient.privateKey)(t);return function(t,e){if(function(t){return void 0!==t.__cypher&&void 0!==t.__secrets}(t)){const{__cypher:n,__secrets:r}=t,s=v(t,["__cypher","__secrets"]);return Object.assign(Object.assign(Object.assign({},s),JSON.parse(function({__cypher:t,__secrets:e},n){let r="";if(n.forEach((n=>{e.forEach((e=>{try{const s=function(t,e){if(!/^[0-9a-f]{64}$/.test(e))throw new Error("Invalid privateKey");return ct(g.decrypt(e,Buffer.from(t,"base64")).toString("utf8"))}(e,n);r=function(t,e){if(!/^[0-9a-f]{64}$/.test(e))throw new Error("Invalid secret");const n=Buffer.from(e,"hex").toString("binary");return ct(h.default.AES.decrypt(t,n).toString(h.default.enc.Utf8))}(t,s)}catch(t){const e=["Decryption failure","Unsupported state or unable to authenticate data"];if(t instanceof Error&&!e.includes(t.message))throw t}}))})),r)return r;throw new Error("Decryption failure")}({__cypher:n,__secrets:r},e))),{_readers:[]})}return t}(e,[r])}catch(t){return null}})))))}catch(t){return[]}}))}getOwners(){return this.getOwnerOutputs().map((t=>st(t.script,!1).map((t=>t.toString()))))}getAmounts(){return this.getOwnerOutputs().map((t=>t.satoshis))}spendFromData(e){return y(this,void 0,void 0,(function*(){if(!e.length)return;const n=e.map(Z);const r=n.map((t=>t.txId));const s=yield this.restClient.getTransactions(r);for(let e=0;e<n.length;e+=1){const{txId:r,outputIndex:o}=n[e];const{outputs:i}=s[e];const a=i[o];const c=Math.round(a.satoshis);const u=new t.Bitcoin.Script(a.script);const d=new lt({txId:r,outputIndex:o,satoshis:c,script:u});const p=st(u,!1).map((t=>t.toString()));this.tx.from([d],p,1)}}))}createDataOuts(e){e.forEach((({_amount:e,_owners:n=[]})=>{if(Array.isArray(n)&&n.length>3)throw new Error("Too many owners.");const r=n.map((e=>t.Bitcoin.PublicKey.fromString(e)));const s=e||T;const o=rt(r,this.chain,this.network,!1);this.tx.addOutput(new pt({script:o,satoshis:s}))}));const n=e.map((t=>v(t,["_amount","_owners"])));const r=T;const s=JSON.stringify(n);const o=s.slice(0,71);const i=function(t,e,n,r){var s;return function(t,e){const n=[];for(let e=0;e<t.length;e+=2)n.push(t.slice(e,e+2));return n}(K((s=t,Buffer.from(s).toString("hex")),62).map((t=>t.padStart(62,"0"))).map(H)).map((t=>rt(t,e,n,!0)))}(s.slice(71),this.chain,this.network);const a=U(this.tx.inputs.length)+U(this.tx.outputs.length)+U(this.tx.outputs.length+i.length);i.forEach((t=>{this.tx.addOutput(new pt({script:t,satoshis:r}))})),this.tx.addData(a+o)}static fromTxHex({hex:t="",restClient:e=new tt}){return y(this,void 0,void 0,(function*(){let n=[];let r=[];let s=[];const o=new this({restClient:e});o.tx.fromString(t);try{n=yield o.getOutData()}catch(t){}try{r=o.getOwners()}catch(t){}try{s=o.getAmounts()}catch(t){}return o.outData=n.map(((t,e)=>Object.assign(Object.assign({},t),{_owners:r[e],_amount:s[e]}))),o}))}static fromTxId({txId:t="",restClient:e=new tt}){return y(this,void 0,void 0,(function*(){const[n]=yield e.getRawTxs([t]);return this.fromTxHex({hex:n,restClient:e})}))}}var ht=w.default;var gt=b.default;var wt=m.default;function bt(t){"string"==typeof t&&(t=function(t){var e=wt.parse(t);var n=e.hostname;var r=parseInt(e.port,10);var s=e.protocol;s=s.substring(0,s.length-1);var o=e.auth.split(":");return{host:n,port:r,protocol:s,user:o[0]?decodeURIComponent(o[0]):null,pass:o[1]?decodeURIComponent(o[1]):null}}(t)),t=t||{},this.host=t.host||"127.0.0.1",this.port=t.port||8332,this.user=t.user||"user",this.pass=t.pass||"pass",this.protocol="http"===t.protocol?ht:gt,this.batchedCalls=null,this.disableAgent=t.disableAgent||!1;var e=void 0!==t.rejectUnauthorized;this.rejectUnauthorized=!e||t.rejectUnauthorized,bt.config.log?this.log=bt.config.log:this.log=bt.loggers[bt.config.logger||"normal"]}var mt=console.log.bind(console);var xt=function(){};function vt(t,e){var n=this;t=JSON.stringify(t);var r=this.user+":"+this.pass;var s=Buffer.from&&Buffer.from!==Uint8Array.from?Buffer.from(r):new Buffer(r);this.auth=s.toString("base64");var o={host:n.host,path:"/",method:"POST",port:n.port,rejectUnauthorized:n.rejectUnauthorized,agent:!n.disableAgent&&void 0};if(n.httpOptions)for(var i in n.httpOptions)o[i]=n.httpOptions[i];var a=!1;var c="Bitcoin JSON-RPC: ";var u=this.protocol.request(o,(function(t){var r="";t.on("data",(function(t){r+=t})),t.on("end",(function(){if(!a)if(a=!0,401!==t.statusCode)if(403!==t.statusCode){if(500===t.statusCode&&"Work queue depth exceeded"===r.toString("utf8")){var s=new Error("Bitcoin JSON-RPC: "+r.toString("utf8"));return s.code=429,void e(s)}var o;try{o=JSON.parse(r)}catch(s){n.log.err(s.stack),n.log.err(r),n.log.err("HTTP Status code:"+t.statusCode);var i=new Error(c+"Error Parsing JSON: "+s.message);return void e(i)}e(o.error,o)}else e(new Error(c+"Connection Rejected: 403 Forbidden"));else e(new Error(c+"Connection Rejected: 401 Unnauthorized"))}))}));u.on("error",(function(t){var n=new Error(c+"Request Error: "+t.message);a||(a=!0,e(n))})),u.setHeader("Content-Length",t.length),u.setHeader("Content-Type","application/json"),u.setHeader("Authorization","Basic "+n.auth),u.write(t),u.end()}bt.loggers={none:{info:xt,warn:xt,err:xt,debug:xt},normal:{info:mt,warn:mt,err:mt,debug:xt},debug:{info:mt,warn:mt,err:mt,debug:mt}},bt.config={logger:"normal"},bt.prototype.batch=function(t,e){this.batchedCalls=[],t(),vt.call(this,this.batchedCalls,e),this.batchedCalls=null},bt.callspec={abandonTransaction:"str",abortRescan:"",addMultiSigAddress:"",addNode:"",analyzePSBT:"str",backupWallet:"",bumpFee:"str",clearBanned:"",combinePSBT:"obj",combineRawTransaction:"obj",convertToPSBT:"str",createMultiSig:"",createPSBT:"obj",createRawTransaction:"obj obj",createWallet:"str",decodePSBT:"str",decodeScript:"str",decodeRawTransaction:"",deriveAddresses:"str",disconnectNode:"",dumpPrivKey:"",dumpWallet:"str",encryptWallet:"",enumerateSigners:"",estimateFee:"",estimateSmartFee:"int str",estimatePriority:"int",generate:"int",generateBlock:"str obj",generateToAddress:"int str",generateToDescriptor:"int str",getAccount:"",getAccountAddress:"str",getAddedNodeInfo:"",getAddressMempool:"obj",getAddressUtxos:"obj",getAddressBalance:"obj",getAddressDeltas:"obj",getAddressesByLabel:"str",getAddressInfo:"str",getAddressTxids:"obj",getAddressesByAccount:"",getBalance:"str int",getBalances:"",getBestBlockHash:"",getBlockDeltas:"str",getBlock:"str int",getBlockchainInfo:"",getBlockCount:"",getBlockFilter:"str",getBlockHashes:"int int obj",getBlockHash:"int",getBlockHeader:"str",getBlockNumber:"",getBlockStats:"str",getBlockTemplate:"",getConnectionCount:"",getChainTips:"",getChainTxStats:"",getDescriptorInfo:"str",getDifficulty:"",getGenerate:"",getHashesPerSec:"",getIndexInfo:"",getInfo:"",getMemoryInfo:"",getMemoryPool:"",getMemPoolAncestors:"str",getMemPoolDescendants:"str",getMemPoolEntry:"str",getMemPoolInfo:"",getMiningInfo:"",getNetTotals:"",getNetworkHashPS:"",getNetworkInfo:"",getNewAddress:"str str",getNodeAddresses:"",getPeerInfo:"",getRawChangeAddress:"",getRawMemPool:"bool",getRawTransaction:"str int",getReceivedByAccount:"str int",getReceivedByAddress:"str int",getReceivedByLabel:"str",getRpcInfo:"",getSpentInfo:"obj",getTransaction:"",getTxOut:"str int bool",getTxOutProof:"",getTxOutSetInfo:"",getUnconfirmedBalance:"",getWalletInfo:"",getWork:"",getZmqNotifications:"",finalizePSBT:"str",fundRawTransaction:"str",help:"",importAddress:"str str bool",importDescriptors:"str",importMulti:"obj obj",importPrivKey:"str str bool",importPrunedFunds:"str, str",importPubKey:"str",importWallet:"str",invalidateBlock:"str",joinPSBTs:"obj",keyPoolRefill:"",listAccounts:"int",listAddressGroupings:"",listBanned:"",listDescriptors:"",listLabels:"",listLockUnspent:"bool",listReceivedByAccount:"int bool",listReceivedByAddress:"int bool",listReceivedByLabel:"",listSinceBlock:"str int",listTransactions:"str int int",listUnspent:"int int",listWalletDir:"",listWallets:"",loadWallet:"str",lockUnspent:"",logging:"",move:"str str float int str",ping:"",preciousBlock:"str",prioritiseTransaction:"str float int",pruneBlockChain:"int",psbtBumpFee:"str",removePrunedFunds:"str",reScanBlockChain:"",saveMemPool:"",send:"obj",setHDSeed:"",setLabel:"str str",setWalletFlag:"str",scanTxOutSet:"str",sendFrom:"str str float int str str",sendMany:"str obj int str",sendRawTransaction:"str",sendToAddress:"str float str str",setAccount:"",setBan:"str str",setNetworkActive:"bool",setGenerate:"bool int",setTxFee:"float",signMessage:"",signMessageWithPrivKey:"str str",signRawTransaction:"",signRawTransactionWithKey:"str obj",signRawTransactionWithWallet:"str",stop:"",submitBlock:"str",submitHeader:"str",testMemPoolAccept:"obj",unloadWallet:"",upgradeWallet:"",uptime:"",utxoUpdatePSBT:"str",validateAddress:"",verifyChain:"",verifyMessage:"",verifyTxOutProof:"str",walletCreateFundedPSBT:"",walletDisplayAddress:"str",walletLock:"",walletPassPhrase:"string int",walletPassphraseChange:"",walletProcessPSBT:"str"};var yt=function(t,e,n){return Array.prototype.slice.call(t,e,n)};function St(){return parseInt(1e5*Math.random())}!function(t,e,n){function r(t,e){return function(){var r=arguments.length-1;this.batchedCalls&&(r=arguments.length);for(var s=0;s<r;s++)e[s]&&(arguments[s]=e[s](arguments[s]));this.batchedCalls?this.batchedCalls.push({jsonrpc:"2.0",method:t,params:yt(arguments),id:St()}):n.call(this,{method:t,params:yt(arguments,0,arguments.length-1),id:St()},arguments[arguments.length-1])}}var s={str:function(t){return t.toString()},int:function(t){return parseFloat(t)},float:function(t){return parseFloat(t)},bool:function(t){return!0===t||"1"==t||"true"==t||"true"==t.toString().toLowerCase()},obj:function(t){return"string"==typeof t?JSON.parse(t):t}};for(var o in e){var i=[];if(e[o].length){i=e[o].split(" ");for(var a=0;a<i.length;a++)s[i[a]]?i[a]=s[i[a]]:i[a]=s.str}var c=o.toLowerCase();t.prototype[o]=r(c,i),t.prototype[c]=t.prototype[o]}}(bt,bt.callspec,vt);var Ot=bt;const _t=new Ot({protocol:process.env.RPC_PROTOCOL,user:process.env.RPC_USER,pass:process.env.RPC_PASSWORD,host:process.env.RPC_HOST,port:process.env.RPC_PORT});x.default.promisify(Ot.prototype.createwallet.bind(_t)),x.default.promisify(Ot.prototype.getaddressinfo.bind(_t)),x.default.promisify(Ot.prototype.getBlock.bind(_t)),x.default.promisify(Ot.prototype.getBlockchainInfo.bind(_t)),x.default.promisify(Ot.prototype.getBlockHash.bind(_t)),x.default.promisify(Ot.prototype.generateToAddress.bind(_t)),x.default.promisify(Ot.prototype.getRawTransaction.bind(_t)),x.default.promisify(Ot.prototype.importaddress.bind(_t)),x.default.promisify(Ot.prototype.listunspent.bind(_t)),x.default.promisify(Ot.prototype.sendRawTransaction.bind(_t));const{Opcode:It,Script:Pt,Mnemonic:Bt,crypto:Tt,Transaction:Ct,encoding:Rt}=t.Bitcoin;function jt(t=0){return new Bt(function(t=0){return"travel upgrade inside soda birth essence junk merit never twenty system opinion;toddler hockey salute wheel harvest video narrow riot guitar lake sea call;cannon hour begin test replace fury motion squirrel envelope announce neck culture".split(";")[t]}(t))}function At(t=0){return function(t=0){return jt().toHDPrivateKey("",P).derive(function({chain:t=I,network:e=P,account:n=J()}={}){return L({account:n,coinType:F(t,e)})}({account:t}))}(t).privateKey}function qt(t=0){return At(t).toPublicKey()}function kt(t=0){return qt(t).toAddress()}function Et(e=1e5,n=0){const r=Pt.buildPublicKeyHashOut(kt(n));return{address:kt(n),txId:"a477af6b2667c29670467e4e0728b685ee07b240235771862318e29ddbe58458",outputIndex:n,script:r,vout:0,amount:e/1e8,satoshis:e,scriptPubKey:"",inspect:()=>"",toObject:()=>new t.Bitcoin.Transaction.UnspentOutput({})}}const{PrivateKey:Kt,PublicKey:Mt,Script:Dt,Transaction:Ut,Address:$t,crypto:Ht}=t.Bitcoin;const{Interpreter:Nt}=Dt;const{UnspentOutput:Ft,Output:Lt}=Ut;const{Signature:Wt,Point:Jt}=Ht;const Vt=At(0);const Yt=At(1);const zt=qt(0);const Gt=qt(1);const Qt=qt(2);const Xt=[qt(0).toString()];const Zt=[qt(1).toString()];const te={a:"a"};const ee={b:"b"};const ne=T;describe("DataTransaction",(()=>{describe("constructor",(()=>{const t=new ft;e.expect(t).to.not.be.undefined,e.expect(t.chain).eq(I),e.expect(t.network).eq(P),e.expect(t.tx).to.not.be.undefined,e.expect(Array.isArray(t.tx.inputs)).eq(!0),e.expect(Array.isArray(t.tx.outputs)).eq(!0)})),describe("enc",(()=>{it("should return the encoding",(()=>{const t=new ft;t.createDataOuts([te]);const{enc:n}=t;e.expect(n).to.deep.eq([0,1,1])}))})),describe("opReturnString",(()=>{it("should return the opReturn string",(()=>{const t=new ft;t.tx.addData("0123456789abcedf");const{dataPrefix:n}=t;e.expect(n).to.deep.eq("9abcedf")}))})),describe("getOutData",(()=>{it("should return the data of a transactions with one output",(()=>y(void 0,void 0,void 0,(function*(){const t=new ft;const n=[Object.assign({_owners:Xt,_amount:ne},te)];t.createDataOuts(n),e.expect(yield t.getOutData()).to.deep.eq(n)})))),it("should return the data of a transactions with one large output",(()=>y(void 0,void 0,void 0,(function*(){const t=[{_owners:Xt,_amount:ne,a:"a".repeat(100)}];const n=new ft;n.createDataOuts(t),e.expect(yield n.getOutData()).to.deep.eq(t)})))),it("should return the data of a transactions with two outputs",(()=>y(void 0,void 0,void 0,(function*(){const t=new ft;const n=[Object.assign({_owners:Xt,_amount:ne},te),Object.assign({_owners:Xt,_amount:ne},ee)];t.createDataOuts(n),e.expect(yield t.getOutData()).to.deep.eq(n)})))),it("should return the data of a transactions if some outputs are encrypted",(()=>y(void 0,void 0,void 0,(function*(){const t=new ft({restClient:new tt({chain:I,network:P,passphrase:C,url:"",mnemonic:jt(),path:W()})});const n=[Object.assign({_owners:Xt,_readers:Xt,_amount:ne},te),Object.assign({_owners:Xt,_readers:Zt,_amount:ne},ee)].map(ut);t.createDataOuts(n);const r=Object.assign({_owners:Xt,_readers:[],_amount:ne},te);e.expect(yield t.getOutData()).to.deep.eq([r,null])}))))})),describe("getOwners",(()=>{it("should return the owners of a transactions",(()=>{const t=new ft;t.createDataOuts([Object.assign({_owners:Xt,_amount:ne},te),Object.assign({_owners:Zt,_amount:ne},te)]),e.expect(t.getOwners()).to.deep.eq([Xt,Zt])}))})),describe("getAmounts",(()=>{it("should return the owners of a transactions",(()=>{const t=new ft;t.createDataOuts([Object.assign({_owners:Xt,_amount:1},te),Object.assign({_owners:Zt,_amount:2},te)]),e.expect(t.getAmounts()).to.deep.eq([1,2])}))})),describe("to",(()=>{it("should add a p2pkh output",(()=>{const t=new ft;t.tx.from([new Ut.UnspentOutput(Et())]),t.tx.to(kt(),T),t.tx.sign(At(),1),e.expect(t.tx.id).to.be.an("string"),e.expect(t.inRevs).to.deep.eq([]),e.expect(t.inputs).to.deep.eq(["a477af6b2667c29670467e4e0728b685ee07b240235771862318e29ddbe58458/0"]),e.expect(t.tx.outputs[0].script.isPublicKeyHashOut()).eq(!0),e.expect(t.tx.verify()).eq(!0)})),it("should add a p2sh multisig output",(()=>{const t=[zt,Gt,Qt];const n=$t.createMultisig(t,2,P,!1);const r=new ft;r.tx.from([new Ut.UnspentOutput(Et())]),r.tx.to(n,T),r.tx.sign(At(),1),e.expect(r.tx).to.not.be.undefined,e.expect(r.tx.outputs.length).eq(1),e.expect(r.tx.inputs.length).eq(1),e.expect(r.tx.outputs[0].script.isScriptHashOut()).eq(!0),e.expect(r.tx.verify()).eq(!0)})),it("should add a bare multisig output",(()=>{const t=(new Dt).add("OP_1").add(zt.toBuffer()).add(Gt.toBuffer()).add(Qt.toBuffer()).add("OP_3").add("OP_CHECKMULTISIG");const n=new ft;n.tx.from([new Ut.UnspentOutput(Et())]),n.tx.addOutput(new Lt({script:t,satoshis:T})),n.tx.sign(At(),1),e.expect(n.tx).to.not.be.undefined,e.expect(n.tx.outputs.length).eq(1),e.expect(n.tx.inputs.length).eq(1),e.expect(n.tx.outputs[0].script.isMultisigOut()).eq(!0),e.expect(n.tx.verify()).eq(!0)})),it("should create compressed and uncompressed pk",(()=>{const t={bn:"96c132224121b509b7d0a16245e957d9192609c5637c6228311287b1be21627a",compressed:!1,network:"livenet"};const n=Kt.fromObject(t);const r={bn:"96c132224121b509b7d0a16245e957d9192609c5637c6228311287b1be21627a",compressed:!0,network:"livenet"};const s=Kt.fromObject(r);e.expect(JSON.stringify(n)).eq(JSON.stringify(t)),e.expect(JSON.stringify(s)).eq(JSON.stringify(r)),e.expect(JSON.stringify(s.publicKey)).not.eq(JSON.stringify(n.publicKey))})),it("should work with compressed and uncompressed pk - bare multisig output",(()=>{const t=Buffer.from("0412345678901234567890123456789012345678901234567890123456789012341234567890123456789012345678901234567890123456789012345678901234","hex");const n=(new Dt).add("OP_1").add(zt.toBuffer()).add(Gt.toBuffer()).add(Qt.toBuffer()).add(t).add(t).add(t).add(t).add(t).add(t).add(t).add(t).add(t).add(t).add("OP_3").add("OP_CHECKMULTISIG");const r=new ft;r.tx.from([new Ut.UnspentOutput(Et())]),r.tx.addOutput(new Lt({script:n,satoshis:T})),r.tx.sign(At(),1),e.expect(r.tx).to.not.be.undefined,e.expect(r.tx.outputs.length).eq(1),e.expect(r.tx.inputs.length).eq(1),e.expect(r.tx.outputs[0].script.isMultisigOut()).eq(!0),e.expect(r.tx.verify()).eq(!0)}))})),describe("from",(()=>{it("should spend from a p2pkh output",(()=>{const t=new Kt("cSBnVM4xvxarwGQuAfQFwqDg9k5tErHUHzgWsEfD4zdwUasvqRVY");const{publicKey:n}=t;const r=n.toAddress();const s=Dt.buildPublicKeyHashOut(r);const o=new Ft({address:r,txId:"a477af6b2667c29670467e4e0728b685ee07b240235771862318e29ddbe58458",outputIndex:0,script:s,satoshis:1e5});const i=(new Ut).from(o).to("mrU9pEmAx26HcbKVrABvgL7AwA5fjNFoDc",1e5).sign(t,1);const a=Wt.fromTxFormat(i.inputs[0].script.chunks[0].buf);e.expect(i.verifySignature(a,n,0,s)).eq(!0);const c=i.inputs[0].script;const u=Nt.SCRIPT_VERIFY_P2SH|Nt.SCRIPT_VERIFY_STRICTENC;const d=(new Nt).verify(c,s,i,0,u);e.expect(d).to.deep.eq(!0)})),it("should spend from a p2sh output",(()=>{const t=Dt.buildMultisigOut([zt,Gt,Qt],2,{});const n=new Ft({txId:"66e64ef8a3b384164b78453fa8c8194de9a473ba14f89485a0e433699daec140",outputIndex:0,script:t,satoshis:1e6});const r=(new Ut).from(n,[zt.toString(),Gt.toString(),Qt.toString()],2).to(new $t("33zbk2aSZYdNbRsMPPt6jgy6Kq1kQreqeb"),1e6);const s=r.inputs[0];e.expect(s.countSignatures()).eq(0),r.sign(Vt,1),e.expect(s.countSignatures()).eq(1),e.expect(s.countMissingSignatures()).eq(1),e.expect(s.isFullySigned()).eq(!1),r.sign(Yt,1),e.expect(s.countSignatures()).eq(2),e.expect(s.countMissingSignatures()).eq(0),e.expect(s.isFullySigned()).eq(!0);const o=r.inputs[0].script;const i=Nt.SCRIPT_VERIFY_P2SH|Nt.SCRIPT_VERIFY_STRICTENC;const a=(new Nt).verify(o,t,r,0,i);e.expect(a).to.deep.eq(!0)})),it("should spend from a transaction with a multisig output",(()=>{const t=[zt,Gt,Qt];const n=$t.createMultisig(t,1,P,!1);const r=new ft;r.tx.from([new Ut.UnspentOutput(Et())]),r.tx.to(n,T),r.tx.sign(At(),1);const s=r.tx.outputs[0].script;const o=r.tx.outputs[0];const i=Math.round(o.satoshis);const a=new Ft({txId:r.tx.id,outputIndex:0,script:s,satoshis:i});const c=(new Ut).from(a,t.map((t=>t.toString())),1).to(n,1e6);c.sign(Vt,1);const u=c.inputs[0].script;const d=Nt.SCRIPT_VERIFY_P2SH|Nt.SCRIPT_VERIFY_STRICTENC;const p=(new Nt).verify(u,s,c,0,d);e.expect(p).to.deep.eq(!0)})),it("should spend from a transaction with a bare multisig output",(()=>{const t=(new Dt).add("OP_1").add(zt.toBuffer()).add(Gt.toBuffer()).add(Qt.toBuffer()).add("OP_3").add("OP_CHECKMULTISIG");const n=new ft;n.tx.from([new Ut.UnspentOutput(Et())]),n.tx.addOutput(new Lt({script:t,satoshis:T})),n.tx.sign(At(),1);const r=n.tx.outputs[0];const s=r.script;const o=Math.round(r.satoshis);const i=new Ft({txId:n.tx.id,outputIndex:0,script:s,satoshis:o});const{chunks:a}=s;const c=[new Mt(a[1].buf),new Mt(a[2].buf),new Mt(a[3].buf)];const u=(new Ut).from(i,c.map((t=>t.toString())),2).to(kt(),1e4);u.sign(Vt,1),u.sign(Yt,1);const d=u.inputs[0].script;const p=Nt.SCRIPT_VERIFY_P2SH|Nt.SCRIPT_VERIFY_STRICTENC;const l=(new Nt).verify(d,s,u,0,p);e.expect(l).to.deep.eq(!0)})),it("should spend from an transaction with a bare multisig output with data",(()=>{const t="1".repeat(32);const n=Jt.fromX(!1,t);const r=new Mt(n);const s=(new Dt).add("OP_1").add(zt.toBuffer()).add(Gt.toBuffer()).add(Qt.toBuffer()).add(r.toBuffer()).add("OP_4").add("OP_CHECKMULTISIG");const o=new ft;o.tx.from([new Ut.UnspentOutput(Et())]),o.tx.addOutput(new Lt({script:s,satoshis:T})),o.tx.sign(At(),1);const i=o.tx.outputs[0];const a=i.script;const c=Math.round(i.satoshis);const u=new Ft({txId:o.tx.id,outputIndex:0,script:a,satoshis:c});const{chunks:d}=a;const p=[new Mt(d[1].buf),new Mt(d[2].buf),new Mt(d[3].buf)];const l=(new Ut).from(u,p.map((t=>t.toString())),2).to(kt(),1e4);l.sign(Vt,1),l.sign(Yt,1);const f=l.inputs[0].script;const h=Nt.SCRIPT_VERIFY_P2SH|Nt.SCRIPT_VERIFY_STRICTENC;const g=(new Nt).verify(f,a,l,0,h);e.expect(g).to.deep.eq(!0)})),it("should spend from an transaction with a bare multisig output and dummy data",(()=>{const t=Buffer.from("11".repeat(512),"hex");const n=(new Dt).add("OP_1").add(zt.toBuffer()).add(Gt.toBuffer()).add(Qt.toBuffer()).add(t).add("OP_4").add("OP_CHECKMULTISIG");const r=new ft;r.tx.from([new Ut.UnspentOutput(Et())]),r.tx.addOutput(new Lt({script:n,satoshis:T})),r.tx.sign(At(),1);const s=r.tx.outputs[0];const o=s.script;const i=Math.round(s.satoshis);const a=new Ft({txId:r.tx.id,outputIndex:0,script:o,satoshis:i});const{chunks:c}=o;const u=[new Mt(c[1].buf),new Mt(c[2].buf),new Mt(c[3].buf)];const d=(new Ut).from(a,u.map((t=>t.toString())),2).to(kt(),1e4);d.sign(Vt,1),d.sign(Yt,1);const p=d.inputs[0].script;const l=Nt.SCRIPT_VERIFY_P2SH;const f=(new Nt).verify(p,o,d,0,l);e.expect(f).to.deep.eq(!0)})),it("should spend from an transaction with a bare multisig output and dummy data",(()=>{const t=Buffer.from("11".repeat(512),"hex");const n=(new Dt).add("OP_1").add(zt.toBuffer()).add(Gt.toBuffer()).add(Qt.toBuffer()).add(t).add("OP_4").add("OP_CHECKMULTISIG");const r=new ft;r.tx.from([new Ut.UnspentOutput(Et())]),r.tx.addOutput(new Lt({script:n,satoshis:T})),r.tx.sign(At(),1);const s=r.tx.outputs[0];const o=s.script;const i=Math.round(s.satoshis);const a=new Ft({txId:r.tx.id,outputIndex:0,script:o,satoshis:i});const{chunks:c}=o;const u=[new Mt(c[1].buf),new Mt(c[2].buf),new Mt(c[3].buf)];const d=(new Ut).from(a,u.map((t=>t.toString())),2).to(kt(),1e4);d.sign(Vt,1),d.sign(Yt,1);const p=d.inputs[0].script;const l=Nt.SCRIPT_VERIFY_P2SH;const f=(new Nt).verify(p,o,d,0,l);e.expect(f).to.deep.eq(!0)}))})),describe("createDataOuts",(()=>{it("should add a data output",(()=>{const t=new ft;const n=[qt()];const r=n.map((t=>t.toString()));const s={a:1};t.createDataOuts([Object.assign({_owners:r,_amount:ne},s)]),e.expect(t).to.not.be.undefined,e.expect(t.tx).to.not.be.undefined,e.expect(t.tx.outputs).to.not.be.undefined,e.expect(t.tx.outputs.length).eq(2),e.expect(t.tx.outputs[0].script.toASM()).to.deep.eq(rt(n,I,P,!1).toASM()),e.expect(JSON.parse(t.dataPrefix)).to.deep.eq([s])})),it("should add a large data output",(()=>y(void 0,void 0,void 0,(function*(){const t=new ft;const n=[qt()];const r=[{a:"1".repeat(100),_owners:n.map((t=>t.toString())),_amount:ne}];t.createDataOuts(r),e.expect(t).to.not.be.undefined,e.expect(t.tx).to.not.be.undefined,e.expect(t.tx.outputs).to.not.be.undefined,e.expect(t.tx.outputs.length).eq(3),e.expect(t.tx.outputs[0].script.toASM()).to.deep.eq(rt(n,I,P,!1).toASM()),e.expect(yield t.getOutData()).to.deep.eq(r)}))))}))}));

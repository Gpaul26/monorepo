"use strict";var t=require("bitcoin-computer-bitcore");var e=require("chai");var r=require("crypto");var o=require("crypto-js");var n=require("eciesjs");require("exponential-backoff"),require("axios"),require("child_process"),require("ses"),require("@endo/static-module-record");var s=require("http");var i=require("https");var a=require("url");var c=require("util");function l(t){return t&&"object"==typeof t&&"default"in t?t:{default:t}}function u(t){if(t&&t.__esModule)return t;var e=Object.create(null);return t&&Object.keys(t).forEach((function(r){if("default"!==r){var o=Object.getOwnPropertyDescriptor(t,r);Object.defineProperty(e,r,o.get?o:{enumerable:!0,get:function(){return t[r]}})}})),e.default=t,Object.freeze(e)}var d=l(r);var p=l(o);var f=u(n);var g=l(s);var h=l(i);var b=l(a);var y=l(c);function v(t,e){var r={};for(var o in t)Object.prototype.hasOwnProperty.call(t,o)&&e.indexOf(o)<0&&(r[o]=t[o]);if(null!=t&&"function"==typeof Object.getOwnPropertySymbols){var n=0;for(o=Object.getOwnPropertySymbols(t);n<o.length;n++)e.indexOf(o[n])<0&&Object.prototype.propertyIsEnumerable.call(t,o[n])&&(r[o[n]]=t[o[n]])}return r}function m(t){return Buffer.from(p.default.SHA256(t).toString(),"hex").toString("hex").substr(0,4)}function _(t){return`${m(t)};${t}`}function S(t){const e=t.substr(0,4);const r=t.substr(5);if(!function(t,e){return m(t)===e}(r,e))throw new Error("Decryption failure");return r}function w(t){if(void 0!==t._readers){const{_readers:e,_url:r,_owners:o,_amount:n}=t,s=v(t,["_readers","_url","_owners","_amount"]);const i=function(t,e){const r=d.default.randomBytes(32).toString("hex");const o=function(t,e){if(!/^[0-9a-f]{64}$/.test(e))throw new Error("Invalid secret");const r=Buffer.from(e,"hex").toString("binary");const o=_(t);return p.default.AES.encrypt(o,r).toString()}(t,r);const n=e.map((t=>function(t,e){if(!/^0[2-3][0-9a-f]{64}|04[0-9a-f]{128}$/.test(e))throw new Error("Invalid publicKey");const r=_(t);return f.encrypt(e,Buffer.from(r,"utf8")).toString("base64")}(r,t)));return{__cypher:o,__secrets:n}}(JSON.stringify(s),e);return void 0!==r&&(i._url=r),void 0!==o&&(i._owners=o),void 0!==n&&(i._amount=n),i}return t}function B(t,e){if(function(t){return void 0!==t.__cypher&&void 0!==t.__secrets}(t)){const{__cypher:r,__secrets:o}=t,n=v(t,["__cypher","__secrets"]);return Object.assign(Object.assign(Object.assign({},n),JSON.parse(function({__cypher:t,__secrets:e},r){let o="";if(r.forEach((r=>{e.forEach((e=>{try{const n=function(t,e){if(!/^[0-9a-f]{64}$/.test(e))throw new Error("Invalid privateKey");return S(f.decrypt(e,Buffer.from(t,"base64")).toString("utf8"))}(e,r);o=function(t,e){if(!/^[0-9a-f]{64}$/.test(e))throw new Error("Invalid secret");const r=Buffer.from(e,"hex").toString("binary");return S(p.default.AES.decrypt(t,r).toString(p.default.enc.Utf8))}(t,n)}catch(t){const e=["Decryption failure","Unsupported state or unable to authenticate data"];if(t instanceof Error&&!e.includes(t.message))throw t}}))})),o)return o;throw new Error("Decryption failure")}({__cypher:r,__secrets:o},e))),{_readers:[]})}return t}const j=process.env.CHAIN||"LTC";const O=process.env.NETWORK||"testnet";function P(t=j,e=O){if("testnet"===e||"regtest"===e)return 1;if("BTC"===t)return 0;if("LTC"===t)return 2;if("DOGE"===t)return 3;if("BCH"===t)return 145;if("BSV"===t)return 236;throw new Error(`Unsupported chain ${t}`)}function T(){return Math.round(Math.random()*Math.pow(2,31))}process.env.BCN_URL,process.env.RPC_USER,process.env.RPC_PASSWORD,parseInt(process.env.BC_DUST_LIMIT||"",10),parseInt(process.env.BC_DEFAULT_FEE||"",10),parseInt(process.env.BC_SCRIPT_CHUNK_SIZE||"",10);var C=g.default;var A=h.default;var R=b.default;function x(t){"string"==typeof t&&(t=function(t){var e=R.parse(t);var r=e.hostname;var o=parseInt(e.port,10);var n=e.protocol;n=n.substring(0,n.length-1);var s=e.auth.split(":");return{host:r,port:o,protocol:n,user:s[0]?decodeURIComponent(s[0]):null,pass:s[1]?decodeURIComponent(s[1]):null}}(t)),t=t||{},this.host=t.host||"127.0.0.1",this.port=t.port||8332,this.user=t.user||"user",this.pass=t.pass||"pass",this.protocol="http"===t.protocol?C:A,this.batchedCalls=null,this.disableAgent=t.disableAgent||!1;var e=void 0!==t.rejectUnauthorized;this.rejectUnauthorized=!e||t.rejectUnauthorized,x.config.log?this.log=x.config.log:this.log=x.loggers[x.config.logger||"normal"]}var k=console.log.bind(console);var I=function(){};function E(t,e){var r=this;t=JSON.stringify(t);var o=this.user+":"+this.pass;var n=Buffer.from&&Buffer.from!==Uint8Array.from?Buffer.from(o):new Buffer(o);this.auth=n.toString("base64");var s={host:r.host,path:"/",method:"POST",port:r.port,rejectUnauthorized:r.rejectUnauthorized,agent:!r.disableAgent&&void 0};if(r.httpOptions)for(var i in r.httpOptions)s[i]=r.httpOptions[i];var a=!1;var c="Bitcoin JSON-RPC: ";var l=this.protocol.request(s,(function(t){var o="";t.on("data",(function(t){o+=t})),t.on("end",(function(){if(!a)if(a=!0,401!==t.statusCode)if(403!==t.statusCode){if(500===t.statusCode&&"Work queue depth exceeded"===o.toString("utf8")){var n=new Error("Bitcoin JSON-RPC: "+o.toString("utf8"));return n.code=429,void e(n)}var s;try{s=JSON.parse(o)}catch(n){r.log.err(n.stack),r.log.err(o),r.log.err("HTTP Status code:"+t.statusCode);var i=new Error(c+"Error Parsing JSON: "+n.message);return void e(i)}e(s.error,s)}else e(new Error(c+"Connection Rejected: 403 Forbidden"));else e(new Error(c+"Connection Rejected: 401 Unnauthorized"))}))}));l.on("error",(function(t){var r=new Error(c+"Request Error: "+t.message);a||(a=!0,e(r))})),l.setHeader("Content-Length",t.length),l.setHeader("Content-Type","application/json"),l.setHeader("Authorization","Basic "+r.auth),l.write(t),l.end()}x.loggers={none:{info:I,warn:I,err:I,debug:I},normal:{info:k,warn:k,err:k,debug:I},debug:{info:k,warn:k,err:k,debug:k}},x.config={logger:"normal"},x.prototype.batch=function(t,e){this.batchedCalls=[],t(),E.call(this,this.batchedCalls,e),this.batchedCalls=null},x.callspec={abandonTransaction:"str",abortRescan:"",addMultiSigAddress:"",addNode:"",analyzePSBT:"str",backupWallet:"",bumpFee:"str",clearBanned:"",combinePSBT:"obj",combineRawTransaction:"obj",convertToPSBT:"str",createMultiSig:"",createPSBT:"obj",createRawTransaction:"obj obj",createWallet:"str",decodePSBT:"str",decodeScript:"str",decodeRawTransaction:"",deriveAddresses:"str",disconnectNode:"",dumpPrivKey:"",dumpWallet:"str",encryptWallet:"",enumerateSigners:"",estimateFee:"",estimateSmartFee:"int str",estimatePriority:"int",generate:"int",generateBlock:"str obj",generateToAddress:"int str",generateToDescriptor:"int str",getAccount:"",getAccountAddress:"str",getAddedNodeInfo:"",getAddressMempool:"obj",getAddressUtxos:"obj",getAddressBalance:"obj",getAddressDeltas:"obj",getAddressesByLabel:"str",getAddressInfo:"str",getAddressTxids:"obj",getAddressesByAccount:"",getBalance:"str int",getBalances:"",getBestBlockHash:"",getBlockDeltas:"str",getBlock:"str int",getBlockchainInfo:"",getBlockCount:"",getBlockFilter:"str",getBlockHashes:"int int obj",getBlockHash:"int",getBlockHeader:"str",getBlockNumber:"",getBlockStats:"str",getBlockTemplate:"",getConnectionCount:"",getChainTips:"",getChainTxStats:"",getDescriptorInfo:"str",getDifficulty:"",getGenerate:"",getHashesPerSec:"",getIndexInfo:"",getInfo:"",getMemoryInfo:"",getMemoryPool:"",getMemPoolAncestors:"str",getMemPoolDescendants:"str",getMemPoolEntry:"str",getMemPoolInfo:"",getMiningInfo:"",getNetTotals:"",getNetworkHashPS:"",getNetworkInfo:"",getNewAddress:"str str",getNodeAddresses:"",getPeerInfo:"",getRawChangeAddress:"",getRawMemPool:"bool",getRawTransaction:"str int",getReceivedByAccount:"str int",getReceivedByAddress:"str int",getReceivedByLabel:"str",getRpcInfo:"",getSpentInfo:"obj",getTransaction:"",getTxOut:"str int bool",getTxOutProof:"",getTxOutSetInfo:"",getUnconfirmedBalance:"",getWalletInfo:"",getWork:"",getZmqNotifications:"",finalizePSBT:"str",fundRawTransaction:"str",help:"",importAddress:"str str bool",importDescriptors:"str",importMulti:"obj obj",importPrivKey:"str str bool",importPrunedFunds:"str, str",importPubKey:"str",importWallet:"str",invalidateBlock:"str",joinPSBTs:"obj",keyPoolRefill:"",listAccounts:"int",listAddressGroupings:"",listBanned:"",listDescriptors:"",listLabels:"",listLockUnspent:"bool",listReceivedByAccount:"int bool",listReceivedByAddress:"int bool",listReceivedByLabel:"",listSinceBlock:"str int",listTransactions:"str int int",listUnspent:"int int",listWalletDir:"",listWallets:"",loadWallet:"str",lockUnspent:"",logging:"",move:"str str float int str",ping:"",preciousBlock:"str",prioritiseTransaction:"str float int",pruneBlockChain:"int",psbtBumpFee:"str",removePrunedFunds:"str",reScanBlockChain:"",saveMemPool:"",send:"obj",setHDSeed:"",setLabel:"str str",setWalletFlag:"str",scanTxOutSet:"str",sendFrom:"str str float int str str",sendMany:"str obj int str",sendRawTransaction:"str",sendToAddress:"str float str str",setAccount:"",setBan:"str str",setNetworkActive:"bool",setGenerate:"bool int",setTxFee:"float",signMessage:"",signMessageWithPrivKey:"str str",signRawTransaction:"",signRawTransactionWithKey:"str obj",signRawTransactionWithWallet:"str",stop:"",submitBlock:"str",submitHeader:"str",testMemPoolAccept:"obj",unloadWallet:"",upgradeWallet:"",uptime:"",utxoUpdatePSBT:"str",validateAddress:"",verifyChain:"",verifyMessage:"",verifyTxOutProof:"str",walletCreateFundedPSBT:"",walletDisplayAddress:"str",walletLock:"",walletPassPhrase:"string int",walletPassphraseChange:"",walletProcessPSBT:"str"};var q=function(t,e,r){return Array.prototype.slice.call(t,e,r)};function M(){return parseInt(1e5*Math.random())}!function(t,e,r){function o(t,e){return function(){var o=arguments.length-1;this.batchedCalls&&(o=arguments.length);for(var n=0;n<o;n++)e[n]&&(arguments[n]=e[n](arguments[n]));this.batchedCalls?this.batchedCalls.push({jsonrpc:"2.0",method:t,params:q(arguments),id:M()}):r.call(this,{method:t,params:q(arguments,0,arguments.length-1),id:M()},arguments[arguments.length-1])}}var n={str:function(t){return t.toString()},int:function(t){return parseFloat(t)},float:function(t){return parseFloat(t)},bool:function(t){return!0===t||"1"==t||"true"==t||"true"==t.toString().toLowerCase()},obj:function(t){return"string"==typeof t?JSON.parse(t):t}};for(var s in e){var i=[];if(e[s].length){i=e[s].split(" ");for(var a=0;a<i.length;a++)n[i[a]]?i[a]=n[i[a]]:i[a]=n.str}var c=s.toLowerCase();t.prototype[s]=o(c,i),t.prototype[c]=t.prototype[s]}}(x,x.callspec,E);var U=x;const N=new U({protocol:process.env.RPC_PROTOCOL,user:process.env.RPC_USER,pass:process.env.RPC_PASSWORD,host:process.env.RPC_HOST,port:process.env.RPC_PORT});y.default.promisify(U.prototype.createwallet.bind(N)),y.default.promisify(U.prototype.getaddressinfo.bind(N)),y.default.promisify(U.prototype.getBlock.bind(N)),y.default.promisify(U.prototype.getBlockchainInfo.bind(N)),y.default.promisify(U.prototype.getBlockHash.bind(N)),y.default.promisify(U.prototype.generateToAddress.bind(N)),y.default.promisify(U.prototype.getRawTransaction.bind(N)),y.default.promisify(U.prototype.importaddress.bind(N)),y.default.promisify(U.prototype.listunspent.bind(N)),y.default.promisify(U.prototype.sendRawTransaction.bind(N));const{Opcode:D,Script:W,Mnemonic:H,crypto:K,Transaction:F,encoding:L}=t.Bitcoin;function z(t=0){return function(t=0){return function(t=0){return function(t=0){return new H(function(t=0){return"travel upgrade inside soda birth essence junk merit never twenty system opinion;toddler hockey salute wheel harvest video narrow riot guitar lake sea call;cannon hour begin test replace fury motion squirrel envelope announce neck culture".split(";")[t]}(t))}().toHDPrivateKey("",O).derive(function({chain:t=j,network:e=O,account:r=T()}={}){return function({purpose:t=44,coinType:e=2,account:r=0}={}){return`m/${t.toString()}'/${e.toString()}'/${r.toString()}'`}({account:r,coinType:P(t,e)})}({account:t}))}(t).privateKey}(t).toPublicKey()}const{PrivateKey:$}=t.Bitcoin;describe("encrypt",(()=>{it("Should be the id if _readers is not defined",(()=>{const t={_owners:[z(0).toString()],_amount:1,data:{a:"a"}};e.expect(w(t)).to.deep.eq(t)})),it("Should encrypt the object if _readers is defined",(()=>{const t={_readers:[z(0).toString()]};const r={a:"a"};e.expect(w(Object.assign(Object.assign({},t),r))).not.to.deep.eq(Object.assign(Object.assign({},t),r));const o=w(Object.assign(Object.assign({},t),r));e.expect(o).to.be.an("object"),e.expect(o.__cypher).to.be.an("string"),e.expect(o.__secrets).to.be.an("array").that.have.lengthOf(1)})),it("Should encrypt the object if all meta data is defined",(()=>{const t={_readers:[z(0).toString()],_owners:[z(0).toString()],_amount:1,_url:"url"};const r={a:"a"};const o=w(Object.assign(Object.assign({},t),r));e.expect(o).not.to.deep.eq(Object.assign(Object.assign({},t),r)),delete t._readers,e.expect(o).to.have.property("_owners",t._owners),e.expect(o).to.have.property("_amount",t._amount),e.expect(o).to.have.property("_url",t._url),e.expect(o).to.be.an("object"),e.expect(o.__cypher).to.be.an("string"),e.expect(o.__secrets).to.be.an("array").that.have.lengthOf(1)}))})),describe("decrypt",(()=>{it("Should be the id if _readers is not defined",(()=>{const t={_owners:[z(0).toString()],_amount:1,a:"a"};e.expect(B(w(t),[(new $).toBuffer().toString("hex")])).to.deep.eq(t)})),it("Should be the inverse of encrypt if readers are defined",(()=>{const t=new $;const r=t.toPublicKey();const o=t.toBuffer().toString("hex");const n={_readers:[r.toString(),(new $).toPublicKey().toString()]};const s={a:"a"};const i=B(w(Object.assign(Object.assign({},n),s)),[o]);n._readers=[],e.expect(i).to.deep.eq(Object.assign(Object.assign({},n),s))})),it("Should be the inverse of encrypt if all meta data is defined",(()=>{const t=new $;const r=t.toPublicKey();const o=t.toBuffer().toString("hex");const n=r.toString();const s=new $;const i=s.toPublicKey();const a=s.toBuffer().toString("hex");const c={_readers:[n],_owners:[i.toString()],_amount:1,_url:"url"};const l={a:"a"};const u=B(w(Object.assign(Object.assign({},c),l)),[o,a]);c._readers=[],e.expect(u).to.deep.eq(Object.assign(Object.assign({},c),l))})),it("Should throw an error if the wrong private key is used",(()=>{const t=(new $).toPublicKey().toString();const r=new $;const o=r.toPublicKey();const n=r.toBuffer().toString("hex");const s={_readers:[t],_owners:[o.toString()],_amount:1,_url:"url"};const i=w(Object.assign(Object.assign({},s),{a:"a"}));e.expect((()=>B(i,[n]))).throws("Decryption failure")}))}));
